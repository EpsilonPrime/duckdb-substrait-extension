# name: test/sql/test_substrait_function_name.test
# description: Test conversion of DuckDB built-in function names to Substrait function names
# group: [sql]

require substrait

statement ok
PRAGMA enable_verification

statement ok
CREATE table ints (i INT);

statement ok
INSERT INTO ints VALUES (-10), (100), (3), (43);

statement ok
CREATE table varchars (v VARCHAR);

statement ok
INSERT INTO varchars VALUES ('Duck'), ('DB'), ('ðŸ¦†'), ('Quack');

statement ok
CALL get_substrait('SELECT stddev(i) FROM ints');

statement ok
CALL get_substrait('SELECT count(i) FROM ints');

statement ok
CALL get_substrait('SELECT mod(i,3) FROM ints');

statement ok
CALL get_substrait('SELECT sum(i) FROM ints');

statement ok
CALL get_substrait('SELECT abs(i) FROM ints');

statement ok
CALL get_substrait('SELECT prefix(i, ''1'') FROM ints');

statement ok
CALL get_substrait('SELECT suffix(i, ''3'') FROM ints');

statement ok
CALL get_substrait('SELECT substr(v, 1, 1) FROM varchars');

statement ok
CALL get_substrait('SELECT length(v) FROM varchars');

statement ok
CALL get_substrait('SELECT isnan(i) FROM ints');

statement ok
CALL get_substrait('SELECT isinf(i) FROM ints');

statement ok
CALL get_substrait('SELECT isfinite(i) FROM ints');

# -------------------------------------------------------------------------------------

query I
CALL get_substrait_json('SELECT * FROM varchars WHERE v LIKE ''Q%a%''');
----
{"extensions":[{"extensionFunction":{"functionAnchor":1,"name":"gte"}},{"extensionFunction":{"functionAnchor":2,"name":"lt"}},{"extensionFunction":{"functionAnchor":3,"name":"and"}},{"extensionFunction":{"functionAnchor":4,"name":"is_not_null"}},{"extensionFunction":{"functionAnchor":5,"name":"like"}}],"relations":[{"root":{"input":{"project":{"input":{"filter":{"input":{"read":{"baseSchema":{"names":["v"],"struct":{"types":[{"varchar":{"length":5,"nullability":"NULLABILITY_NULLABLE"}}],"nullability":"NULLABILITY_REQUIRED"}},"filter":{"scalarFunction":{"functionReference":3,"outputType":{"bool":{"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"scalarFunction":{"functionReference":3,"outputType":{"bool":{"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"scalarFunction":{"functionReference":1,"outputType":{"varchar":{"length":1,"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}},{"value":{"literal":{"string":"Q"}}}]}}},{"value":{"scalarFunction":{"functionReference":2,"outputType":{"varchar":{"length":1,"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}},{"value":{"literal":{"string":"R"}}}]}}}]}}},{"value":{"scalarFunction":{"functionReference":4,"outputType":{"varchar":{"length":1,"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}}]}}}]}},"projection":{"select":{"structItems":[{}]},"maintainSingularStruct":true},"namedTable":{"names":["varchars"]}}},"condition":{"scalarFunction":{"functionReference":5,"outputType":{"bool":{"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}},{"value":{"literal":{"string":"Q%a%"}}}]}}}},"expressions":[{"selection":{"directReference":{"structField":{}},"rootReference":{}}}]}},"names":["v"]}}],"version":{"minorNumber":24,"producer":"DuckDB"}}

query I
CALL from_substrait_json('{"extensions":[{"extensionFunction":{"functionAnchor":1,"name":"gte"}},{"extensionFunction":{"functionAnchor":2,"name":"lt"}},{"extensionFunction":{"functionAnchor":3,"name":"and"}},{"extensionFunction":{"functionAnchor":4,"name":"is_not_null"}},{"extensionFunction":{"functionAnchor":5,"name":"like"}}],"relations":[{"root":{"input":{"project":{"input":{"filter":{"input":{"read":{"baseSchema":{"names":["v"],"struct":{"types":[{"varchar":{"length":5,"nullability":"NULLABILITY_NULLABLE"}}],"nullability":"NULLABILITY_REQUIRED"}},"filter":{"scalarFunction":{"functionReference":3,"outputType":{"bool":{"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"scalarFunction":{"functionReference":3,"outputType":{"bool":{"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"scalarFunction":{"functionReference":1,"outputType":{"varchar":{"length":1,"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}},{"value":{"literal":{"string":"Q"}}}]}}},{"value":{"scalarFunction":{"functionReference":2,"outputType":{"varchar":{"length":1,"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}},{"value":{"literal":{"string":"R"}}}]}}}]}}},{"value":{"scalarFunction":{"functionReference":4,"outputType":{"varchar":{"length":1,"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}}]}}}]}},"projection":{"select":{"structItems":[{}]},"maintainSingularStruct":true},"namedTable":{"names":["varchars"]}}},"condition":{"scalarFunction":{"functionReference":5,"outputType":{"bool":{"nullability":"NULLABILITY_NULLABLE"}},"arguments":[{"value":{"selection":{"directReference":{"structField":{}},"rootReference":{}}}},{"value":{"literal":{"string":"Q%a%"}}}]}}}},"expressions":[{"selection":{"directReference":{"structField":{}},"rootReference":{}}}]}},"names":["v"]}}],"version":{"minorNumber":24,"producer":"DuckDB"}}');
----
Quack

query I
SELECT * FROM varchars WHERE v LIKE 'Q%a%k'
----
Quack
