# name: test/sql/test_between.test
# description: Test BETWEEN comparison
# group: [sql]

require substrait

require tpcds

statement ok
PRAGMA enable_verification

statement ok
CALL dsdgen(sf=0.1)

statement ok
create table t as select * from range(100) as t(x)

statement ok
CALL get_substrait('select * from t where x BETWEEN 4 AND 6');

#Q 2
#statement ok
#CALL get_substrait('WITH wscs AS (SELECT sold_date_sk, sales_price FROM (SELECT ws_sold_date_sk sold_date_sk, ws_ext_sales_price sales_price FROM web_sales) UNION ALL (SELECT cs_sold_date_sk sold_date_sk, cs_ext_sales_price sales_price FROM catalog_sales)), wswscs AS (SELECT d_week_seq, Sum(CASE WHEN ( d_day_name = ''Sunday'' ) THEN sales_price ELSE NULL END) sun_sales, Sum(CASE WHEN ( d_day_name = ''Monday'' ) THEN sales_price ELSE NULL END) mon_sales, Sum(CASE WHEN ( d_day_name = ''Tuesday'' ) THEN sales_price ELSE NULL END) tue_sales, Sum(CASE WHEN ( d_day_name = ''Wednesday'' ) THEN sales_price ELSE NULL END) wed_sales, Sum(CASE WHEN ( d_day_name = ''Thursday'' ) THEN sales_price ELSE NULL END) thu_sales, Sum(CASE WHEN ( d_day_name = ''Friday'' ) THEN sales_price ELSE NULL END) fri_sales, Sum(CASE WHEN ( d_day_name = ''Saturday'' ) THEN sales_price ELSE NULL END) sat_sales FROM wscs, date_dim WHERE d_date_sk = sold_date_sk GROUP BY d_week_seq) SELECT d_week_seq1, Round(sun_sales1 / sun_sales2, 2), Round(mon_sales1 / mon_sales2, 2), Round(tue_sales1 / tue_sales2, 2), Round(wed_sales1 / wed_sales2, 2), Round(thu_sales1 / thu_sales2, 2), Round(fri_sales1 / fri_sales2, 2), Round(sat_sales1 / sat_sales2, 2) FROM (SELECT wswscs.d_week_seq d_week_seq1, sun_sales sun_sales1, mon_sales mon_sales1, tue_sales tue_sales1, wed_sales wed_sales1, thu_sales thu_sales1, fri_sales fri_sales1, sat_sales sat_sales1 FROM wswscs, date_dim WHERE date_dim.d_week_seq = wswscs.d_week_seq AND d_year = 1998) y, (SELECT wswscs.d_week_seq d_week_seq2, sun_sales sun_sales2, mon_sales mon_sales2, tue_sales tue_sales2, wed_sales wed_sales2, thu_sales thu_sales2, fri_sales fri_sales2, sat_sales sat_sales2 FROM wswscs, date_dim WHERE date_dim.d_week_seq = wswscs.d_week_seq AND d_year = 1998 + 1) z WHERE d_week_seq1 = d_week_seq2 - 53 ORDER BY d_week_seq1; ')

#Q 13
#statement ok
#CALL get_substrait('SELECT Avg(ss_quantity), Avg(ss_ext_sales_price), Avg(ss_ext_wholesale_cost), Sum(ss_ext_wholesale_cost) FROM store_sales, store, customer_demographics, household_demographics, customer_address, date_dim WHERE s_store_sk = ss_store_sk AND ss_sold_date_sk = d_date_sk AND d_year = 2001 AND ( ( ss_hdemo_sk = hd_demo_sk AND cd_demo_sk = ss_cdemo_sk AND cd_marital_status = ''U'' AND cd_education_status = ''Advanced Degree'' AND ss_sales_price BETWEEN 100.00 AND 150.00 AND hd_dep_count = 3 ) OR ( ss_hdemo_sk = hd_demo_sk AND cd_demo_sk = ss_cdemo_sk AND cd_marital_status = ''M'' AND cd_education_status = ''Primary'' AND ss_sales_price BETWEEN 50.00 AND 100.00 AND hd_dep_count = 1 ) OR ( ss_hdemo_sk = hd_demo_sk AND cd_demo_sk = ss_cdemo_sk AND cd_marital_status = ''D'' AND cd_education_status = ''Secondary'' AND ss_sales_price BETWEEN 150.00 AND 200.00 AND hd_dep_count = 1 ) ) AND ( ( ss_addr_sk = ca_address_sk AND ca_country = ''United States'' AND ca_state IN ( ''AZ'', ''NE'', ''IA'' ) AND ss_net_profit BETWEEN 100 AND 200 ) OR ( ss_addr_sk = ca_address_sk AND ca_country = ''United States'' AND ca_state IN ( ''MS'', ''CA'', ''NV'' ) AND ss_net_profit BETWEEN 150 AND 300 ) OR ( ss_addr_sk = ca_address_sk AND ca_country = ''United States'' AND ca_state IN ( ''GA'', ''TX'', ''NJ'' ) AND ss_net_profit BETWEEN 50 AND 250 ) ); ')

