on: [push, pull_request,repository_dispatch]

defaults:
  run:
    shell: bash

jobs:
  R:
    name: R
    runs-on: ubuntu-latest
    env:
      GEN: ninja

    steps:
    - name: Install required ubuntu packages
      shell: bash
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq software-properties-common
        sudo add-apt-repository ppa:git-core/ppa
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk zip maven unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client


    - name: Install Git 2.18.5
      shell: bash
      run: |
        wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
        tar xvf v2.18.5.tar.gz
        cd git-2.18.5
        make
        make prefix=/usr install
        git --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - uses: ./duckdb/.github/actions/ubuntu_16_setup
      with:
        aarch64_cross_compile: 0
        openssl: 0

    - name: Update DuckDB submodule
      run: |
        git config --global --add safe.directory '*'
        make pull

    - name: Install R Dependencies
      env:
        GITHUB_PAT: ${{ github.token }}
      shell: bash
      run: |
        mkdir -p $HOME/.R
        R -f tools/rpkg/dependencies.R

    - name: Build Extension
      run: |
        make release

    - name: Build DuckDB (R)
      run: |
        cd duckdb/tools/rpkg
        ./configure
        R CMD build .
        R CMD INSTALL -d duckdb_*.tar.gz

    - name: Test R
      run: |
        (cd test/r && R -f test_substrait.R)
