// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/function.proto

#ifndef PROTOBUF_INCLUDED_substrait_2ffunction_2eproto
#define PROTOBUF_INCLUDED_substrait_2ffunction_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "substrait/parameterized_types.pb.h"
#include "substrait/type.pb.h"
#include "substrait/type_expressions.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ffunction_2eproto 

namespace protobuf_substrait_2ffunction_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[12];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_substrait_2ffunction_2eproto
namespace substrait {
class FunctionSignature;
class FunctionSignatureDefaultTypeInternal;
extern FunctionSignatureDefaultTypeInternal _FunctionSignature_default_instance_;
class FunctionSignature_Aggregate;
class FunctionSignature_AggregateDefaultTypeInternal;
extern FunctionSignature_AggregateDefaultTypeInternal _FunctionSignature_Aggregate_default_instance_;
class FunctionSignature_Argument;
class FunctionSignature_ArgumentDefaultTypeInternal;
extern FunctionSignature_ArgumentDefaultTypeInternal _FunctionSignature_Argument_default_instance_;
class FunctionSignature_Argument_EnumArgument;
class FunctionSignature_Argument_EnumArgumentDefaultTypeInternal;
extern FunctionSignature_Argument_EnumArgumentDefaultTypeInternal _FunctionSignature_Argument_EnumArgument_default_instance_;
class FunctionSignature_Argument_TypeArgument;
class FunctionSignature_Argument_TypeArgumentDefaultTypeInternal;
extern FunctionSignature_Argument_TypeArgumentDefaultTypeInternal _FunctionSignature_Argument_TypeArgument_default_instance_;
class FunctionSignature_Argument_ValueArgument;
class FunctionSignature_Argument_ValueArgumentDefaultTypeInternal;
extern FunctionSignature_Argument_ValueArgumentDefaultTypeInternal _FunctionSignature_Argument_ValueArgument_default_instance_;
class FunctionSignature_Description;
class FunctionSignature_DescriptionDefaultTypeInternal;
extern FunctionSignature_DescriptionDefaultTypeInternal _FunctionSignature_Description_default_instance_;
class FunctionSignature_FinalArgNormal;
class FunctionSignature_FinalArgNormalDefaultTypeInternal;
extern FunctionSignature_FinalArgNormalDefaultTypeInternal _FunctionSignature_FinalArgNormal_default_instance_;
class FunctionSignature_FinalArgVariadic;
class FunctionSignature_FinalArgVariadicDefaultTypeInternal;
extern FunctionSignature_FinalArgVariadicDefaultTypeInternal _FunctionSignature_FinalArgVariadic_default_instance_;
class FunctionSignature_Implementation;
class FunctionSignature_ImplementationDefaultTypeInternal;
extern FunctionSignature_ImplementationDefaultTypeInternal _FunctionSignature_Implementation_default_instance_;
class FunctionSignature_Scalar;
class FunctionSignature_ScalarDefaultTypeInternal;
extern FunctionSignature_ScalarDefaultTypeInternal _FunctionSignature_Scalar_default_instance_;
class FunctionSignature_Window;
class FunctionSignature_WindowDefaultTypeInternal;
extern FunctionSignature_WindowDefaultTypeInternal _FunctionSignature_Window_default_instance_;
}  // namespace substrait
namespace google {
namespace protobuf {
template<> ::substrait::FunctionSignature* Arena::CreateMaybeMessage<::substrait::FunctionSignature>(Arena*);
template<> ::substrait::FunctionSignature_Aggregate* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Aggregate>(Arena*);
template<> ::substrait::FunctionSignature_Argument* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Argument>(Arena*);
template<> ::substrait::FunctionSignature_Argument_EnumArgument* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Argument_EnumArgument>(Arena*);
template<> ::substrait::FunctionSignature_Argument_TypeArgument* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Argument_TypeArgument>(Arena*);
template<> ::substrait::FunctionSignature_Argument_ValueArgument* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Argument_ValueArgument>(Arena*);
template<> ::substrait::FunctionSignature_Description* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Description>(Arena*);
template<> ::substrait::FunctionSignature_FinalArgNormal* Arena::CreateMaybeMessage<::substrait::FunctionSignature_FinalArgNormal>(Arena*);
template<> ::substrait::FunctionSignature_FinalArgVariadic* Arena::CreateMaybeMessage<::substrait::FunctionSignature_FinalArgVariadic>(Arena*);
template<> ::substrait::FunctionSignature_Implementation* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Implementation>(Arena*);
template<> ::substrait::FunctionSignature_Scalar* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Scalar>(Arena*);
template<> ::substrait::FunctionSignature_Window* Arena::CreateMaybeMessage<::substrait::FunctionSignature_Window>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace substrait {

enum FunctionSignature_FinalArgVariadic_ParameterConsistency {
  FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_UNSPECIFIED = 0,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_CONSISTENT = 1,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_INCONSISTENT = 2,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_FunctionSignature_FinalArgVariadic_ParameterConsistency_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FunctionSignature_FinalArgVariadic_ParameterConsistency_FunctionSignature_FinalArgVariadic_ParameterConsistency_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FunctionSignature_FinalArgVariadic_ParameterConsistency_IsValid(int value);
const FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MIN = FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_UNSPECIFIED;
const FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MAX = FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_INCONSISTENT;
const int FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_ARRAYSIZE = FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MAX + 1;

const ::google::protobuf::EnumDescriptor* FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor();
inline const ::std::string& FunctionSignature_FinalArgVariadic_ParameterConsistency_Name(FunctionSignature_FinalArgVariadic_ParameterConsistency value) {
  return ::google::protobuf::internal::NameOfEnum(
    FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor(), value);
}
inline bool FunctionSignature_FinalArgVariadic_ParameterConsistency_Parse(
    const ::std::string& name, FunctionSignature_FinalArgVariadic_ParameterConsistency* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionSignature_FinalArgVariadic_ParameterConsistency>(
    FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor(), name, value);
}
enum FunctionSignature_Window_WindowType {
  FunctionSignature_Window_WindowType_WINDOW_TYPE_UNSPECIFIED = 0,
  FunctionSignature_Window_WindowType_WINDOW_TYPE_STREAMING = 1,
  FunctionSignature_Window_WindowType_WINDOW_TYPE_PARTITION = 2,
  FunctionSignature_Window_WindowType_FunctionSignature_Window_WindowType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FunctionSignature_Window_WindowType_FunctionSignature_Window_WindowType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FunctionSignature_Window_WindowType_IsValid(int value);
const FunctionSignature_Window_WindowType FunctionSignature_Window_WindowType_WindowType_MIN = FunctionSignature_Window_WindowType_WINDOW_TYPE_UNSPECIFIED;
const FunctionSignature_Window_WindowType FunctionSignature_Window_WindowType_WindowType_MAX = FunctionSignature_Window_WindowType_WINDOW_TYPE_PARTITION;
const int FunctionSignature_Window_WindowType_WindowType_ARRAYSIZE = FunctionSignature_Window_WindowType_WindowType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FunctionSignature_Window_WindowType_descriptor();
inline const ::std::string& FunctionSignature_Window_WindowType_Name(FunctionSignature_Window_WindowType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FunctionSignature_Window_WindowType_descriptor(), value);
}
inline bool FunctionSignature_Window_WindowType_Parse(
    const ::std::string& name, FunctionSignature_Window_WindowType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionSignature_Window_WindowType>(
    FunctionSignature_Window_WindowType_descriptor(), name, value);
}
enum FunctionSignature_Implementation_Type {
  FunctionSignature_Implementation_Type_TYPE_UNSPECIFIED = 0,
  FunctionSignature_Implementation_Type_TYPE_WEB_ASSEMBLY = 1,
  FunctionSignature_Implementation_Type_TYPE_TRINO_JAR = 2,
  FunctionSignature_Implementation_Type_FunctionSignature_Implementation_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FunctionSignature_Implementation_Type_FunctionSignature_Implementation_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FunctionSignature_Implementation_Type_IsValid(int value);
const FunctionSignature_Implementation_Type FunctionSignature_Implementation_Type_Type_MIN = FunctionSignature_Implementation_Type_TYPE_UNSPECIFIED;
const FunctionSignature_Implementation_Type FunctionSignature_Implementation_Type_Type_MAX = FunctionSignature_Implementation_Type_TYPE_TRINO_JAR;
const int FunctionSignature_Implementation_Type_Type_ARRAYSIZE = FunctionSignature_Implementation_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* FunctionSignature_Implementation_Type_descriptor();
inline const ::std::string& FunctionSignature_Implementation_Type_Name(FunctionSignature_Implementation_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    FunctionSignature_Implementation_Type_descriptor(), value);
}
inline bool FunctionSignature_Implementation_Type_Parse(
    const ::std::string& name, FunctionSignature_Implementation_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionSignature_Implementation_Type>(
    FunctionSignature_Implementation_Type_descriptor(), name, value);
}
// ===================================================================

class FunctionSignature_FinalArgVariadic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.FinalArgVariadic) */ {
 public:
  FunctionSignature_FinalArgVariadic();
  virtual ~FunctionSignature_FinalArgVariadic();

  FunctionSignature_FinalArgVariadic(const FunctionSignature_FinalArgVariadic& from);

  inline FunctionSignature_FinalArgVariadic& operator=(const FunctionSignature_FinalArgVariadic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_FinalArgVariadic(FunctionSignature_FinalArgVariadic&& from) noexcept
    : FunctionSignature_FinalArgVariadic() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_FinalArgVariadic& operator=(FunctionSignature_FinalArgVariadic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_FinalArgVariadic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_FinalArgVariadic* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_FinalArgVariadic*>(
               &_FunctionSignature_FinalArgVariadic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(FunctionSignature_FinalArgVariadic* other);
  friend void swap(FunctionSignature_FinalArgVariadic& a, FunctionSignature_FinalArgVariadic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_FinalArgVariadic* New() const final {
    return CreateMaybeMessage<FunctionSignature_FinalArgVariadic>(NULL);
  }

  FunctionSignature_FinalArgVariadic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_FinalArgVariadic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_FinalArgVariadic& from);
  void MergeFrom(const FunctionSignature_FinalArgVariadic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_FinalArgVariadic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FunctionSignature_FinalArgVariadic_ParameterConsistency ParameterConsistency;
  static const ParameterConsistency PARAMETER_CONSISTENCY_UNSPECIFIED =
    FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_UNSPECIFIED;
  static const ParameterConsistency PARAMETER_CONSISTENCY_CONSISTENT =
    FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_CONSISTENT;
  static const ParameterConsistency PARAMETER_CONSISTENCY_INCONSISTENT =
    FunctionSignature_FinalArgVariadic_ParameterConsistency_PARAMETER_CONSISTENCY_INCONSISTENT;
  static inline bool ParameterConsistency_IsValid(int value) {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_IsValid(value);
  }
  static const ParameterConsistency ParameterConsistency_MIN =
    FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MIN;
  static const ParameterConsistency ParameterConsistency_MAX =
    FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_MAX;
  static const int ParameterConsistency_ARRAYSIZE =
    FunctionSignature_FinalArgVariadic_ParameterConsistency_ParameterConsistency_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ParameterConsistency_descriptor() {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor();
  }
  static inline const ::std::string& ParameterConsistency_Name(ParameterConsistency value) {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_Name(value);
  }
  static inline bool ParameterConsistency_Parse(const ::std::string& name,
      ParameterConsistency* value) {
    return FunctionSignature_FinalArgVariadic_ParameterConsistency_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int64 min_args = 1;
  void clear_min_args();
  static const int kMinArgsFieldNumber = 1;
  ::google::protobuf::int64 min_args() const;
  void set_min_args(::google::protobuf::int64 value);

  // int64 max_args = 2;
  void clear_max_args();
  static const int kMaxArgsFieldNumber = 2;
  ::google::protobuf::int64 max_args() const;
  void set_max_args(::google::protobuf::int64 value);

  // .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3;
  void clear_consistency();
  static const int kConsistencyFieldNumber = 3;
  ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency consistency() const;
  void set_consistency(::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency value);

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.FinalArgVariadic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 min_args_;
  ::google::protobuf::int64 max_args_;
  int consistency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_FinalArgNormal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.FinalArgNormal) */ {
 public:
  FunctionSignature_FinalArgNormal();
  virtual ~FunctionSignature_FinalArgNormal();

  FunctionSignature_FinalArgNormal(const FunctionSignature_FinalArgNormal& from);

  inline FunctionSignature_FinalArgNormal& operator=(const FunctionSignature_FinalArgNormal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_FinalArgNormal(FunctionSignature_FinalArgNormal&& from) noexcept
    : FunctionSignature_FinalArgNormal() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_FinalArgNormal& operator=(FunctionSignature_FinalArgNormal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_FinalArgNormal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_FinalArgNormal* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_FinalArgNormal*>(
               &_FunctionSignature_FinalArgNormal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(FunctionSignature_FinalArgNormal* other);
  friend void swap(FunctionSignature_FinalArgNormal& a, FunctionSignature_FinalArgNormal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_FinalArgNormal* New() const final {
    return CreateMaybeMessage<FunctionSignature_FinalArgNormal>(NULL);
  }

  FunctionSignature_FinalArgNormal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_FinalArgNormal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_FinalArgNormal& from);
  void MergeFrom(const FunctionSignature_FinalArgNormal& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_FinalArgNormal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.FinalArgNormal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Scalar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Scalar) */ {
 public:
  FunctionSignature_Scalar();
  virtual ~FunctionSignature_Scalar();

  FunctionSignature_Scalar(const FunctionSignature_Scalar& from);

  inline FunctionSignature_Scalar& operator=(const FunctionSignature_Scalar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Scalar(FunctionSignature_Scalar&& from) noexcept
    : FunctionSignature_Scalar() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Scalar& operator=(FunctionSignature_Scalar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Scalar& default_instance();

  enum FinalVariableBehaviorCase {
    kVariadic = 10,
    kNormal = 11,
    FINAL_VARIABLE_BEHAVIOR_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Scalar* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Scalar*>(
               &_FunctionSignature_Scalar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(FunctionSignature_Scalar* other);
  friend void swap(FunctionSignature_Scalar& a, FunctionSignature_Scalar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Scalar* New() const final {
    return CreateMaybeMessage<FunctionSignature_Scalar>(NULL);
  }

  FunctionSignature_Scalar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Scalar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Scalar& from);
  void MergeFrom(const FunctionSignature_Scalar& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Scalar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::substrait::FunctionSignature_Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
      mutable_arguments();
  const ::substrait::FunctionSignature_Argument& arguments(int index) const;
  ::substrait::FunctionSignature_Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
      arguments() const;

  // repeated string name = 3;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_name(int index, ::std::string&& value);
  #endif
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  #if LANG_CXX11
  void add_name(::std::string&& value);
  #endif
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated .substrait.FunctionSignature.Implementation implementations = 12;
  int implementations_size() const;
  void clear_implementations();
  static const int kImplementationsFieldNumber = 12;
  ::substrait::FunctionSignature_Implementation* mutable_implementations(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
      mutable_implementations();
  const ::substrait::FunctionSignature_Implementation& implementations(int index) const;
  ::substrait::FunctionSignature_Implementation* add_implementations();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
      implementations() const;

  // .substrait.FunctionSignature.Description description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  private:
  const ::substrait::FunctionSignature_Description& _internal_description() const;
  public:
  const ::substrait::FunctionSignature_Description& description() const;
  ::substrait::FunctionSignature_Description* release_description();
  ::substrait::FunctionSignature_Description* mutable_description();
  void set_allocated_description(::substrait::FunctionSignature_Description* description);

  // .substrait.DerivationExpression output_type = 9;
  bool has_output_type() const;
  void clear_output_type();
  static const int kOutputTypeFieldNumber = 9;
  private:
  const ::substrait::DerivationExpression& _internal_output_type() const;
  public:
  const ::substrait::DerivationExpression& output_type() const;
  ::substrait::DerivationExpression* release_output_type();
  ::substrait::DerivationExpression* mutable_output_type();
  void set_allocated_output_type(::substrait::DerivationExpression* output_type);

  // bool deterministic = 7;
  void clear_deterministic();
  static const int kDeterministicFieldNumber = 7;
  bool deterministic() const;
  void set_deterministic(bool value);

  // bool session_dependent = 8;
  void clear_session_dependent();
  static const int kSessionDependentFieldNumber = 8;
  bool session_dependent() const;
  void set_session_dependent(bool value);

  // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
  bool has_variadic() const;
  void clear_variadic();
  static const int kVariadicFieldNumber = 10;
  private:
  const ::substrait::FunctionSignature_FinalArgVariadic& _internal_variadic() const;
  public:
  const ::substrait::FunctionSignature_FinalArgVariadic& variadic() const;
  ::substrait::FunctionSignature_FinalArgVariadic* release_variadic();
  ::substrait::FunctionSignature_FinalArgVariadic* mutable_variadic();
  void set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* variadic);

  // .substrait.FunctionSignature.FinalArgNormal normal = 11;
  bool has_normal() const;
  void clear_normal();
  static const int kNormalFieldNumber = 11;
  private:
  const ::substrait::FunctionSignature_FinalArgNormal& _internal_normal() const;
  public:
  const ::substrait::FunctionSignature_FinalArgNormal& normal() const;
  ::substrait::FunctionSignature_FinalArgNormal* release_normal();
  ::substrait::FunctionSignature_FinalArgNormal* mutable_normal();
  void set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* normal);

  void clear_final_variable_behavior();
  FinalVariableBehaviorCase final_variable_behavior_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Scalar)
 private:
  void set_has_variadic();
  void set_has_normal();

  inline bool has_final_variable_behavior() const;
  inline void clear_has_final_variable_behavior();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument > arguments_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation > implementations_;
  ::substrait::FunctionSignature_Description* description_;
  ::substrait::DerivationExpression* output_type_;
  bool deterministic_;
  bool session_dependent_;
  union FinalVariableBehaviorUnion {
    FinalVariableBehaviorUnion() {}
    ::substrait::FunctionSignature_FinalArgVariadic* variadic_;
    ::substrait::FunctionSignature_FinalArgNormal* normal_;
  } final_variable_behavior_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Aggregate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Aggregate) */ {
 public:
  FunctionSignature_Aggregate();
  virtual ~FunctionSignature_Aggregate();

  FunctionSignature_Aggregate(const FunctionSignature_Aggregate& from);

  inline FunctionSignature_Aggregate& operator=(const FunctionSignature_Aggregate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Aggregate(FunctionSignature_Aggregate&& from) noexcept
    : FunctionSignature_Aggregate() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Aggregate& operator=(FunctionSignature_Aggregate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Aggregate& default_instance();

  enum FinalVariableBehaviorCase {
    kVariadic = 10,
    kNormal = 11,
    FINAL_VARIABLE_BEHAVIOR_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Aggregate* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Aggregate*>(
               &_FunctionSignature_Aggregate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(FunctionSignature_Aggregate* other);
  friend void swap(FunctionSignature_Aggregate& a, FunctionSignature_Aggregate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Aggregate* New() const final {
    return CreateMaybeMessage<FunctionSignature_Aggregate>(NULL);
  }

  FunctionSignature_Aggregate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Aggregate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Aggregate& from);
  void MergeFrom(const FunctionSignature_Aggregate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Aggregate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::substrait::FunctionSignature_Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
      mutable_arguments();
  const ::substrait::FunctionSignature_Argument& arguments(int index) const;
  ::substrait::FunctionSignature_Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
      arguments() const;

  // repeated .substrait.FunctionSignature.Implementation implementations = 15;
  int implementations_size() const;
  void clear_implementations();
  static const int kImplementationsFieldNumber = 15;
  ::substrait::FunctionSignature_Implementation* mutable_implementations(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
      mutable_implementations();
  const ::substrait::FunctionSignature_Implementation& implementations(int index) const;
  ::substrait::FunctionSignature_Implementation* add_implementations();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
      implementations() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .substrait.FunctionSignature.Description description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  private:
  const ::substrait::FunctionSignature_Description& _internal_description() const;
  public:
  const ::substrait::FunctionSignature_Description& description() const;
  ::substrait::FunctionSignature_Description* release_description();
  ::substrait::FunctionSignature_Description* mutable_description();
  void set_allocated_description(::substrait::FunctionSignature_Description* description);

  // .substrait.DerivationExpression output_type = 9;
  bool has_output_type() const;
  void clear_output_type();
  static const int kOutputTypeFieldNumber = 9;
  private:
  const ::substrait::DerivationExpression& _internal_output_type() const;
  public:
  const ::substrait::DerivationExpression& output_type() const;
  ::substrait::DerivationExpression* release_output_type();
  ::substrait::DerivationExpression* mutable_output_type();
  void set_allocated_output_type(::substrait::DerivationExpression* output_type);

  // .substrait.Type intermediate_type = 13;
  bool has_intermediate_type() const;
  void clear_intermediate_type();
  static const int kIntermediateTypeFieldNumber = 13;
  private:
  const ::substrait::Type& _internal_intermediate_type() const;
  public:
  const ::substrait::Type& intermediate_type() const;
  ::substrait::Type* release_intermediate_type();
  ::substrait::Type* mutable_intermediate_type();
  void set_allocated_intermediate_type(::substrait::Type* intermediate_type);

  // bool deterministic = 7;
  void clear_deterministic();
  static const int kDeterministicFieldNumber = 7;
  bool deterministic() const;
  void set_deterministic(bool value);

  // bool session_dependent = 8;
  void clear_session_dependent();
  static const int kSessionDependentFieldNumber = 8;
  bool session_dependent() const;
  void set_session_dependent(bool value);

  // bool ordered = 14;
  void clear_ordered();
  static const int kOrderedFieldNumber = 14;
  bool ordered() const;
  void set_ordered(bool value);

  // uint64 max_set = 12;
  void clear_max_set();
  static const int kMaxSetFieldNumber = 12;
  ::google::protobuf::uint64 max_set() const;
  void set_max_set(::google::protobuf::uint64 value);

  // .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
  bool has_variadic() const;
  void clear_variadic();
  static const int kVariadicFieldNumber = 10;
  private:
  const ::substrait::FunctionSignature_FinalArgVariadic& _internal_variadic() const;
  public:
  const ::substrait::FunctionSignature_FinalArgVariadic& variadic() const;
  ::substrait::FunctionSignature_FinalArgVariadic* release_variadic();
  ::substrait::FunctionSignature_FinalArgVariadic* mutable_variadic();
  void set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* variadic);

  // .substrait.FunctionSignature.FinalArgNormal normal = 11;
  bool has_normal() const;
  void clear_normal();
  static const int kNormalFieldNumber = 11;
  private:
  const ::substrait::FunctionSignature_FinalArgNormal& _internal_normal() const;
  public:
  const ::substrait::FunctionSignature_FinalArgNormal& normal() const;
  ::substrait::FunctionSignature_FinalArgNormal* release_normal();
  ::substrait::FunctionSignature_FinalArgNormal* mutable_normal();
  void set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* normal);

  void clear_final_variable_behavior();
  FinalVariableBehaviorCase final_variable_behavior_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Aggregate)
 private:
  void set_has_variadic();
  void set_has_normal();

  inline bool has_final_variable_behavior() const;
  inline void clear_has_final_variable_behavior();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument > arguments_;
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation > implementations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::substrait::FunctionSignature_Description* description_;
  ::substrait::DerivationExpression* output_type_;
  ::substrait::Type* intermediate_type_;
  bool deterministic_;
  bool session_dependent_;
  bool ordered_;
  ::google::protobuf::uint64 max_set_;
  union FinalVariableBehaviorUnion {
    FinalVariableBehaviorUnion() {}
    ::substrait::FunctionSignature_FinalArgVariadic* variadic_;
    ::substrait::FunctionSignature_FinalArgNormal* normal_;
  } final_variable_behavior_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Window : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Window) */ {
 public:
  FunctionSignature_Window();
  virtual ~FunctionSignature_Window();

  FunctionSignature_Window(const FunctionSignature_Window& from);

  inline FunctionSignature_Window& operator=(const FunctionSignature_Window& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Window(FunctionSignature_Window&& from) noexcept
    : FunctionSignature_Window() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Window& operator=(FunctionSignature_Window&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Window& default_instance();

  enum FinalVariableBehaviorCase {
    kVariadic = 16,
    kNormal = 17,
    FINAL_VARIABLE_BEHAVIOR_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Window* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Window*>(
               &_FunctionSignature_Window_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(FunctionSignature_Window* other);
  friend void swap(FunctionSignature_Window& a, FunctionSignature_Window& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Window* New() const final {
    return CreateMaybeMessage<FunctionSignature_Window>(NULL);
  }

  FunctionSignature_Window* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Window>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Window& from);
  void MergeFrom(const FunctionSignature_Window& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Window* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FunctionSignature_Window_WindowType WindowType;
  static const WindowType WINDOW_TYPE_UNSPECIFIED =
    FunctionSignature_Window_WindowType_WINDOW_TYPE_UNSPECIFIED;
  static const WindowType WINDOW_TYPE_STREAMING =
    FunctionSignature_Window_WindowType_WINDOW_TYPE_STREAMING;
  static const WindowType WINDOW_TYPE_PARTITION =
    FunctionSignature_Window_WindowType_WINDOW_TYPE_PARTITION;
  static inline bool WindowType_IsValid(int value) {
    return FunctionSignature_Window_WindowType_IsValid(value);
  }
  static const WindowType WindowType_MIN =
    FunctionSignature_Window_WindowType_WindowType_MIN;
  static const WindowType WindowType_MAX =
    FunctionSignature_Window_WindowType_WindowType_MAX;
  static const int WindowType_ARRAYSIZE =
    FunctionSignature_Window_WindowType_WindowType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WindowType_descriptor() {
    return FunctionSignature_Window_WindowType_descriptor();
  }
  static inline const ::std::string& WindowType_Name(WindowType value) {
    return FunctionSignature_Window_WindowType_Name(value);
  }
  static inline bool WindowType_Parse(const ::std::string& name,
      WindowType* value) {
    return FunctionSignature_Window_WindowType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .substrait.FunctionSignature.Argument arguments = 2;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 2;
  ::substrait::FunctionSignature_Argument* mutable_arguments(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
      mutable_arguments();
  const ::substrait::FunctionSignature_Argument& arguments(int index) const;
  ::substrait::FunctionSignature_Argument* add_arguments();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
      arguments() const;

  // repeated string name = 3;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_name(int index, ::std::string&& value);
  #endif
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  #if LANG_CXX11
  void add_name(::std::string&& value);
  #endif
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated .substrait.FunctionSignature.Implementation implementations = 15;
  int implementations_size() const;
  void clear_implementations();
  static const int kImplementationsFieldNumber = 15;
  ::substrait::FunctionSignature_Implementation* mutable_implementations(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
      mutable_implementations();
  const ::substrait::FunctionSignature_Implementation& implementations(int index) const;
  ::substrait::FunctionSignature_Implementation* add_implementations();
  const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
      implementations() const;

  // .substrait.FunctionSignature.Description description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  private:
  const ::substrait::FunctionSignature_Description& _internal_description() const;
  public:
  const ::substrait::FunctionSignature_Description& description() const;
  ::substrait::FunctionSignature_Description* release_description();
  ::substrait::FunctionSignature_Description* mutable_description();
  void set_allocated_description(::substrait::FunctionSignature_Description* description);

  // .substrait.DerivationExpression intermediate_type = 9;
  bool has_intermediate_type() const;
  void clear_intermediate_type();
  static const int kIntermediateTypeFieldNumber = 9;
  private:
  const ::substrait::DerivationExpression& _internal_intermediate_type() const;
  public:
  const ::substrait::DerivationExpression& intermediate_type() const;
  ::substrait::DerivationExpression* release_intermediate_type();
  ::substrait::DerivationExpression* mutable_intermediate_type();
  void set_allocated_intermediate_type(::substrait::DerivationExpression* intermediate_type);

  // .substrait.DerivationExpression output_type = 10;
  bool has_output_type() const;
  void clear_output_type();
  static const int kOutputTypeFieldNumber = 10;
  private:
  const ::substrait::DerivationExpression& _internal_output_type() const;
  public:
  const ::substrait::DerivationExpression& output_type() const;
  ::substrait::DerivationExpression* release_output_type();
  ::substrait::DerivationExpression* mutable_output_type();
  void set_allocated_output_type(::substrait::DerivationExpression* output_type);

  // bool deterministic = 7;
  void clear_deterministic();
  static const int kDeterministicFieldNumber = 7;
  bool deterministic() const;
  void set_deterministic(bool value);

  // bool session_dependent = 8;
  void clear_session_dependent();
  static const int kSessionDependentFieldNumber = 8;
  bool session_dependent() const;
  void set_session_dependent(bool value);

  // bool ordered = 11;
  void clear_ordered();
  static const int kOrderedFieldNumber = 11;
  bool ordered() const;
  void set_ordered(bool value);

  // .substrait.FunctionSignature.Window.WindowType window_type = 14;
  void clear_window_type();
  static const int kWindowTypeFieldNumber = 14;
  ::substrait::FunctionSignature_Window_WindowType window_type() const;
  void set_window_type(::substrait::FunctionSignature_Window_WindowType value);

  // uint64 max_set = 12;
  void clear_max_set();
  static const int kMaxSetFieldNumber = 12;
  ::google::protobuf::uint64 max_set() const;
  void set_max_set(::google::protobuf::uint64 value);

  // .substrait.FunctionSignature.FinalArgVariadic variadic = 16;
  bool has_variadic() const;
  void clear_variadic();
  static const int kVariadicFieldNumber = 16;
  private:
  const ::substrait::FunctionSignature_FinalArgVariadic& _internal_variadic() const;
  public:
  const ::substrait::FunctionSignature_FinalArgVariadic& variadic() const;
  ::substrait::FunctionSignature_FinalArgVariadic* release_variadic();
  ::substrait::FunctionSignature_FinalArgVariadic* mutable_variadic();
  void set_allocated_variadic(::substrait::FunctionSignature_FinalArgVariadic* variadic);

  // .substrait.FunctionSignature.FinalArgNormal normal = 17;
  bool has_normal() const;
  void clear_normal();
  static const int kNormalFieldNumber = 17;
  private:
  const ::substrait::FunctionSignature_FinalArgNormal& _internal_normal() const;
  public:
  const ::substrait::FunctionSignature_FinalArgNormal& normal() const;
  ::substrait::FunctionSignature_FinalArgNormal* release_normal();
  ::substrait::FunctionSignature_FinalArgNormal* mutable_normal();
  void set_allocated_normal(::substrait::FunctionSignature_FinalArgNormal* normal);

  void clear_final_variable_behavior();
  FinalVariableBehaviorCase final_variable_behavior_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Window)
 private:
  void set_has_variadic();
  void set_has_normal();

  inline bool has_final_variable_behavior() const;
  inline void clear_has_final_variable_behavior();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument > arguments_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation > implementations_;
  ::substrait::FunctionSignature_Description* description_;
  ::substrait::DerivationExpression* intermediate_type_;
  ::substrait::DerivationExpression* output_type_;
  bool deterministic_;
  bool session_dependent_;
  bool ordered_;
  int window_type_;
  ::google::protobuf::uint64 max_set_;
  union FinalVariableBehaviorUnion {
    FinalVariableBehaviorUnion() {}
    ::substrait::FunctionSignature_FinalArgVariadic* variadic_;
    ::substrait::FunctionSignature_FinalArgNormal* normal_;
  } final_variable_behavior_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Description : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Description) */ {
 public:
  FunctionSignature_Description();
  virtual ~FunctionSignature_Description();

  FunctionSignature_Description(const FunctionSignature_Description& from);

  inline FunctionSignature_Description& operator=(const FunctionSignature_Description& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Description(FunctionSignature_Description&& from) noexcept
    : FunctionSignature_Description() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Description& operator=(FunctionSignature_Description&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Description& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Description* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Description*>(
               &_FunctionSignature_Description_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(FunctionSignature_Description* other);
  friend void swap(FunctionSignature_Description& a, FunctionSignature_Description& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Description* New() const final {
    return CreateMaybeMessage<FunctionSignature_Description>(NULL);
  }

  FunctionSignature_Description* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Description>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Description& from);
  void MergeFrom(const FunctionSignature_Description& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Description* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string language = 1;
  void clear_language();
  static const int kLanguageFieldNumber = 1;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // string body = 2;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Description)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Implementation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Implementation) */ {
 public:
  FunctionSignature_Implementation();
  virtual ~FunctionSignature_Implementation();

  FunctionSignature_Implementation(const FunctionSignature_Implementation& from);

  inline FunctionSignature_Implementation& operator=(const FunctionSignature_Implementation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Implementation(FunctionSignature_Implementation&& from) noexcept
    : FunctionSignature_Implementation() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Implementation& operator=(FunctionSignature_Implementation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Implementation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Implementation* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Implementation*>(
               &_FunctionSignature_Implementation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(FunctionSignature_Implementation* other);
  friend void swap(FunctionSignature_Implementation& a, FunctionSignature_Implementation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Implementation* New() const final {
    return CreateMaybeMessage<FunctionSignature_Implementation>(NULL);
  }

  FunctionSignature_Implementation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Implementation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Implementation& from);
  void MergeFrom(const FunctionSignature_Implementation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Implementation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FunctionSignature_Implementation_Type Type;
  static const Type TYPE_UNSPECIFIED =
    FunctionSignature_Implementation_Type_TYPE_UNSPECIFIED;
  static const Type TYPE_WEB_ASSEMBLY =
    FunctionSignature_Implementation_Type_TYPE_WEB_ASSEMBLY;
  static const Type TYPE_TRINO_JAR =
    FunctionSignature_Implementation_Type_TYPE_TRINO_JAR;
  static inline bool Type_IsValid(int value) {
    return FunctionSignature_Implementation_Type_IsValid(value);
  }
  static const Type Type_MIN =
    FunctionSignature_Implementation_Type_Type_MIN;
  static const Type Type_MAX =
    FunctionSignature_Implementation_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    FunctionSignature_Implementation_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return FunctionSignature_Implementation_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return FunctionSignature_Implementation_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return FunctionSignature_Implementation_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string uri = 2;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // .substrait.FunctionSignature.Implementation.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::substrait::FunctionSignature_Implementation_Type type() const;
  void set_type(::substrait::FunctionSignature_Implementation_Type value);

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Implementation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Argument_ValueArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument.ValueArgument) */ {
 public:
  FunctionSignature_Argument_ValueArgument();
  virtual ~FunctionSignature_Argument_ValueArgument();

  FunctionSignature_Argument_ValueArgument(const FunctionSignature_Argument_ValueArgument& from);

  inline FunctionSignature_Argument_ValueArgument& operator=(const FunctionSignature_Argument_ValueArgument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Argument_ValueArgument(FunctionSignature_Argument_ValueArgument&& from) noexcept
    : FunctionSignature_Argument_ValueArgument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument_ValueArgument& operator=(FunctionSignature_Argument_ValueArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Argument_ValueArgument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Argument_ValueArgument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument_ValueArgument*>(
               &_FunctionSignature_Argument_ValueArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(FunctionSignature_Argument_ValueArgument* other);
  friend void swap(FunctionSignature_Argument_ValueArgument& a, FunctionSignature_Argument_ValueArgument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Argument_ValueArgument* New() const final {
    return CreateMaybeMessage<FunctionSignature_Argument_ValueArgument>(NULL);
  }

  FunctionSignature_Argument_ValueArgument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Argument_ValueArgument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Argument_ValueArgument& from);
  void MergeFrom(const FunctionSignature_Argument_ValueArgument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Argument_ValueArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType& _internal_type() const;
  public:
  const ::substrait::ParameterizedType& type() const;
  ::substrait::ParameterizedType* release_type();
  ::substrait::ParameterizedType* mutable_type();
  void set_allocated_type(::substrait::ParameterizedType* type);

  // bool constant = 2;
  void clear_constant();
  static const int kConstantFieldNumber = 2;
  bool constant() const;
  void set_constant(bool value);

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument.ValueArgument)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType* type_;
  bool constant_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Argument_TypeArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument.TypeArgument) */ {
 public:
  FunctionSignature_Argument_TypeArgument();
  virtual ~FunctionSignature_Argument_TypeArgument();

  FunctionSignature_Argument_TypeArgument(const FunctionSignature_Argument_TypeArgument& from);

  inline FunctionSignature_Argument_TypeArgument& operator=(const FunctionSignature_Argument_TypeArgument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Argument_TypeArgument(FunctionSignature_Argument_TypeArgument&& from) noexcept
    : FunctionSignature_Argument_TypeArgument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument_TypeArgument& operator=(FunctionSignature_Argument_TypeArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Argument_TypeArgument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Argument_TypeArgument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument_TypeArgument*>(
               &_FunctionSignature_Argument_TypeArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(FunctionSignature_Argument_TypeArgument* other);
  friend void swap(FunctionSignature_Argument_TypeArgument& a, FunctionSignature_Argument_TypeArgument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Argument_TypeArgument* New() const final {
    return CreateMaybeMessage<FunctionSignature_Argument_TypeArgument>(NULL);
  }

  FunctionSignature_Argument_TypeArgument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Argument_TypeArgument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Argument_TypeArgument& from);
  void MergeFrom(const FunctionSignature_Argument_TypeArgument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Argument_TypeArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType& _internal_type() const;
  public:
  const ::substrait::ParameterizedType& type() const;
  ::substrait::ParameterizedType* release_type();
  ::substrait::ParameterizedType* mutable_type();
  void set_allocated_type(::substrait::ParameterizedType* type);

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument.TypeArgument)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType* type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Argument_EnumArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument.EnumArgument) */ {
 public:
  FunctionSignature_Argument_EnumArgument();
  virtual ~FunctionSignature_Argument_EnumArgument();

  FunctionSignature_Argument_EnumArgument(const FunctionSignature_Argument_EnumArgument& from);

  inline FunctionSignature_Argument_EnumArgument& operator=(const FunctionSignature_Argument_EnumArgument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Argument_EnumArgument(FunctionSignature_Argument_EnumArgument&& from) noexcept
    : FunctionSignature_Argument_EnumArgument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument_EnumArgument& operator=(FunctionSignature_Argument_EnumArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Argument_EnumArgument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Argument_EnumArgument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument_EnumArgument*>(
               &_FunctionSignature_Argument_EnumArgument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(FunctionSignature_Argument_EnumArgument* other);
  friend void swap(FunctionSignature_Argument_EnumArgument& a, FunctionSignature_Argument_EnumArgument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Argument_EnumArgument* New() const final {
    return CreateMaybeMessage<FunctionSignature_Argument_EnumArgument>(NULL);
  }

  FunctionSignature_Argument_EnumArgument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Argument_EnumArgument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Argument_EnumArgument& from);
  void MergeFrom(const FunctionSignature_Argument_EnumArgument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Argument_EnumArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string options = 1;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 1;
  const ::std::string& options(int index) const;
  ::std::string* mutable_options(int index);
  void set_options(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_options(int index, ::std::string&& value);
  #endif
  void set_options(int index, const char* value);
  void set_options(int index, const char* value, size_t size);
  ::std::string* add_options();
  void add_options(const ::std::string& value);
  #if LANG_CXX11
  void add_options(::std::string&& value);
  #endif
  void add_options(const char* value);
  void add_options(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& options() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_options();

  // bool optional = 2;
  void clear_optional();
  static const int kOptionalFieldNumber = 2;
  bool optional() const;
  void set_optional(bool value);

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument.EnumArgument)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> options_;
  bool optional_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature_Argument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature.Argument) */ {
 public:
  FunctionSignature_Argument();
  virtual ~FunctionSignature_Argument();

  FunctionSignature_Argument(const FunctionSignature_Argument& from);

  inline FunctionSignature_Argument& operator=(const FunctionSignature_Argument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature_Argument(FunctionSignature_Argument&& from) noexcept
    : FunctionSignature_Argument() {
    *this = ::std::move(from);
  }

  inline FunctionSignature_Argument& operator=(FunctionSignature_Argument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature_Argument& default_instance();

  enum ArgumentKindCase {
    kValue = 2,
    kType = 3,
    kEnum = 4,
    ARGUMENT_KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature_Argument* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature_Argument*>(
               &_FunctionSignature_Argument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(FunctionSignature_Argument* other);
  friend void swap(FunctionSignature_Argument& a, FunctionSignature_Argument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature_Argument* New() const final {
    return CreateMaybeMessage<FunctionSignature_Argument>(NULL);
  }

  FunctionSignature_Argument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature_Argument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature_Argument& from);
  void MergeFrom(const FunctionSignature_Argument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature_Argument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FunctionSignature_Argument_ValueArgument ValueArgument;
  typedef FunctionSignature_Argument_TypeArgument TypeArgument;
  typedef FunctionSignature_Argument_EnumArgument EnumArgument;

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .substrait.FunctionSignature.Argument.ValueArgument value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::substrait::FunctionSignature_Argument_ValueArgument& _internal_value() const;
  public:
  const ::substrait::FunctionSignature_Argument_ValueArgument& value() const;
  ::substrait::FunctionSignature_Argument_ValueArgument* release_value();
  ::substrait::FunctionSignature_Argument_ValueArgument* mutable_value();
  void set_allocated_value(::substrait::FunctionSignature_Argument_ValueArgument* value);

  // .substrait.FunctionSignature.Argument.TypeArgument type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  private:
  const ::substrait::FunctionSignature_Argument_TypeArgument& _internal_type() const;
  public:
  const ::substrait::FunctionSignature_Argument_TypeArgument& type() const;
  ::substrait::FunctionSignature_Argument_TypeArgument* release_type();
  ::substrait::FunctionSignature_Argument_TypeArgument* mutable_type();
  void set_allocated_type(::substrait::FunctionSignature_Argument_TypeArgument* type);

  // .substrait.FunctionSignature.Argument.EnumArgument enum = 4;
  bool has_enum_() const;
  void clear_enum_();
  static const int kEnumFieldNumber = 4;
  private:
  const ::substrait::FunctionSignature_Argument_EnumArgument& _internal_enum_() const;
  public:
  const ::substrait::FunctionSignature_Argument_EnumArgument& enum_() const;
  ::substrait::FunctionSignature_Argument_EnumArgument* release_enum_();
  ::substrait::FunctionSignature_Argument_EnumArgument* mutable_enum_();
  void set_allocated_enum_(::substrait::FunctionSignature_Argument_EnumArgument* enum_);

  void clear_argument_kind();
  ArgumentKindCase argument_kind_case() const;
  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature.Argument)
 private:
  void set_has_value();
  void set_has_type();
  void set_has_enum_();

  inline bool has_argument_kind() const;
  inline void clear_has_argument_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  union ArgumentKindUnion {
    ArgumentKindUnion() {}
    ::substrait::FunctionSignature_Argument_ValueArgument* value_;
    ::substrait::FunctionSignature_Argument_TypeArgument* type_;
    ::substrait::FunctionSignature_Argument_EnumArgument* enum__;
  } argument_kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FunctionSignature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.FunctionSignature) */ {
 public:
  FunctionSignature();
  virtual ~FunctionSignature();

  FunctionSignature(const FunctionSignature& from);

  inline FunctionSignature& operator=(const FunctionSignature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FunctionSignature(FunctionSignature&& from) noexcept
    : FunctionSignature() {
    *this = ::std::move(from);
  }

  inline FunctionSignature& operator=(FunctionSignature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionSignature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FunctionSignature* internal_default_instance() {
    return reinterpret_cast<const FunctionSignature*>(
               &_FunctionSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(FunctionSignature* other);
  friend void swap(FunctionSignature& a, FunctionSignature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FunctionSignature* New() const final {
    return CreateMaybeMessage<FunctionSignature>(NULL);
  }

  FunctionSignature* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FunctionSignature>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FunctionSignature& from);
  void MergeFrom(const FunctionSignature& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FunctionSignature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FunctionSignature_FinalArgVariadic FinalArgVariadic;
  typedef FunctionSignature_FinalArgNormal FinalArgNormal;
  typedef FunctionSignature_Scalar Scalar;
  typedef FunctionSignature_Aggregate Aggregate;
  typedef FunctionSignature_Window Window;
  typedef FunctionSignature_Description Description;
  typedef FunctionSignature_Implementation Implementation;
  typedef FunctionSignature_Argument Argument;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:substrait.FunctionSignature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2ffunction_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FunctionSignature_FinalArgVariadic

// int64 min_args = 1;
inline void FunctionSignature_FinalArgVariadic::clear_min_args() {
  min_args_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FunctionSignature_FinalArgVariadic::min_args() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.FinalArgVariadic.min_args)
  return min_args_;
}
inline void FunctionSignature_FinalArgVariadic::set_min_args(::google::protobuf::int64 value) {
  
  min_args_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.FinalArgVariadic.min_args)
}

// int64 max_args = 2;
inline void FunctionSignature_FinalArgVariadic::clear_max_args() {
  max_args_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FunctionSignature_FinalArgVariadic::max_args() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.FinalArgVariadic.max_args)
  return max_args_;
}
inline void FunctionSignature_FinalArgVariadic::set_max_args(::google::protobuf::int64 value) {
  
  max_args_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.FinalArgVariadic.max_args)
}

// .substrait.FunctionSignature.FinalArgVariadic.ParameterConsistency consistency = 3;
inline void FunctionSignature_FinalArgVariadic::clear_consistency() {
  consistency_ = 0;
}
inline ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency FunctionSignature_FinalArgVariadic::consistency() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.FinalArgVariadic.consistency)
  return static_cast< ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency >(consistency_);
}
inline void FunctionSignature_FinalArgVariadic::set_consistency(::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency value) {
  
  consistency_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.FinalArgVariadic.consistency)
}

// -------------------------------------------------------------------

// FunctionSignature_FinalArgNormal

// -------------------------------------------------------------------

// FunctionSignature_Scalar

// repeated .substrait.FunctionSignature.Argument arguments = 2;
inline int FunctionSignature_Scalar::arguments_size() const {
  return arguments_.size();
}
inline void FunctionSignature_Scalar::clear_arguments() {
  arguments_.Clear();
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Scalar::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
FunctionSignature_Scalar::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Scalar.arguments)
  return &arguments_;
}
inline const ::substrait::FunctionSignature_Argument& FunctionSignature_Scalar::arguments(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.arguments)
  return arguments_.Get(index);
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Scalar::add_arguments() {
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
FunctionSignature_Scalar::arguments() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Scalar.arguments)
  return arguments_;
}

// repeated string name = 3;
inline int FunctionSignature_Scalar::name_size() const {
  return name_.size();
}
inline void FunctionSignature_Scalar::clear_name() {
  name_.Clear();
}
inline const ::std::string& FunctionSignature_Scalar::name(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.name)
  return name_.Get(index);
}
inline ::std::string* FunctionSignature_Scalar::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.name)
  return name_.Mutable(index);
}
inline void FunctionSignature_Scalar::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.name)
  name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void FunctionSignature_Scalar::set_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.name)
  name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void FunctionSignature_Scalar::set_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Scalar.name)
}
inline ::std::string* FunctionSignature_Scalar::add_name() {
  // @@protoc_insertion_point(field_add_mutable:substrait.FunctionSignature.Scalar.name)
  return name_.Add();
}
inline void FunctionSignature_Scalar::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.name)
}
#if LANG_CXX11
inline void FunctionSignature_Scalar::add_name(::std::string&& value) {
  name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.name)
}
#endif
inline void FunctionSignature_Scalar::add_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.FunctionSignature.Scalar.name)
}
inline void FunctionSignature_Scalar::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.FunctionSignature.Scalar.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionSignature_Scalar::name() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Scalar.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionSignature_Scalar::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Scalar.name)
  return &name_;
}

// .substrait.FunctionSignature.Description description = 4;
inline bool FunctionSignature_Scalar::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline void FunctionSignature_Scalar::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Scalar::_internal_description() const {
  return *description_;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Scalar::description() const {
  const ::substrait::FunctionSignature_Description* p = description_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.description)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::FunctionSignature_Description*>(
      &::substrait::_FunctionSignature_Description_default_instance_);
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Scalar::release_description() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.description)
  
  ::substrait::FunctionSignature_Description* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Scalar::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::FunctionSignature_Description>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.description)
  return description_;
}
inline void FunctionSignature_Scalar::set_allocated_description(::substrait::FunctionSignature_Description* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete description_;
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Scalar.description)
}

// bool deterministic = 7;
inline void FunctionSignature_Scalar::clear_deterministic() {
  deterministic_ = false;
}
inline bool FunctionSignature_Scalar::deterministic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.deterministic)
  return deterministic_;
}
inline void FunctionSignature_Scalar::set_deterministic(bool value) {
  
  deterministic_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.deterministic)
}

// bool session_dependent = 8;
inline void FunctionSignature_Scalar::clear_session_dependent() {
  session_dependent_ = false;
}
inline bool FunctionSignature_Scalar::session_dependent() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.session_dependent)
  return session_dependent_;
}
inline void FunctionSignature_Scalar::set_session_dependent(bool value) {
  
  session_dependent_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Scalar.session_dependent)
}

// .substrait.DerivationExpression output_type = 9;
inline bool FunctionSignature_Scalar::has_output_type() const {
  return this != internal_default_instance() && output_type_ != NULL;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Scalar::_internal_output_type() const {
  return *output_type_;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Scalar::output_type() const {
  const ::substrait::DerivationExpression* p = output_type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.output_type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::DerivationExpression*>(
      &::substrait::_DerivationExpression_default_instance_);
}
inline ::substrait::DerivationExpression* FunctionSignature_Scalar::release_output_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.output_type)
  
  ::substrait::DerivationExpression* temp = output_type_;
  output_type_ = NULL;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Scalar::mutable_output_type() {
  
  if (output_type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArenaNoVirtual());
    output_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.output_type)
  return output_type_;
}
inline void FunctionSignature_Scalar::set_allocated_output_type(::substrait::DerivationExpression* output_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_type_);
  }
  if (output_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_type, submessage_arena);
    }
    
  } else {
    
  }
  output_type_ = output_type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Scalar.output_type)
}

// .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
inline bool FunctionSignature_Scalar::has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline void FunctionSignature_Scalar::set_has_variadic() {
  _oneof_case_[0] = kVariadic;
}
inline void FunctionSignature_Scalar::clear_variadic() {
  if (has_variadic()) {
    delete final_variable_behavior_.variadic_;
    clear_has_final_variable_behavior();
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Scalar::_internal_variadic() const {
  return *final_variable_behavior_.variadic_;
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Scalar::release_variadic() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.variadic)
  if (has_variadic()) {
    clear_has_final_variable_behavior();
      ::substrait::FunctionSignature_FinalArgVariadic* temp = final_variable_behavior_.variadic_;
    final_variable_behavior_.variadic_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Scalar::variadic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.variadic)
  return has_variadic()
      ? *final_variable_behavior_.variadic_
      : *reinterpret_cast< ::substrait::FunctionSignature_FinalArgVariadic*>(&::substrait::_FunctionSignature_FinalArgVariadic_default_instance_);
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Scalar::mutable_variadic() {
  if (!has_variadic()) {
    clear_final_variable_behavior();
    set_has_variadic();
    final_variable_behavior_.variadic_ = CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgVariadic >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.variadic)
  return final_variable_behavior_.variadic_;
}

// .substrait.FunctionSignature.FinalArgNormal normal = 11;
inline bool FunctionSignature_Scalar::has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline void FunctionSignature_Scalar::set_has_normal() {
  _oneof_case_[0] = kNormal;
}
inline void FunctionSignature_Scalar::clear_normal() {
  if (has_normal()) {
    delete final_variable_behavior_.normal_;
    clear_has_final_variable_behavior();
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Scalar::_internal_normal() const {
  return *final_variable_behavior_.normal_;
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Scalar::release_normal() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Scalar.normal)
  if (has_normal()) {
    clear_has_final_variable_behavior();
      ::substrait::FunctionSignature_FinalArgNormal* temp = final_variable_behavior_.normal_;
    final_variable_behavior_.normal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Scalar::normal() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.normal)
  return has_normal()
      ? *final_variable_behavior_.normal_
      : *reinterpret_cast< ::substrait::FunctionSignature_FinalArgNormal*>(&::substrait::_FunctionSignature_FinalArgNormal_default_instance_);
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Scalar::mutable_normal() {
  if (!has_normal()) {
    clear_final_variable_behavior();
    set_has_normal();
    final_variable_behavior_.normal_ = CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgNormal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.normal)
  return final_variable_behavior_.normal_;
}

// repeated .substrait.FunctionSignature.Implementation implementations = 12;
inline int FunctionSignature_Scalar::implementations_size() const {
  return implementations_.size();
}
inline void FunctionSignature_Scalar::clear_implementations() {
  implementations_.Clear();
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Scalar::mutable_implementations(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Scalar.implementations)
  return implementations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
FunctionSignature_Scalar::mutable_implementations() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Scalar.implementations)
  return &implementations_;
}
inline const ::substrait::FunctionSignature_Implementation& FunctionSignature_Scalar::implementations(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Scalar.implementations)
  return implementations_.Get(index);
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Scalar::add_implementations() {
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Scalar.implementations)
  return implementations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
FunctionSignature_Scalar::implementations() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Scalar.implementations)
  return implementations_;
}

inline bool FunctionSignature_Scalar::has_final_variable_behavior() const {
  return final_variable_behavior_case() != FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline void FunctionSignature_Scalar::clear_has_final_variable_behavior() {
  _oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline FunctionSignature_Scalar::FinalVariableBehaviorCase FunctionSignature_Scalar::final_variable_behavior_case() const {
  return FunctionSignature_Scalar::FinalVariableBehaviorCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature_Aggregate

// repeated .substrait.FunctionSignature.Argument arguments = 2;
inline int FunctionSignature_Aggregate::arguments_size() const {
  return arguments_.size();
}
inline void FunctionSignature_Aggregate::clear_arguments() {
  arguments_.Clear();
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Aggregate::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
FunctionSignature_Aggregate::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Aggregate.arguments)
  return &arguments_;
}
inline const ::substrait::FunctionSignature_Argument& FunctionSignature_Aggregate::arguments(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.arguments)
  return arguments_.Get(index);
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Aggregate::add_arguments() {
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Aggregate.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
FunctionSignature_Aggregate::arguments() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Aggregate.arguments)
  return arguments_;
}

// string name = 3;
inline void FunctionSignature_Aggregate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionSignature_Aggregate::name() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.name)
  return name_.GetNoArena();
}
inline void FunctionSignature_Aggregate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.name)
}
#if LANG_CXX11
inline void FunctionSignature_Aggregate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.FunctionSignature.Aggregate.name)
}
#endif
inline void FunctionSignature_Aggregate::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Aggregate.name)
}
inline void FunctionSignature_Aggregate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Aggregate.name)
}
inline ::std::string* FunctionSignature_Aggregate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionSignature_Aggregate::release_name() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionSignature_Aggregate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.name)
}

// .substrait.FunctionSignature.Description description = 4;
inline bool FunctionSignature_Aggregate::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline void FunctionSignature_Aggregate::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Aggregate::_internal_description() const {
  return *description_;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Aggregate::description() const {
  const ::substrait::FunctionSignature_Description* p = description_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.description)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::FunctionSignature_Description*>(
      &::substrait::_FunctionSignature_Description_default_instance_);
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Aggregate::release_description() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.description)
  
  ::substrait::FunctionSignature_Description* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Aggregate::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::FunctionSignature_Description>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.description)
  return description_;
}
inline void FunctionSignature_Aggregate::set_allocated_description(::substrait::FunctionSignature_Description* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete description_;
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.description)
}

// bool deterministic = 7;
inline void FunctionSignature_Aggregate::clear_deterministic() {
  deterministic_ = false;
}
inline bool FunctionSignature_Aggregate::deterministic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.deterministic)
  return deterministic_;
}
inline void FunctionSignature_Aggregate::set_deterministic(bool value) {
  
  deterministic_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.deterministic)
}

// bool session_dependent = 8;
inline void FunctionSignature_Aggregate::clear_session_dependent() {
  session_dependent_ = false;
}
inline bool FunctionSignature_Aggregate::session_dependent() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.session_dependent)
  return session_dependent_;
}
inline void FunctionSignature_Aggregate::set_session_dependent(bool value) {
  
  session_dependent_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.session_dependent)
}

// .substrait.DerivationExpression output_type = 9;
inline bool FunctionSignature_Aggregate::has_output_type() const {
  return this != internal_default_instance() && output_type_ != NULL;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Aggregate::_internal_output_type() const {
  return *output_type_;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Aggregate::output_type() const {
  const ::substrait::DerivationExpression* p = output_type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.output_type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::DerivationExpression*>(
      &::substrait::_DerivationExpression_default_instance_);
}
inline ::substrait::DerivationExpression* FunctionSignature_Aggregate::release_output_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.output_type)
  
  ::substrait::DerivationExpression* temp = output_type_;
  output_type_ = NULL;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Aggregate::mutable_output_type() {
  
  if (output_type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArenaNoVirtual());
    output_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.output_type)
  return output_type_;
}
inline void FunctionSignature_Aggregate::set_allocated_output_type(::substrait::DerivationExpression* output_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_type_);
  }
  if (output_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_type, submessage_arena);
    }
    
  } else {
    
  }
  output_type_ = output_type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.output_type)
}

// .substrait.FunctionSignature.FinalArgVariadic variadic = 10;
inline bool FunctionSignature_Aggregate::has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline void FunctionSignature_Aggregate::set_has_variadic() {
  _oneof_case_[0] = kVariadic;
}
inline void FunctionSignature_Aggregate::clear_variadic() {
  if (has_variadic()) {
    delete final_variable_behavior_.variadic_;
    clear_has_final_variable_behavior();
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Aggregate::_internal_variadic() const {
  return *final_variable_behavior_.variadic_;
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Aggregate::release_variadic() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.variadic)
  if (has_variadic()) {
    clear_has_final_variable_behavior();
      ::substrait::FunctionSignature_FinalArgVariadic* temp = final_variable_behavior_.variadic_;
    final_variable_behavior_.variadic_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Aggregate::variadic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.variadic)
  return has_variadic()
      ? *final_variable_behavior_.variadic_
      : *reinterpret_cast< ::substrait::FunctionSignature_FinalArgVariadic*>(&::substrait::_FunctionSignature_FinalArgVariadic_default_instance_);
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Aggregate::mutable_variadic() {
  if (!has_variadic()) {
    clear_final_variable_behavior();
    set_has_variadic();
    final_variable_behavior_.variadic_ = CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgVariadic >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.variadic)
  return final_variable_behavior_.variadic_;
}

// .substrait.FunctionSignature.FinalArgNormal normal = 11;
inline bool FunctionSignature_Aggregate::has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline void FunctionSignature_Aggregate::set_has_normal() {
  _oneof_case_[0] = kNormal;
}
inline void FunctionSignature_Aggregate::clear_normal() {
  if (has_normal()) {
    delete final_variable_behavior_.normal_;
    clear_has_final_variable_behavior();
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Aggregate::_internal_normal() const {
  return *final_variable_behavior_.normal_;
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Aggregate::release_normal() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.normal)
  if (has_normal()) {
    clear_has_final_variable_behavior();
      ::substrait::FunctionSignature_FinalArgNormal* temp = final_variable_behavior_.normal_;
    final_variable_behavior_.normal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Aggregate::normal() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.normal)
  return has_normal()
      ? *final_variable_behavior_.normal_
      : *reinterpret_cast< ::substrait::FunctionSignature_FinalArgNormal*>(&::substrait::_FunctionSignature_FinalArgNormal_default_instance_);
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Aggregate::mutable_normal() {
  if (!has_normal()) {
    clear_final_variable_behavior();
    set_has_normal();
    final_variable_behavior_.normal_ = CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgNormal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.normal)
  return final_variable_behavior_.normal_;
}

// bool ordered = 14;
inline void FunctionSignature_Aggregate::clear_ordered() {
  ordered_ = false;
}
inline bool FunctionSignature_Aggregate::ordered() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.ordered)
  return ordered_;
}
inline void FunctionSignature_Aggregate::set_ordered(bool value) {
  
  ordered_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.ordered)
}

// uint64 max_set = 12;
inline void FunctionSignature_Aggregate::clear_max_set() {
  max_set_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FunctionSignature_Aggregate::max_set() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.max_set)
  return max_set_;
}
inline void FunctionSignature_Aggregate::set_max_set(::google::protobuf::uint64 value) {
  
  max_set_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Aggregate.max_set)
}

// .substrait.Type intermediate_type = 13;
inline bool FunctionSignature_Aggregate::has_intermediate_type() const {
  return this != internal_default_instance() && intermediate_type_ != NULL;
}
inline const ::substrait::Type& FunctionSignature_Aggregate::_internal_intermediate_type() const {
  return *intermediate_type_;
}
inline const ::substrait::Type& FunctionSignature_Aggregate::intermediate_type() const {
  const ::substrait::Type* p = intermediate_type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.intermediate_type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::Type*>(
      &::substrait::_Type_default_instance_);
}
inline ::substrait::Type* FunctionSignature_Aggregate::release_intermediate_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Aggregate.intermediate_type)
  
  ::substrait::Type* temp = intermediate_type_;
  intermediate_type_ = NULL;
  return temp;
}
inline ::substrait::Type* FunctionSignature_Aggregate::mutable_intermediate_type() {
  
  if (intermediate_type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::Type>(GetArenaNoVirtual());
    intermediate_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.intermediate_type)
  return intermediate_type_;
}
inline void FunctionSignature_Aggregate::set_allocated_intermediate_type(::substrait::Type* intermediate_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(intermediate_type_);
  }
  if (intermediate_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intermediate_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intermediate_type, submessage_arena);
    }
    
  } else {
    
  }
  intermediate_type_ = intermediate_type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Aggregate.intermediate_type)
}

// repeated .substrait.FunctionSignature.Implementation implementations = 15;
inline int FunctionSignature_Aggregate::implementations_size() const {
  return implementations_.size();
}
inline void FunctionSignature_Aggregate::clear_implementations() {
  implementations_.Clear();
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Aggregate::mutable_implementations(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Aggregate.implementations)
  return implementations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
FunctionSignature_Aggregate::mutable_implementations() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Aggregate.implementations)
  return &implementations_;
}
inline const ::substrait::FunctionSignature_Implementation& FunctionSignature_Aggregate::implementations(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Aggregate.implementations)
  return implementations_.Get(index);
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Aggregate::add_implementations() {
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Aggregate.implementations)
  return implementations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
FunctionSignature_Aggregate::implementations() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Aggregate.implementations)
  return implementations_;
}

inline bool FunctionSignature_Aggregate::has_final_variable_behavior() const {
  return final_variable_behavior_case() != FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline void FunctionSignature_Aggregate::clear_has_final_variable_behavior() {
  _oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline FunctionSignature_Aggregate::FinalVariableBehaviorCase FunctionSignature_Aggregate::final_variable_behavior_case() const {
  return FunctionSignature_Aggregate::FinalVariableBehaviorCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature_Window

// repeated .substrait.FunctionSignature.Argument arguments = 2;
inline int FunctionSignature_Window::arguments_size() const {
  return arguments_.size();
}
inline void FunctionSignature_Window::clear_arguments() {
  arguments_.Clear();
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Window::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.arguments)
  return arguments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >*
FunctionSignature_Window::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Window.arguments)
  return &arguments_;
}
inline const ::substrait::FunctionSignature_Argument& FunctionSignature_Window::arguments(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.arguments)
  return arguments_.Get(index);
}
inline ::substrait::FunctionSignature_Argument* FunctionSignature_Window::add_arguments() {
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.arguments)
  return arguments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Argument >&
FunctionSignature_Window::arguments() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Window.arguments)
  return arguments_;
}

// repeated string name = 3;
inline int FunctionSignature_Window::name_size() const {
  return name_.size();
}
inline void FunctionSignature_Window::clear_name() {
  name_.Clear();
}
inline const ::std::string& FunctionSignature_Window::name(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.name)
  return name_.Get(index);
}
inline ::std::string* FunctionSignature_Window::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.name)
  return name_.Mutable(index);
}
inline void FunctionSignature_Window::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.name)
  name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void FunctionSignature_Window::set_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.name)
  name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void FunctionSignature_Window::set_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Window.name)
}
inline ::std::string* FunctionSignature_Window::add_name() {
  // @@protoc_insertion_point(field_add_mutable:substrait.FunctionSignature.Window.name)
  return name_.Add();
}
inline void FunctionSignature_Window::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.name)
}
#if LANG_CXX11
inline void FunctionSignature_Window::add_name(::std::string&& value) {
  name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.name)
}
#endif
inline void FunctionSignature_Window::add_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.FunctionSignature.Window.name)
}
inline void FunctionSignature_Window::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.FunctionSignature.Window.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionSignature_Window::name() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Window.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionSignature_Window::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Window.name)
  return &name_;
}

// .substrait.FunctionSignature.Description description = 4;
inline bool FunctionSignature_Window::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline void FunctionSignature_Window::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Window::_internal_description() const {
  return *description_;
}
inline const ::substrait::FunctionSignature_Description& FunctionSignature_Window::description() const {
  const ::substrait::FunctionSignature_Description* p = description_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.description)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::FunctionSignature_Description*>(
      &::substrait::_FunctionSignature_Description_default_instance_);
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Window::release_description() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.description)
  
  ::substrait::FunctionSignature_Description* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::substrait::FunctionSignature_Description* FunctionSignature_Window::mutable_description() {
  
  if (description_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::FunctionSignature_Description>(GetArenaNoVirtual());
    description_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.description)
  return description_;
}
inline void FunctionSignature_Window::set_allocated_description(::substrait::FunctionSignature_Description* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete description_;
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.description)
}

// bool deterministic = 7;
inline void FunctionSignature_Window::clear_deterministic() {
  deterministic_ = false;
}
inline bool FunctionSignature_Window::deterministic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.deterministic)
  return deterministic_;
}
inline void FunctionSignature_Window::set_deterministic(bool value) {
  
  deterministic_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.deterministic)
}

// bool session_dependent = 8;
inline void FunctionSignature_Window::clear_session_dependent() {
  session_dependent_ = false;
}
inline bool FunctionSignature_Window::session_dependent() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.session_dependent)
  return session_dependent_;
}
inline void FunctionSignature_Window::set_session_dependent(bool value) {
  
  session_dependent_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.session_dependent)
}

// .substrait.DerivationExpression intermediate_type = 9;
inline bool FunctionSignature_Window::has_intermediate_type() const {
  return this != internal_default_instance() && intermediate_type_ != NULL;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::_internal_intermediate_type() const {
  return *intermediate_type_;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::intermediate_type() const {
  const ::substrait::DerivationExpression* p = intermediate_type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.intermediate_type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::DerivationExpression*>(
      &::substrait::_DerivationExpression_default_instance_);
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::release_intermediate_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.intermediate_type)
  
  ::substrait::DerivationExpression* temp = intermediate_type_;
  intermediate_type_ = NULL;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::mutable_intermediate_type() {
  
  if (intermediate_type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArenaNoVirtual());
    intermediate_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.intermediate_type)
  return intermediate_type_;
}
inline void FunctionSignature_Window::set_allocated_intermediate_type(::substrait::DerivationExpression* intermediate_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(intermediate_type_);
  }
  if (intermediate_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intermediate_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intermediate_type, submessage_arena);
    }
    
  } else {
    
  }
  intermediate_type_ = intermediate_type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.intermediate_type)
}

// .substrait.DerivationExpression output_type = 10;
inline bool FunctionSignature_Window::has_output_type() const {
  return this != internal_default_instance() && output_type_ != NULL;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::_internal_output_type() const {
  return *output_type_;
}
inline const ::substrait::DerivationExpression& FunctionSignature_Window::output_type() const {
  const ::substrait::DerivationExpression* p = output_type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.output_type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::DerivationExpression*>(
      &::substrait::_DerivationExpression_default_instance_);
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::release_output_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.output_type)
  
  ::substrait::DerivationExpression* temp = output_type_;
  output_type_ = NULL;
  return temp;
}
inline ::substrait::DerivationExpression* FunctionSignature_Window::mutable_output_type() {
  
  if (output_type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::DerivationExpression>(GetArenaNoVirtual());
    output_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.output_type)
  return output_type_;
}
inline void FunctionSignature_Window::set_allocated_output_type(::substrait::DerivationExpression* output_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_type_);
  }
  if (output_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_type, submessage_arena);
    }
    
  } else {
    
  }
  output_type_ = output_type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Window.output_type)
}

// .substrait.FunctionSignature.FinalArgVariadic variadic = 16;
inline bool FunctionSignature_Window::has_variadic() const {
  return final_variable_behavior_case() == kVariadic;
}
inline void FunctionSignature_Window::set_has_variadic() {
  _oneof_case_[0] = kVariadic;
}
inline void FunctionSignature_Window::clear_variadic() {
  if (has_variadic()) {
    delete final_variable_behavior_.variadic_;
    clear_has_final_variable_behavior();
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Window::_internal_variadic() const {
  return *final_variable_behavior_.variadic_;
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Window::release_variadic() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.variadic)
  if (has_variadic()) {
    clear_has_final_variable_behavior();
      ::substrait::FunctionSignature_FinalArgVariadic* temp = final_variable_behavior_.variadic_;
    final_variable_behavior_.variadic_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_FinalArgVariadic& FunctionSignature_Window::variadic() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.variadic)
  return has_variadic()
      ? *final_variable_behavior_.variadic_
      : *reinterpret_cast< ::substrait::FunctionSignature_FinalArgVariadic*>(&::substrait::_FunctionSignature_FinalArgVariadic_default_instance_);
}
inline ::substrait::FunctionSignature_FinalArgVariadic* FunctionSignature_Window::mutable_variadic() {
  if (!has_variadic()) {
    clear_final_variable_behavior();
    set_has_variadic();
    final_variable_behavior_.variadic_ = CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgVariadic >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.variadic)
  return final_variable_behavior_.variadic_;
}

// .substrait.FunctionSignature.FinalArgNormal normal = 17;
inline bool FunctionSignature_Window::has_normal() const {
  return final_variable_behavior_case() == kNormal;
}
inline void FunctionSignature_Window::set_has_normal() {
  _oneof_case_[0] = kNormal;
}
inline void FunctionSignature_Window::clear_normal() {
  if (has_normal()) {
    delete final_variable_behavior_.normal_;
    clear_has_final_variable_behavior();
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Window::_internal_normal() const {
  return *final_variable_behavior_.normal_;
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Window::release_normal() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Window.normal)
  if (has_normal()) {
    clear_has_final_variable_behavior();
      ::substrait::FunctionSignature_FinalArgNormal* temp = final_variable_behavior_.normal_;
    final_variable_behavior_.normal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_FinalArgNormal& FunctionSignature_Window::normal() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.normal)
  return has_normal()
      ? *final_variable_behavior_.normal_
      : *reinterpret_cast< ::substrait::FunctionSignature_FinalArgNormal*>(&::substrait::_FunctionSignature_FinalArgNormal_default_instance_);
}
inline ::substrait::FunctionSignature_FinalArgNormal* FunctionSignature_Window::mutable_normal() {
  if (!has_normal()) {
    clear_final_variable_behavior();
    set_has_normal();
    final_variable_behavior_.normal_ = CreateMaybeMessage< ::substrait::FunctionSignature_FinalArgNormal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.normal)
  return final_variable_behavior_.normal_;
}

// bool ordered = 11;
inline void FunctionSignature_Window::clear_ordered() {
  ordered_ = false;
}
inline bool FunctionSignature_Window::ordered() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.ordered)
  return ordered_;
}
inline void FunctionSignature_Window::set_ordered(bool value) {
  
  ordered_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.ordered)
}

// uint64 max_set = 12;
inline void FunctionSignature_Window::clear_max_set() {
  max_set_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FunctionSignature_Window::max_set() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.max_set)
  return max_set_;
}
inline void FunctionSignature_Window::set_max_set(::google::protobuf::uint64 value) {
  
  max_set_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.max_set)
}

// .substrait.FunctionSignature.Window.WindowType window_type = 14;
inline void FunctionSignature_Window::clear_window_type() {
  window_type_ = 0;
}
inline ::substrait::FunctionSignature_Window_WindowType FunctionSignature_Window::window_type() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.window_type)
  return static_cast< ::substrait::FunctionSignature_Window_WindowType >(window_type_);
}
inline void FunctionSignature_Window::set_window_type(::substrait::FunctionSignature_Window_WindowType value) {
  
  window_type_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Window.window_type)
}

// repeated .substrait.FunctionSignature.Implementation implementations = 15;
inline int FunctionSignature_Window::implementations_size() const {
  return implementations_.size();
}
inline void FunctionSignature_Window::clear_implementations() {
  implementations_.Clear();
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Window::mutable_implementations(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Window.implementations)
  return implementations_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >*
FunctionSignature_Window::mutable_implementations() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Window.implementations)
  return &implementations_;
}
inline const ::substrait::FunctionSignature_Implementation& FunctionSignature_Window::implementations(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Window.implementations)
  return implementations_.Get(index);
}
inline ::substrait::FunctionSignature_Implementation* FunctionSignature_Window::add_implementations() {
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Window.implementations)
  return implementations_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::FunctionSignature_Implementation >&
FunctionSignature_Window::implementations() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Window.implementations)
  return implementations_;
}

inline bool FunctionSignature_Window::has_final_variable_behavior() const {
  return final_variable_behavior_case() != FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline void FunctionSignature_Window::clear_has_final_variable_behavior() {
  _oneof_case_[0] = FINAL_VARIABLE_BEHAVIOR_NOT_SET;
}
inline FunctionSignature_Window::FinalVariableBehaviorCase FunctionSignature_Window::final_variable_behavior_case() const {
  return FunctionSignature_Window::FinalVariableBehaviorCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature_Description

// string language = 1;
inline void FunctionSignature_Description::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionSignature_Description::language() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Description.language)
  return language_.GetNoArena();
}
inline void FunctionSignature_Description::set_language(const ::std::string& value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Description.language)
}
#if LANG_CXX11
inline void FunctionSignature_Description::set_language(::std::string&& value) {
  
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.FunctionSignature.Description.language)
}
#endif
inline void FunctionSignature_Description::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Description.language)
}
inline void FunctionSignature_Description::set_language(const char* value, size_t size) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Description.language)
}
inline ::std::string* FunctionSignature_Description::mutable_language() {
  
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Description.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionSignature_Description::release_language() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Description.language)
  
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionSignature_Description::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    
  } else {
    
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Description.language)
}

// string body = 2;
inline void FunctionSignature_Description::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionSignature_Description::body() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Description.body)
  return body_.GetNoArena();
}
inline void FunctionSignature_Description::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Description.body)
}
#if LANG_CXX11
inline void FunctionSignature_Description::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.FunctionSignature.Description.body)
}
#endif
inline void FunctionSignature_Description::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Description.body)
}
inline void FunctionSignature_Description::set_body(const char* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Description.body)
}
inline ::std::string* FunctionSignature_Description::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Description.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionSignature_Description::release_body() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Description.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionSignature_Description::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Description.body)
}

// -------------------------------------------------------------------

// FunctionSignature_Implementation

// .substrait.FunctionSignature.Implementation.Type type = 1;
inline void FunctionSignature_Implementation::clear_type() {
  type_ = 0;
}
inline ::substrait::FunctionSignature_Implementation_Type FunctionSignature_Implementation::type() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Implementation.type)
  return static_cast< ::substrait::FunctionSignature_Implementation_Type >(type_);
}
inline void FunctionSignature_Implementation::set_type(::substrait::FunctionSignature_Implementation_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Implementation.type)
}

// string uri = 2;
inline void FunctionSignature_Implementation::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionSignature_Implementation::uri() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Implementation.uri)
  return uri_.GetNoArena();
}
inline void FunctionSignature_Implementation::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Implementation.uri)
}
#if LANG_CXX11
inline void FunctionSignature_Implementation::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.FunctionSignature.Implementation.uri)
}
#endif
inline void FunctionSignature_Implementation::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Implementation.uri)
}
inline void FunctionSignature_Implementation::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Implementation.uri)
}
inline ::std::string* FunctionSignature_Implementation::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Implementation.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionSignature_Implementation::release_uri() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Implementation.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionSignature_Implementation::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Implementation.uri)
}

// -------------------------------------------------------------------

// FunctionSignature_Argument_ValueArgument

// .substrait.ParameterizedType type = 1;
inline bool FunctionSignature_Argument_ValueArgument::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_ValueArgument::_internal_type() const {
  return *type_;
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_ValueArgument::type() const {
  const ::substrait::ParameterizedType* p = type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.ValueArgument.type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType*>(
      &::substrait::_ParameterizedType_default_instance_);
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_ValueArgument::release_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.ValueArgument.type)
  
  ::substrait::ParameterizedType* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_ValueArgument::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.ValueArgument.type)
  return type_;
}
inline void FunctionSignature_Argument_ValueArgument::set_allocated_type(::substrait::ParameterizedType* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.ValueArgument.type)
}

// bool constant = 2;
inline void FunctionSignature_Argument_ValueArgument::clear_constant() {
  constant_ = false;
}
inline bool FunctionSignature_Argument_ValueArgument::constant() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.ValueArgument.constant)
  return constant_;
}
inline void FunctionSignature_Argument_ValueArgument::set_constant(bool value) {
  
  constant_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.ValueArgument.constant)
}

// -------------------------------------------------------------------

// FunctionSignature_Argument_TypeArgument

// .substrait.ParameterizedType type = 1;
inline bool FunctionSignature_Argument_TypeArgument::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_TypeArgument::_internal_type() const {
  return *type_;
}
inline const ::substrait::ParameterizedType& FunctionSignature_Argument_TypeArgument::type() const {
  const ::substrait::ParameterizedType* p = type_;
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.TypeArgument.type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType*>(
      &::substrait::_ParameterizedType_default_instance_);
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_TypeArgument::release_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.TypeArgument.type)
  
  ::substrait::ParameterizedType* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType* FunctionSignature_Argument_TypeArgument::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.TypeArgument.type)
  return type_;
}
inline void FunctionSignature_Argument_TypeArgument::set_allocated_type(::substrait::ParameterizedType* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(type_);
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.TypeArgument.type)
}

// -------------------------------------------------------------------

// FunctionSignature_Argument_EnumArgument

// repeated string options = 1;
inline int FunctionSignature_Argument_EnumArgument::options_size() const {
  return options_.size();
}
inline void FunctionSignature_Argument_EnumArgument::clear_options() {
  options_.Clear();
}
inline const ::std::string& FunctionSignature_Argument_EnumArgument::options(int index) const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.EnumArgument.options)
  return options_.Get(index);
}
inline ::std::string* FunctionSignature_Argument_EnumArgument::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.EnumArgument.options)
  return options_.Mutable(index);
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.EnumArgument.options)
  options_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.EnumArgument.options)
  options_.Mutable(index)->assign(std::move(value));
}
#endif
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::set_options(int index, const char* value, size_t size) {
  options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline ::std::string* FunctionSignature_Argument_EnumArgument::add_options() {
  // @@protoc_insertion_point(field_add_mutable:substrait.FunctionSignature.Argument.EnumArgument.options)
  return options_.Add();
}
inline void FunctionSignature_Argument_EnumArgument::add_options(const ::std::string& value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Argument.EnumArgument.options)
}
#if LANG_CXX11
inline void FunctionSignature_Argument_EnumArgument::add_options(::std::string&& value) {
  options_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.FunctionSignature.Argument.EnumArgument.options)
}
#endif
inline void FunctionSignature_Argument_EnumArgument::add_options(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline void FunctionSignature_Argument_EnumArgument::add_options(const char* value, size_t size) {
  options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.FunctionSignature.Argument.EnumArgument.options)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionSignature_Argument_EnumArgument::options() const {
  // @@protoc_insertion_point(field_list:substrait.FunctionSignature.Argument.EnumArgument.options)
  return options_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionSignature_Argument_EnumArgument::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:substrait.FunctionSignature.Argument.EnumArgument.options)
  return &options_;
}

// bool optional = 2;
inline void FunctionSignature_Argument_EnumArgument::clear_optional() {
  optional_ = false;
}
inline bool FunctionSignature_Argument_EnumArgument::optional() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.EnumArgument.optional)
  return optional_;
}
inline void FunctionSignature_Argument_EnumArgument::set_optional(bool value) {
  
  optional_ = value;
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.EnumArgument.optional)
}

// -------------------------------------------------------------------

// FunctionSignature_Argument

// string name = 1;
inline void FunctionSignature_Argument::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FunctionSignature_Argument::name() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.name)
  return name_.GetNoArena();
}
inline void FunctionSignature_Argument::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.FunctionSignature.Argument.name)
}
#if LANG_CXX11
inline void FunctionSignature_Argument::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.FunctionSignature.Argument.name)
}
#endif
inline void FunctionSignature_Argument::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.FunctionSignature.Argument.name)
}
inline void FunctionSignature_Argument::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.FunctionSignature.Argument.name)
}
inline ::std::string* FunctionSignature_Argument::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionSignature_Argument::release_name() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionSignature_Argument::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionSignature.Argument.name)
}

// .substrait.FunctionSignature.Argument.ValueArgument value = 2;
inline bool FunctionSignature_Argument::has_value() const {
  return argument_kind_case() == kValue;
}
inline void FunctionSignature_Argument::set_has_value() {
  _oneof_case_[0] = kValue;
}
inline void FunctionSignature_Argument::clear_value() {
  if (has_value()) {
    delete argument_kind_.value_;
    clear_has_argument_kind();
  }
}
inline const ::substrait::FunctionSignature_Argument_ValueArgument& FunctionSignature_Argument::_internal_value() const {
  return *argument_kind_.value_;
}
inline ::substrait::FunctionSignature_Argument_ValueArgument* FunctionSignature_Argument::release_value() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.value)
  if (has_value()) {
    clear_has_argument_kind();
      ::substrait::FunctionSignature_Argument_ValueArgument* temp = argument_kind_.value_;
    argument_kind_.value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_Argument_ValueArgument& FunctionSignature_Argument::value() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.value)
  return has_value()
      ? *argument_kind_.value_
      : *reinterpret_cast< ::substrait::FunctionSignature_Argument_ValueArgument*>(&::substrait::_FunctionSignature_Argument_ValueArgument_default_instance_);
}
inline ::substrait::FunctionSignature_Argument_ValueArgument* FunctionSignature_Argument::mutable_value() {
  if (!has_value()) {
    clear_argument_kind();
    set_has_value();
    argument_kind_.value_ = CreateMaybeMessage< ::substrait::FunctionSignature_Argument_ValueArgument >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.value)
  return argument_kind_.value_;
}

// .substrait.FunctionSignature.Argument.TypeArgument type = 3;
inline bool FunctionSignature_Argument::has_type() const {
  return argument_kind_case() == kType;
}
inline void FunctionSignature_Argument::set_has_type() {
  _oneof_case_[0] = kType;
}
inline void FunctionSignature_Argument::clear_type() {
  if (has_type()) {
    delete argument_kind_.type_;
    clear_has_argument_kind();
  }
}
inline const ::substrait::FunctionSignature_Argument_TypeArgument& FunctionSignature_Argument::_internal_type() const {
  return *argument_kind_.type_;
}
inline ::substrait::FunctionSignature_Argument_TypeArgument* FunctionSignature_Argument::release_type() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.type)
  if (has_type()) {
    clear_has_argument_kind();
      ::substrait::FunctionSignature_Argument_TypeArgument* temp = argument_kind_.type_;
    argument_kind_.type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_Argument_TypeArgument& FunctionSignature_Argument::type() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.type)
  return has_type()
      ? *argument_kind_.type_
      : *reinterpret_cast< ::substrait::FunctionSignature_Argument_TypeArgument*>(&::substrait::_FunctionSignature_Argument_TypeArgument_default_instance_);
}
inline ::substrait::FunctionSignature_Argument_TypeArgument* FunctionSignature_Argument::mutable_type() {
  if (!has_type()) {
    clear_argument_kind();
    set_has_type();
    argument_kind_.type_ = CreateMaybeMessage< ::substrait::FunctionSignature_Argument_TypeArgument >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.type)
  return argument_kind_.type_;
}

// .substrait.FunctionSignature.Argument.EnumArgument enum = 4;
inline bool FunctionSignature_Argument::has_enum_() const {
  return argument_kind_case() == kEnum;
}
inline void FunctionSignature_Argument::set_has_enum_() {
  _oneof_case_[0] = kEnum;
}
inline void FunctionSignature_Argument::clear_enum_() {
  if (has_enum_()) {
    delete argument_kind_.enum__;
    clear_has_argument_kind();
  }
}
inline const ::substrait::FunctionSignature_Argument_EnumArgument& FunctionSignature_Argument::_internal_enum_() const {
  return *argument_kind_.enum__;
}
inline ::substrait::FunctionSignature_Argument_EnumArgument* FunctionSignature_Argument::release_enum_() {
  // @@protoc_insertion_point(field_release:substrait.FunctionSignature.Argument.enum)
  if (has_enum_()) {
    clear_has_argument_kind();
      ::substrait::FunctionSignature_Argument_EnumArgument* temp = argument_kind_.enum__;
    argument_kind_.enum__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::FunctionSignature_Argument_EnumArgument& FunctionSignature_Argument::enum_() const {
  // @@protoc_insertion_point(field_get:substrait.FunctionSignature.Argument.enum)
  return has_enum_()
      ? *argument_kind_.enum__
      : *reinterpret_cast< ::substrait::FunctionSignature_Argument_EnumArgument*>(&::substrait::_FunctionSignature_Argument_EnumArgument_default_instance_);
}
inline ::substrait::FunctionSignature_Argument_EnumArgument* FunctionSignature_Argument::mutable_enum_() {
  if (!has_enum_()) {
    clear_argument_kind();
    set_has_enum_();
    argument_kind_.enum__ = CreateMaybeMessage< ::substrait::FunctionSignature_Argument_EnumArgument >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.FunctionSignature.Argument.enum)
  return argument_kind_.enum__;
}

inline bool FunctionSignature_Argument::has_argument_kind() const {
  return argument_kind_case() != ARGUMENT_KIND_NOT_SET;
}
inline void FunctionSignature_Argument::clear_has_argument_kind() {
  _oneof_case_[0] = ARGUMENT_KIND_NOT_SET;
}
inline FunctionSignature_Argument::ArgumentKindCase FunctionSignature_Argument::argument_kind_case() const {
  return FunctionSignature_Argument::ArgumentKindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FunctionSignature

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace substrait

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency>() {
  return ::substrait::FunctionSignature_FinalArgVariadic_ParameterConsistency_descriptor();
}
template <> struct is_proto_enum< ::substrait::FunctionSignature_Window_WindowType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::substrait::FunctionSignature_Window_WindowType>() {
  return ::substrait::FunctionSignature_Window_WindowType_descriptor();
}
template <> struct is_proto_enum< ::substrait::FunctionSignature_Implementation_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::substrait::FunctionSignature_Implementation_Type>() {
  return ::substrait::FunctionSignature_Implementation_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_substrait_2ffunction_2eproto
