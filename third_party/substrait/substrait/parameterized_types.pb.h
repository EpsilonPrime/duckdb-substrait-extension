// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/parameterized_types.proto

#ifndef PROTOBUF_INCLUDED_substrait_2fparameterized_5ftypes_2eproto
#define PROTOBUF_INCLUDED_substrait_2fparameterized_5ftypes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "substrait/type.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2fparameterized_5ftypes_2eproto 

namespace protobuf_substrait_2fparameterized_5ftypes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_substrait_2fparameterized_5ftypes_2eproto
namespace substrait {
class ParameterizedType;
class ParameterizedTypeDefaultTypeInternal;
extern ParameterizedTypeDefaultTypeInternal _ParameterizedType_default_instance_;
class ParameterizedType_IntegerOption;
class ParameterizedType_IntegerOptionDefaultTypeInternal;
extern ParameterizedType_IntegerOptionDefaultTypeInternal _ParameterizedType_IntegerOption_default_instance_;
class ParameterizedType_IntegerParameter;
class ParameterizedType_IntegerParameterDefaultTypeInternal;
extern ParameterizedType_IntegerParameterDefaultTypeInternal _ParameterizedType_IntegerParameter_default_instance_;
class ParameterizedType_NullableInteger;
class ParameterizedType_NullableIntegerDefaultTypeInternal;
extern ParameterizedType_NullableIntegerDefaultTypeInternal _ParameterizedType_NullableInteger_default_instance_;
class ParameterizedType_ParameterizedDecimal;
class ParameterizedType_ParameterizedDecimalDefaultTypeInternal;
extern ParameterizedType_ParameterizedDecimalDefaultTypeInternal _ParameterizedType_ParameterizedDecimal_default_instance_;
class ParameterizedType_ParameterizedFixedBinary;
class ParameterizedType_ParameterizedFixedBinaryDefaultTypeInternal;
extern ParameterizedType_ParameterizedFixedBinaryDefaultTypeInternal _ParameterizedType_ParameterizedFixedBinary_default_instance_;
class ParameterizedType_ParameterizedFixedChar;
class ParameterizedType_ParameterizedFixedCharDefaultTypeInternal;
extern ParameterizedType_ParameterizedFixedCharDefaultTypeInternal _ParameterizedType_ParameterizedFixedChar_default_instance_;
class ParameterizedType_ParameterizedList;
class ParameterizedType_ParameterizedListDefaultTypeInternal;
extern ParameterizedType_ParameterizedListDefaultTypeInternal _ParameterizedType_ParameterizedList_default_instance_;
class ParameterizedType_ParameterizedMap;
class ParameterizedType_ParameterizedMapDefaultTypeInternal;
extern ParameterizedType_ParameterizedMapDefaultTypeInternal _ParameterizedType_ParameterizedMap_default_instance_;
class ParameterizedType_ParameterizedNamedStruct;
class ParameterizedType_ParameterizedNamedStructDefaultTypeInternal;
extern ParameterizedType_ParameterizedNamedStructDefaultTypeInternal _ParameterizedType_ParameterizedNamedStruct_default_instance_;
class ParameterizedType_ParameterizedStruct;
class ParameterizedType_ParameterizedStructDefaultTypeInternal;
extern ParameterizedType_ParameterizedStructDefaultTypeInternal _ParameterizedType_ParameterizedStruct_default_instance_;
class ParameterizedType_ParameterizedUserDefined;
class ParameterizedType_ParameterizedUserDefinedDefaultTypeInternal;
extern ParameterizedType_ParameterizedUserDefinedDefaultTypeInternal _ParameterizedType_ParameterizedUserDefined_default_instance_;
class ParameterizedType_ParameterizedVarChar;
class ParameterizedType_ParameterizedVarCharDefaultTypeInternal;
extern ParameterizedType_ParameterizedVarCharDefaultTypeInternal _ParameterizedType_ParameterizedVarChar_default_instance_;
class ParameterizedType_TypeParameter;
class ParameterizedType_TypeParameterDefaultTypeInternal;
extern ParameterizedType_TypeParameterDefaultTypeInternal _ParameterizedType_TypeParameter_default_instance_;
}  // namespace substrait
namespace google {
namespace protobuf {
template<> ::substrait::ParameterizedType* Arena::CreateMaybeMessage<::substrait::ParameterizedType>(Arena*);
template<> ::substrait::ParameterizedType_IntegerOption* Arena::CreateMaybeMessage<::substrait::ParameterizedType_IntegerOption>(Arena*);
template<> ::substrait::ParameterizedType_IntegerParameter* Arena::CreateMaybeMessage<::substrait::ParameterizedType_IntegerParameter>(Arena*);
template<> ::substrait::ParameterizedType_NullableInteger* Arena::CreateMaybeMessage<::substrait::ParameterizedType_NullableInteger>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedDecimal* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedDecimal>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedFixedBinary* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedFixedBinary>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedFixedChar* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedFixedChar>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedList* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedList>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedMap* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedMap>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedNamedStruct* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedNamedStruct>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedStruct* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedStruct>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedUserDefined* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedUserDefined>(Arena*);
template<> ::substrait::ParameterizedType_ParameterizedVarChar* Arena::CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedVarChar>(Arena*);
template<> ::substrait::ParameterizedType_TypeParameter* Arena::CreateMaybeMessage<::substrait::ParameterizedType_TypeParameter>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace substrait {

// ===================================================================

class ParameterizedType_TypeParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.TypeParameter) */ {
 public:
  ParameterizedType_TypeParameter();
  virtual ~ParameterizedType_TypeParameter();

  ParameterizedType_TypeParameter(const ParameterizedType_TypeParameter& from);

  inline ParameterizedType_TypeParameter& operator=(const ParameterizedType_TypeParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_TypeParameter(ParameterizedType_TypeParameter&& from) noexcept
    : ParameterizedType_TypeParameter() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_TypeParameter& operator=(ParameterizedType_TypeParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_TypeParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_TypeParameter* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_TypeParameter*>(
               &_ParameterizedType_TypeParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ParameterizedType_TypeParameter* other);
  friend void swap(ParameterizedType_TypeParameter& a, ParameterizedType_TypeParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_TypeParameter* New() const final {
    return CreateMaybeMessage<ParameterizedType_TypeParameter>(NULL);
  }

  ParameterizedType_TypeParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_TypeParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_TypeParameter& from);
  void MergeFrom(const ParameterizedType_TypeParameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_TypeParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .substrait.ParameterizedType bounds = 2;
  int bounds_size() const;
  void clear_bounds();
  static const int kBoundsFieldNumber = 2;
  ::substrait::ParameterizedType* mutable_bounds(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >*
      mutable_bounds();
  const ::substrait::ParameterizedType& bounds(int index) const;
  ::substrait::ParameterizedType* add_bounds();
  const ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >&
      bounds() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.TypeParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType > bounds_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_IntegerParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.IntegerParameter) */ {
 public:
  ParameterizedType_IntegerParameter();
  virtual ~ParameterizedType_IntegerParameter();

  ParameterizedType_IntegerParameter(const ParameterizedType_IntegerParameter& from);

  inline ParameterizedType_IntegerParameter& operator=(const ParameterizedType_IntegerParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_IntegerParameter(ParameterizedType_IntegerParameter&& from) noexcept
    : ParameterizedType_IntegerParameter() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_IntegerParameter& operator=(ParameterizedType_IntegerParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_IntegerParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_IntegerParameter* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_IntegerParameter*>(
               &_ParameterizedType_IntegerParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ParameterizedType_IntegerParameter* other);
  friend void swap(ParameterizedType_IntegerParameter& a, ParameterizedType_IntegerParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_IntegerParameter* New() const final {
    return CreateMaybeMessage<ParameterizedType_IntegerParameter>(NULL);
  }

  ParameterizedType_IntegerParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_IntegerParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_IntegerParameter& from);
  void MergeFrom(const ParameterizedType_IntegerParameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_IntegerParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .substrait.ParameterizedType.NullableInteger range_start_inclusive = 2;
  bool has_range_start_inclusive() const;
  void clear_range_start_inclusive();
  static const int kRangeStartInclusiveFieldNumber = 2;
  private:
  const ::substrait::ParameterizedType_NullableInteger& _internal_range_start_inclusive() const;
  public:
  const ::substrait::ParameterizedType_NullableInteger& range_start_inclusive() const;
  ::substrait::ParameterizedType_NullableInteger* release_range_start_inclusive();
  ::substrait::ParameterizedType_NullableInteger* mutable_range_start_inclusive();
  void set_allocated_range_start_inclusive(::substrait::ParameterizedType_NullableInteger* range_start_inclusive);

  // .substrait.ParameterizedType.NullableInteger range_end_exclusive = 3;
  bool has_range_end_exclusive() const;
  void clear_range_end_exclusive();
  static const int kRangeEndExclusiveFieldNumber = 3;
  private:
  const ::substrait::ParameterizedType_NullableInteger& _internal_range_end_exclusive() const;
  public:
  const ::substrait::ParameterizedType_NullableInteger& range_end_exclusive() const;
  ::substrait::ParameterizedType_NullableInteger* release_range_end_exclusive();
  ::substrait::ParameterizedType_NullableInteger* mutable_range_end_exclusive();
  void set_allocated_range_end_exclusive(::substrait::ParameterizedType_NullableInteger* range_end_exclusive);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.IntegerParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::substrait::ParameterizedType_NullableInteger* range_start_inclusive_;
  ::substrait::ParameterizedType_NullableInteger* range_end_exclusive_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_NullableInteger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.NullableInteger) */ {
 public:
  ParameterizedType_NullableInteger();
  virtual ~ParameterizedType_NullableInteger();

  ParameterizedType_NullableInteger(const ParameterizedType_NullableInteger& from);

  inline ParameterizedType_NullableInteger& operator=(const ParameterizedType_NullableInteger& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_NullableInteger(ParameterizedType_NullableInteger&& from) noexcept
    : ParameterizedType_NullableInteger() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_NullableInteger& operator=(ParameterizedType_NullableInteger&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_NullableInteger& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_NullableInteger* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_NullableInteger*>(
               &_ParameterizedType_NullableInteger_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ParameterizedType_NullableInteger* other);
  friend void swap(ParameterizedType_NullableInteger& a, ParameterizedType_NullableInteger& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_NullableInteger* New() const final {
    return CreateMaybeMessage<ParameterizedType_NullableInteger>(NULL);
  }

  ParameterizedType_NullableInteger* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_NullableInteger>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_NullableInteger& from);
  void MergeFrom(const ParameterizedType_NullableInteger& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_NullableInteger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.NullableInteger)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedFixedChar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedFixedChar) */ {
 public:
  ParameterizedType_ParameterizedFixedChar();
  virtual ~ParameterizedType_ParameterizedFixedChar();

  ParameterizedType_ParameterizedFixedChar(const ParameterizedType_ParameterizedFixedChar& from);

  inline ParameterizedType_ParameterizedFixedChar& operator=(const ParameterizedType_ParameterizedFixedChar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedFixedChar(ParameterizedType_ParameterizedFixedChar&& from) noexcept
    : ParameterizedType_ParameterizedFixedChar() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedFixedChar& operator=(ParameterizedType_ParameterizedFixedChar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedFixedChar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedFixedChar* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedFixedChar*>(
               &_ParameterizedType_ParameterizedFixedChar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ParameterizedType_ParameterizedFixedChar* other);
  friend void swap(ParameterizedType_ParameterizedFixedChar& a, ParameterizedType_ParameterizedFixedChar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedFixedChar* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedChar>(NULL);
  }

  ParameterizedType_ParameterizedFixedChar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedChar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedFixedChar& from);
  void MergeFrom(const ParameterizedType_ParameterizedFixedChar& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedFixedChar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType.IntegerOption length = 1;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType_IntegerOption& _internal_length() const;
  public:
  const ::substrait::ParameterizedType_IntegerOption& length() const;
  ::substrait::ParameterizedType_IntegerOption* release_length();
  ::substrait::ParameterizedType_IntegerOption* mutable_length();
  void set_allocated_length(::substrait::ParameterizedType_IntegerOption* length);

  // uint32 variation_pointer = 2;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 2;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 3;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedFixedChar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType_IntegerOption* length_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedVarChar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedVarChar) */ {
 public:
  ParameterizedType_ParameterizedVarChar();
  virtual ~ParameterizedType_ParameterizedVarChar();

  ParameterizedType_ParameterizedVarChar(const ParameterizedType_ParameterizedVarChar& from);

  inline ParameterizedType_ParameterizedVarChar& operator=(const ParameterizedType_ParameterizedVarChar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedVarChar(ParameterizedType_ParameterizedVarChar&& from) noexcept
    : ParameterizedType_ParameterizedVarChar() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedVarChar& operator=(ParameterizedType_ParameterizedVarChar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedVarChar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedVarChar* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedVarChar*>(
               &_ParameterizedType_ParameterizedVarChar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ParameterizedType_ParameterizedVarChar* other);
  friend void swap(ParameterizedType_ParameterizedVarChar& a, ParameterizedType_ParameterizedVarChar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedVarChar* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedVarChar>(NULL);
  }

  ParameterizedType_ParameterizedVarChar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedVarChar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedVarChar& from);
  void MergeFrom(const ParameterizedType_ParameterizedVarChar& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedVarChar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType.IntegerOption length = 1;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType_IntegerOption& _internal_length() const;
  public:
  const ::substrait::ParameterizedType_IntegerOption& length() const;
  ::substrait::ParameterizedType_IntegerOption* release_length();
  ::substrait::ParameterizedType_IntegerOption* mutable_length();
  void set_allocated_length(::substrait::ParameterizedType_IntegerOption* length);

  // uint32 variation_pointer = 2;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 2;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 3;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedVarChar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType_IntegerOption* length_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedFixedBinary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedFixedBinary) */ {
 public:
  ParameterizedType_ParameterizedFixedBinary();
  virtual ~ParameterizedType_ParameterizedFixedBinary();

  ParameterizedType_ParameterizedFixedBinary(const ParameterizedType_ParameterizedFixedBinary& from);

  inline ParameterizedType_ParameterizedFixedBinary& operator=(const ParameterizedType_ParameterizedFixedBinary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedFixedBinary(ParameterizedType_ParameterizedFixedBinary&& from) noexcept
    : ParameterizedType_ParameterizedFixedBinary() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedFixedBinary& operator=(ParameterizedType_ParameterizedFixedBinary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedFixedBinary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedFixedBinary* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedFixedBinary*>(
               &_ParameterizedType_ParameterizedFixedBinary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ParameterizedType_ParameterizedFixedBinary* other);
  friend void swap(ParameterizedType_ParameterizedFixedBinary& a, ParameterizedType_ParameterizedFixedBinary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedFixedBinary* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedBinary>(NULL);
  }

  ParameterizedType_ParameterizedFixedBinary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedFixedBinary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedFixedBinary& from);
  void MergeFrom(const ParameterizedType_ParameterizedFixedBinary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedFixedBinary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType.IntegerOption length = 1;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType_IntegerOption& _internal_length() const;
  public:
  const ::substrait::ParameterizedType_IntegerOption& length() const;
  ::substrait::ParameterizedType_IntegerOption* release_length();
  ::substrait::ParameterizedType_IntegerOption* mutable_length();
  void set_allocated_length(::substrait::ParameterizedType_IntegerOption* length);

  // uint32 variation_pointer = 2;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 2;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 3;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedFixedBinary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType_IntegerOption* length_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedDecimal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedDecimal) */ {
 public:
  ParameterizedType_ParameterizedDecimal();
  virtual ~ParameterizedType_ParameterizedDecimal();

  ParameterizedType_ParameterizedDecimal(const ParameterizedType_ParameterizedDecimal& from);

  inline ParameterizedType_ParameterizedDecimal& operator=(const ParameterizedType_ParameterizedDecimal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedDecimal(ParameterizedType_ParameterizedDecimal&& from) noexcept
    : ParameterizedType_ParameterizedDecimal() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedDecimal& operator=(ParameterizedType_ParameterizedDecimal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedDecimal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedDecimal* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedDecimal*>(
               &_ParameterizedType_ParameterizedDecimal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ParameterizedType_ParameterizedDecimal* other);
  friend void swap(ParameterizedType_ParameterizedDecimal& a, ParameterizedType_ParameterizedDecimal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedDecimal* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedDecimal>(NULL);
  }

  ParameterizedType_ParameterizedDecimal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedDecimal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedDecimal& from);
  void MergeFrom(const ParameterizedType_ParameterizedDecimal& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedDecimal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType.IntegerOption scale = 1;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType_IntegerOption& _internal_scale() const;
  public:
  const ::substrait::ParameterizedType_IntegerOption& scale() const;
  ::substrait::ParameterizedType_IntegerOption* release_scale();
  ::substrait::ParameterizedType_IntegerOption* mutable_scale();
  void set_allocated_scale(::substrait::ParameterizedType_IntegerOption* scale);

  // .substrait.ParameterizedType.IntegerOption precision = 2;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 2;
  private:
  const ::substrait::ParameterizedType_IntegerOption& _internal_precision() const;
  public:
  const ::substrait::ParameterizedType_IntegerOption& precision() const;
  ::substrait::ParameterizedType_IntegerOption* release_precision();
  ::substrait::ParameterizedType_IntegerOption* mutable_precision();
  void set_allocated_precision(::substrait::ParameterizedType_IntegerOption* precision);

  // uint32 variation_pointer = 3;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 3;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 4;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 4;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedDecimal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType_IntegerOption* scale_;
  ::substrait::ParameterizedType_IntegerOption* precision_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedStruct) */ {
 public:
  ParameterizedType_ParameterizedStruct();
  virtual ~ParameterizedType_ParameterizedStruct();

  ParameterizedType_ParameterizedStruct(const ParameterizedType_ParameterizedStruct& from);

  inline ParameterizedType_ParameterizedStruct& operator=(const ParameterizedType_ParameterizedStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedStruct(ParameterizedType_ParameterizedStruct&& from) noexcept
    : ParameterizedType_ParameterizedStruct() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedStruct& operator=(ParameterizedType_ParameterizedStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedStruct& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedStruct* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedStruct*>(
               &_ParameterizedType_ParameterizedStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ParameterizedType_ParameterizedStruct* other);
  friend void swap(ParameterizedType_ParameterizedStruct& a, ParameterizedType_ParameterizedStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedStruct* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedStruct>(NULL);
  }

  ParameterizedType_ParameterizedStruct* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedStruct>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedStruct& from);
  void MergeFrom(const ParameterizedType_ParameterizedStruct& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .substrait.ParameterizedType types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::substrait::ParameterizedType* mutable_types(int index);
  ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >*
      mutable_types();
  const ::substrait::ParameterizedType& types(int index) const;
  ::substrait::ParameterizedType* add_types();
  const ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >&
      types() const;

  // uint32 variation_pointer = 2;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 2;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 3;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType > types_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedNamedStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedNamedStruct) */ {
 public:
  ParameterizedType_ParameterizedNamedStruct();
  virtual ~ParameterizedType_ParameterizedNamedStruct();

  ParameterizedType_ParameterizedNamedStruct(const ParameterizedType_ParameterizedNamedStruct& from);

  inline ParameterizedType_ParameterizedNamedStruct& operator=(const ParameterizedType_ParameterizedNamedStruct& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedNamedStruct(ParameterizedType_ParameterizedNamedStruct&& from) noexcept
    : ParameterizedType_ParameterizedNamedStruct() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedNamedStruct& operator=(ParameterizedType_ParameterizedNamedStruct&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedNamedStruct& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedNamedStruct* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedNamedStruct*>(
               &_ParameterizedType_ParameterizedNamedStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ParameterizedType_ParameterizedNamedStruct* other);
  friend void swap(ParameterizedType_ParameterizedNamedStruct& a, ParameterizedType_ParameterizedNamedStruct& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedNamedStruct* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedNamedStruct>(NULL);
  }

  ParameterizedType_ParameterizedNamedStruct* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedNamedStruct>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedNamedStruct& from);
  void MergeFrom(const ParameterizedType_ParameterizedNamedStruct& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedNamedStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string names = 1;
  int names_size() const;
  void clear_names();
  static const int kNamesFieldNumber = 1;
  const ::std::string& names(int index) const;
  ::std::string* mutable_names(int index);
  void set_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_names(int index, ::std::string&& value);
  #endif
  void set_names(int index, const char* value);
  void set_names(int index, const char* value, size_t size);
  ::std::string* add_names();
  void add_names(const ::std::string& value);
  #if LANG_CXX11
  void add_names(::std::string&& value);
  #endif
  void add_names(const char* value);
  void add_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // .substrait.ParameterizedType.ParameterizedStruct struct = 2;
  bool has_struct_() const;
  void clear_struct_();
  static const int kStructFieldNumber = 2;
  private:
  const ::substrait::ParameterizedType_ParameterizedStruct& _internal_struct_() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedStruct& struct_() const;
  ::substrait::ParameterizedType_ParameterizedStruct* release_struct_();
  ::substrait::ParameterizedType_ParameterizedStruct* mutable_struct_();
  void set_allocated_struct_(::substrait::ParameterizedType_ParameterizedStruct* struct_);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedNamedStruct)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> names_;
  ::substrait::ParameterizedType_ParameterizedStruct* struct__;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedList) */ {
 public:
  ParameterizedType_ParameterizedList();
  virtual ~ParameterizedType_ParameterizedList();

  ParameterizedType_ParameterizedList(const ParameterizedType_ParameterizedList& from);

  inline ParameterizedType_ParameterizedList& operator=(const ParameterizedType_ParameterizedList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedList(ParameterizedType_ParameterizedList&& from) noexcept
    : ParameterizedType_ParameterizedList() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedList& operator=(ParameterizedType_ParameterizedList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedList* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedList*>(
               &_ParameterizedType_ParameterizedList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ParameterizedType_ParameterizedList* other);
  friend void swap(ParameterizedType_ParameterizedList& a, ParameterizedType_ParameterizedList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedList* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedList>(NULL);
  }

  ParameterizedType_ParameterizedList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedList& from);
  void MergeFrom(const ParameterizedType_ParameterizedList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType& _internal_type() const;
  public:
  const ::substrait::ParameterizedType& type() const;
  ::substrait::ParameterizedType* release_type();
  ::substrait::ParameterizedType* mutable_type();
  void set_allocated_type(::substrait::ParameterizedType* type);

  // uint32 variation_pointer = 2;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 2;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 3;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType* type_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedMap) */ {
 public:
  ParameterizedType_ParameterizedMap();
  virtual ~ParameterizedType_ParameterizedMap();

  ParameterizedType_ParameterizedMap(const ParameterizedType_ParameterizedMap& from);

  inline ParameterizedType_ParameterizedMap& operator=(const ParameterizedType_ParameterizedMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedMap(ParameterizedType_ParameterizedMap&& from) noexcept
    : ParameterizedType_ParameterizedMap() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedMap& operator=(ParameterizedType_ParameterizedMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedMap* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedMap*>(
               &_ParameterizedType_ParameterizedMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ParameterizedType_ParameterizedMap* other);
  friend void swap(ParameterizedType_ParameterizedMap& a, ParameterizedType_ParameterizedMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedMap* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedMap>(NULL);
  }

  ParameterizedType_ParameterizedMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedMap& from);
  void MergeFrom(const ParameterizedType_ParameterizedMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .substrait.ParameterizedType key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  private:
  const ::substrait::ParameterizedType& _internal_key() const;
  public:
  const ::substrait::ParameterizedType& key() const;
  ::substrait::ParameterizedType* release_key();
  ::substrait::ParameterizedType* mutable_key();
  void set_allocated_key(::substrait::ParameterizedType* key);

  // .substrait.ParameterizedType value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::substrait::ParameterizedType& _internal_value() const;
  public:
  const ::substrait::ParameterizedType& value() const;
  ::substrait::ParameterizedType* release_value();
  ::substrait::ParameterizedType* mutable_value();
  void set_allocated_value(::substrait::ParameterizedType* value);

  // uint32 variation_pointer = 3;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 3;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 4;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 4;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::substrait::ParameterizedType* key_;
  ::substrait::ParameterizedType* value_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_ParameterizedUserDefined : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.ParameterizedUserDefined) */ {
 public:
  ParameterizedType_ParameterizedUserDefined();
  virtual ~ParameterizedType_ParameterizedUserDefined();

  ParameterizedType_ParameterizedUserDefined(const ParameterizedType_ParameterizedUserDefined& from);

  inline ParameterizedType_ParameterizedUserDefined& operator=(const ParameterizedType_ParameterizedUserDefined& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_ParameterizedUserDefined(ParameterizedType_ParameterizedUserDefined&& from) noexcept
    : ParameterizedType_ParameterizedUserDefined() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_ParameterizedUserDefined& operator=(ParameterizedType_ParameterizedUserDefined&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_ParameterizedUserDefined& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_ParameterizedUserDefined* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_ParameterizedUserDefined*>(
               &_ParameterizedType_ParameterizedUserDefined_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ParameterizedType_ParameterizedUserDefined* other);
  friend void swap(ParameterizedType_ParameterizedUserDefined& a, ParameterizedType_ParameterizedUserDefined& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_ParameterizedUserDefined* New() const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedUserDefined>(NULL);
  }

  ParameterizedType_ParameterizedUserDefined* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_ParameterizedUserDefined>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_ParameterizedUserDefined& from);
  void MergeFrom(const ParameterizedType_ParameterizedUserDefined& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_ParameterizedUserDefined* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type_pointer = 1;
  void clear_type_pointer();
  static const int kTypePointerFieldNumber = 1;
  ::google::protobuf::uint32 type_pointer() const;
  void set_type_pointer(::google::protobuf::uint32 value);

  // uint32 variation_pointer = 2;
  void clear_variation_pointer();
  static const int kVariationPointerFieldNumber = 2;
  ::google::protobuf::uint32 variation_pointer() const;
  void set_variation_pointer(::google::protobuf::uint32 value);

  // .substrait.Type.Nullability nullability = 3;
  void clear_nullability();
  static const int kNullabilityFieldNumber = 3;
  ::substrait::Type_Nullability nullability() const;
  void set_nullability(::substrait::Type_Nullability value);

  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.ParameterizedUserDefined)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_pointer_;
  ::google::protobuf::uint32 variation_pointer_;
  int nullability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType_IntegerOption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType.IntegerOption) */ {
 public:
  ParameterizedType_IntegerOption();
  virtual ~ParameterizedType_IntegerOption();

  ParameterizedType_IntegerOption(const ParameterizedType_IntegerOption& from);

  inline ParameterizedType_IntegerOption& operator=(const ParameterizedType_IntegerOption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType_IntegerOption(ParameterizedType_IntegerOption&& from) noexcept
    : ParameterizedType_IntegerOption() {
    *this = ::std::move(from);
  }

  inline ParameterizedType_IntegerOption& operator=(ParameterizedType_IntegerOption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType_IntegerOption& default_instance();

  enum IntegerTypeCase {
    kLiteral = 1,
    kParameter = 2,
    INTEGER_TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType_IntegerOption* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType_IntegerOption*>(
               &_ParameterizedType_IntegerOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ParameterizedType_IntegerOption* other);
  friend void swap(ParameterizedType_IntegerOption& a, ParameterizedType_IntegerOption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType_IntegerOption* New() const final {
    return CreateMaybeMessage<ParameterizedType_IntegerOption>(NULL);
  }

  ParameterizedType_IntegerOption* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType_IntegerOption>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType_IntegerOption& from);
  void MergeFrom(const ParameterizedType_IntegerOption& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType_IntegerOption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 literal = 1;
  private:
  bool has_literal() const;
  public:
  void clear_literal();
  static const int kLiteralFieldNumber = 1;
  ::google::protobuf::int32 literal() const;
  void set_literal(::google::protobuf::int32 value);

  // .substrait.ParameterizedType.IntegerParameter parameter = 2;
  bool has_parameter() const;
  void clear_parameter();
  static const int kParameterFieldNumber = 2;
  private:
  const ::substrait::ParameterizedType_IntegerParameter& _internal_parameter() const;
  public:
  const ::substrait::ParameterizedType_IntegerParameter& parameter() const;
  ::substrait::ParameterizedType_IntegerParameter* release_parameter();
  ::substrait::ParameterizedType_IntegerParameter* mutable_parameter();
  void set_allocated_parameter(::substrait::ParameterizedType_IntegerParameter* parameter);

  void clear_integer_type();
  IntegerTypeCase integer_type_case() const;
  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType.IntegerOption)
 private:
  void set_has_literal();
  void set_has_parameter();

  inline bool has_integer_type() const;
  inline void clear_has_integer_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union IntegerTypeUnion {
    IntegerTypeUnion() {}
    ::google::protobuf::int32 literal_;
    ::substrait::ParameterizedType_IntegerParameter* parameter_;
  } integer_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParameterizedType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:substrait.ParameterizedType) */ {
 public:
  ParameterizedType();
  virtual ~ParameterizedType();

  ParameterizedType(const ParameterizedType& from);

  inline ParameterizedType& operator=(const ParameterizedType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParameterizedType(ParameterizedType&& from) noexcept
    : ParameterizedType() {
    *this = ::std::move(from);
  }

  inline ParameterizedType& operator=(ParameterizedType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterizedType& default_instance();

  enum KindCase {
    kBool = 1,
    kI8 = 2,
    kI16 = 3,
    kI32 = 5,
    kI64 = 7,
    kFp32 = 10,
    kFp64 = 11,
    kString = 12,
    kBinary = 13,
    kTimestamp = 14,
    kDate = 16,
    kTime = 17,
    kIntervalYear = 19,
    kIntervalDay = 20,
    kTimestampTz = 29,
    kUuid = 32,
    kFixedChar = 21,
    kVarchar = 22,
    kFixedBinary = 23,
    kDecimal = 24,
    kStruct = 25,
    kList = 27,
    kMap = 28,
    kUserDefined = 30,
    kUserDefinedPointer = 31,
    kTypeParameter = 33,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParameterizedType* internal_default_instance() {
    return reinterpret_cast<const ParameterizedType*>(
               &_ParameterizedType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ParameterizedType* other);
  friend void swap(ParameterizedType& a, ParameterizedType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParameterizedType* New() const final {
    return CreateMaybeMessage<ParameterizedType>(NULL);
  }

  ParameterizedType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParameterizedType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParameterizedType& from);
  void MergeFrom(const ParameterizedType& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParameterizedType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ParameterizedType_TypeParameter TypeParameter;
  typedef ParameterizedType_IntegerParameter IntegerParameter;
  typedef ParameterizedType_NullableInteger NullableInteger;
  typedef ParameterizedType_ParameterizedFixedChar ParameterizedFixedChar;
  typedef ParameterizedType_ParameterizedVarChar ParameterizedVarChar;
  typedef ParameterizedType_ParameterizedFixedBinary ParameterizedFixedBinary;
  typedef ParameterizedType_ParameterizedDecimal ParameterizedDecimal;
  typedef ParameterizedType_ParameterizedStruct ParameterizedStruct;
  typedef ParameterizedType_ParameterizedNamedStruct ParameterizedNamedStruct;
  typedef ParameterizedType_ParameterizedList ParameterizedList;
  typedef ParameterizedType_ParameterizedMap ParameterizedMap;
  typedef ParameterizedType_ParameterizedUserDefined ParameterizedUserDefined;
  typedef ParameterizedType_IntegerOption IntegerOption;

  // accessors -------------------------------------------------------

  // .substrait.Type.Boolean bool = 1;
  bool has_bool_() const;
  void clear_bool_();
  static const int kBoolFieldNumber = 1;
  private:
  const ::substrait::Type_Boolean& _internal_bool_() const;
  public:
  const ::substrait::Type_Boolean& bool_() const;
  ::substrait::Type_Boolean* release_bool_();
  ::substrait::Type_Boolean* mutable_bool_();
  void set_allocated_bool_(::substrait::Type_Boolean* bool_);

  // .substrait.Type.I8 i8 = 2;
  bool has_i8() const;
  void clear_i8();
  static const int kI8FieldNumber = 2;
  private:
  const ::substrait::Type_I8& _internal_i8() const;
  public:
  const ::substrait::Type_I8& i8() const;
  ::substrait::Type_I8* release_i8();
  ::substrait::Type_I8* mutable_i8();
  void set_allocated_i8(::substrait::Type_I8* i8);

  // .substrait.Type.I16 i16 = 3;
  bool has_i16() const;
  void clear_i16();
  static const int kI16FieldNumber = 3;
  private:
  const ::substrait::Type_I16& _internal_i16() const;
  public:
  const ::substrait::Type_I16& i16() const;
  ::substrait::Type_I16* release_i16();
  ::substrait::Type_I16* mutable_i16();
  void set_allocated_i16(::substrait::Type_I16* i16);

  // .substrait.Type.I32 i32 = 5;
  bool has_i32() const;
  void clear_i32();
  static const int kI32FieldNumber = 5;
  private:
  const ::substrait::Type_I32& _internal_i32() const;
  public:
  const ::substrait::Type_I32& i32() const;
  ::substrait::Type_I32* release_i32();
  ::substrait::Type_I32* mutable_i32();
  void set_allocated_i32(::substrait::Type_I32* i32);

  // .substrait.Type.I64 i64 = 7;
  bool has_i64() const;
  void clear_i64();
  static const int kI64FieldNumber = 7;
  private:
  const ::substrait::Type_I64& _internal_i64() const;
  public:
  const ::substrait::Type_I64& i64() const;
  ::substrait::Type_I64* release_i64();
  ::substrait::Type_I64* mutable_i64();
  void set_allocated_i64(::substrait::Type_I64* i64);

  // .substrait.Type.FP32 fp32 = 10;
  bool has_fp32() const;
  void clear_fp32();
  static const int kFp32FieldNumber = 10;
  private:
  const ::substrait::Type_FP32& _internal_fp32() const;
  public:
  const ::substrait::Type_FP32& fp32() const;
  ::substrait::Type_FP32* release_fp32();
  ::substrait::Type_FP32* mutable_fp32();
  void set_allocated_fp32(::substrait::Type_FP32* fp32);

  // .substrait.Type.FP64 fp64 = 11;
  bool has_fp64() const;
  void clear_fp64();
  static const int kFp64FieldNumber = 11;
  private:
  const ::substrait::Type_FP64& _internal_fp64() const;
  public:
  const ::substrait::Type_FP64& fp64() const;
  ::substrait::Type_FP64* release_fp64();
  ::substrait::Type_FP64* mutable_fp64();
  void set_allocated_fp64(::substrait::Type_FP64* fp64);

  // .substrait.Type.String string = 12;
  bool has_string() const;
  void clear_string();
  static const int kStringFieldNumber = 12;
  private:
  const ::substrait::Type_String& _internal_string() const;
  public:
  const ::substrait::Type_String& string() const;
  ::substrait::Type_String* release_string();
  ::substrait::Type_String* mutable_string();
  void set_allocated_string(::substrait::Type_String* string);

  // .substrait.Type.Binary binary = 13;
  bool has_binary() const;
  void clear_binary();
  static const int kBinaryFieldNumber = 13;
  private:
  const ::substrait::Type_Binary& _internal_binary() const;
  public:
  const ::substrait::Type_Binary& binary() const;
  ::substrait::Type_Binary* release_binary();
  ::substrait::Type_Binary* mutable_binary();
  void set_allocated_binary(::substrait::Type_Binary* binary);

  // .substrait.Type.Timestamp timestamp = 14;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 14;
  private:
  const ::substrait::Type_Timestamp& _internal_timestamp() const;
  public:
  const ::substrait::Type_Timestamp& timestamp() const;
  ::substrait::Type_Timestamp* release_timestamp();
  ::substrait::Type_Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::substrait::Type_Timestamp* timestamp);

  // .substrait.Type.Date date = 16;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 16;
  private:
  const ::substrait::Type_Date& _internal_date() const;
  public:
  const ::substrait::Type_Date& date() const;
  ::substrait::Type_Date* release_date();
  ::substrait::Type_Date* mutable_date();
  void set_allocated_date(::substrait::Type_Date* date);

  // .substrait.Type.Time time = 17;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 17;
  private:
  const ::substrait::Type_Time& _internal_time() const;
  public:
  const ::substrait::Type_Time& time() const;
  ::substrait::Type_Time* release_time();
  ::substrait::Type_Time* mutable_time();
  void set_allocated_time(::substrait::Type_Time* time);

  // .substrait.Type.IntervalYear interval_year = 19;
  bool has_interval_year() const;
  void clear_interval_year();
  static const int kIntervalYearFieldNumber = 19;
  private:
  const ::substrait::Type_IntervalYear& _internal_interval_year() const;
  public:
  const ::substrait::Type_IntervalYear& interval_year() const;
  ::substrait::Type_IntervalYear* release_interval_year();
  ::substrait::Type_IntervalYear* mutable_interval_year();
  void set_allocated_interval_year(::substrait::Type_IntervalYear* interval_year);

  // .substrait.Type.IntervalDay interval_day = 20;
  bool has_interval_day() const;
  void clear_interval_day();
  static const int kIntervalDayFieldNumber = 20;
  private:
  const ::substrait::Type_IntervalDay& _internal_interval_day() const;
  public:
  const ::substrait::Type_IntervalDay& interval_day() const;
  ::substrait::Type_IntervalDay* release_interval_day();
  ::substrait::Type_IntervalDay* mutable_interval_day();
  void set_allocated_interval_day(::substrait::Type_IntervalDay* interval_day);

  // .substrait.Type.TimestampTZ timestamp_tz = 29;
  bool has_timestamp_tz() const;
  void clear_timestamp_tz();
  static const int kTimestampTzFieldNumber = 29;
  private:
  const ::substrait::Type_TimestampTZ& _internal_timestamp_tz() const;
  public:
  const ::substrait::Type_TimestampTZ& timestamp_tz() const;
  ::substrait::Type_TimestampTZ* release_timestamp_tz();
  ::substrait::Type_TimestampTZ* mutable_timestamp_tz();
  void set_allocated_timestamp_tz(::substrait::Type_TimestampTZ* timestamp_tz);

  // .substrait.Type.UUID uuid = 32;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 32;
  private:
  const ::substrait::Type_UUID& _internal_uuid() const;
  public:
  const ::substrait::Type_UUID& uuid() const;
  ::substrait::Type_UUID* release_uuid();
  ::substrait::Type_UUID* mutable_uuid();
  void set_allocated_uuid(::substrait::Type_UUID* uuid);

  // .substrait.ParameterizedType.ParameterizedFixedChar fixed_char = 21;
  bool has_fixed_char() const;
  void clear_fixed_char();
  static const int kFixedCharFieldNumber = 21;
  private:
  const ::substrait::ParameterizedType_ParameterizedFixedChar& _internal_fixed_char() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedFixedChar& fixed_char() const;
  ::substrait::ParameterizedType_ParameterizedFixedChar* release_fixed_char();
  ::substrait::ParameterizedType_ParameterizedFixedChar* mutable_fixed_char();
  void set_allocated_fixed_char(::substrait::ParameterizedType_ParameterizedFixedChar* fixed_char);

  // .substrait.ParameterizedType.ParameterizedVarChar varchar = 22;
  bool has_varchar() const;
  void clear_varchar();
  static const int kVarcharFieldNumber = 22;
  private:
  const ::substrait::ParameterizedType_ParameterizedVarChar& _internal_varchar() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedVarChar& varchar() const;
  ::substrait::ParameterizedType_ParameterizedVarChar* release_varchar();
  ::substrait::ParameterizedType_ParameterizedVarChar* mutable_varchar();
  void set_allocated_varchar(::substrait::ParameterizedType_ParameterizedVarChar* varchar);

  // .substrait.ParameterizedType.ParameterizedFixedBinary fixed_binary = 23;
  bool has_fixed_binary() const;
  void clear_fixed_binary();
  static const int kFixedBinaryFieldNumber = 23;
  private:
  const ::substrait::ParameterizedType_ParameterizedFixedBinary& _internal_fixed_binary() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedFixedBinary& fixed_binary() const;
  ::substrait::ParameterizedType_ParameterizedFixedBinary* release_fixed_binary();
  ::substrait::ParameterizedType_ParameterizedFixedBinary* mutable_fixed_binary();
  void set_allocated_fixed_binary(::substrait::ParameterizedType_ParameterizedFixedBinary* fixed_binary);

  // .substrait.ParameterizedType.ParameterizedDecimal decimal = 24;
  bool has_decimal() const;
  void clear_decimal();
  static const int kDecimalFieldNumber = 24;
  private:
  const ::substrait::ParameterizedType_ParameterizedDecimal& _internal_decimal() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedDecimal& decimal() const;
  ::substrait::ParameterizedType_ParameterizedDecimal* release_decimal();
  ::substrait::ParameterizedType_ParameterizedDecimal* mutable_decimal();
  void set_allocated_decimal(::substrait::ParameterizedType_ParameterizedDecimal* decimal);

  // .substrait.ParameterizedType.ParameterizedStruct struct = 25;
  bool has_struct_() const;
  void clear_struct_();
  static const int kStructFieldNumber = 25;
  private:
  const ::substrait::ParameterizedType_ParameterizedStruct& _internal_struct_() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedStruct& struct_() const;
  ::substrait::ParameterizedType_ParameterizedStruct* release_struct_();
  ::substrait::ParameterizedType_ParameterizedStruct* mutable_struct_();
  void set_allocated_struct_(::substrait::ParameterizedType_ParameterizedStruct* struct_);

  // .substrait.ParameterizedType.ParameterizedList list = 27;
  bool has_list() const;
  void clear_list();
  static const int kListFieldNumber = 27;
  private:
  const ::substrait::ParameterizedType_ParameterizedList& _internal_list() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedList& list() const;
  ::substrait::ParameterizedType_ParameterizedList* release_list();
  ::substrait::ParameterizedType_ParameterizedList* mutable_list();
  void set_allocated_list(::substrait::ParameterizedType_ParameterizedList* list);

  // .substrait.ParameterizedType.ParameterizedMap map = 28;
  bool has_map() const;
  void clear_map();
  static const int kMapFieldNumber = 28;
  private:
  const ::substrait::ParameterizedType_ParameterizedMap& _internal_map() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedMap& map() const;
  ::substrait::ParameterizedType_ParameterizedMap* release_map();
  ::substrait::ParameterizedType_ParameterizedMap* mutable_map();
  void set_allocated_map(::substrait::ParameterizedType_ParameterizedMap* map);

  // .substrait.ParameterizedType.ParameterizedUserDefined user_defined = 30;
  bool has_user_defined() const;
  void clear_user_defined();
  static const int kUserDefinedFieldNumber = 30;
  private:
  const ::substrait::ParameterizedType_ParameterizedUserDefined& _internal_user_defined() const;
  public:
  const ::substrait::ParameterizedType_ParameterizedUserDefined& user_defined() const;
  ::substrait::ParameterizedType_ParameterizedUserDefined* release_user_defined();
  ::substrait::ParameterizedType_ParameterizedUserDefined* mutable_user_defined();
  void set_allocated_user_defined(::substrait::ParameterizedType_ParameterizedUserDefined* user_defined);

  // uint32 user_defined_pointer = 31 [deprecated = true];
  private:
  bool has_user_defined_pointer() const;
  public:
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_user_defined_pointer();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kUserDefinedPointerFieldNumber = 31;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::uint32 user_defined_pointer() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_user_defined_pointer(::google::protobuf::uint32 value);

  // .substrait.ParameterizedType.TypeParameter type_parameter = 33;
  bool has_type_parameter() const;
  void clear_type_parameter();
  static const int kTypeParameterFieldNumber = 33;
  private:
  const ::substrait::ParameterizedType_TypeParameter& _internal_type_parameter() const;
  public:
  const ::substrait::ParameterizedType_TypeParameter& type_parameter() const;
  ::substrait::ParameterizedType_TypeParameter* release_type_parameter();
  ::substrait::ParameterizedType_TypeParameter* mutable_type_parameter();
  void set_allocated_type_parameter(::substrait::ParameterizedType_TypeParameter* type_parameter);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:substrait.ParameterizedType)
 private:
  void set_has_bool_();
  void set_has_i8();
  void set_has_i16();
  void set_has_i32();
  void set_has_i64();
  void set_has_fp32();
  void set_has_fp64();
  void set_has_string();
  void set_has_binary();
  void set_has_timestamp();
  void set_has_date();
  void set_has_time();
  void set_has_interval_year();
  void set_has_interval_day();
  void set_has_timestamp_tz();
  void set_has_uuid();
  void set_has_fixed_char();
  void set_has_varchar();
  void set_has_fixed_binary();
  void set_has_decimal();
  void set_has_struct_();
  void set_has_list();
  void set_has_map();
  void set_has_user_defined();
  void set_has_user_defined_pointer();
  void set_has_type_parameter();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union KindUnion {
    KindUnion() {}
    ::substrait::Type_Boolean* bool__;
    ::substrait::Type_I8* i8_;
    ::substrait::Type_I16* i16_;
    ::substrait::Type_I32* i32_;
    ::substrait::Type_I64* i64_;
    ::substrait::Type_FP32* fp32_;
    ::substrait::Type_FP64* fp64_;
    ::substrait::Type_String* string_;
    ::substrait::Type_Binary* binary_;
    ::substrait::Type_Timestamp* timestamp_;
    ::substrait::Type_Date* date_;
    ::substrait::Type_Time* time_;
    ::substrait::Type_IntervalYear* interval_year_;
    ::substrait::Type_IntervalDay* interval_day_;
    ::substrait::Type_TimestampTZ* timestamp_tz_;
    ::substrait::Type_UUID* uuid_;
    ::substrait::ParameterizedType_ParameterizedFixedChar* fixed_char_;
    ::substrait::ParameterizedType_ParameterizedVarChar* varchar_;
    ::substrait::ParameterizedType_ParameterizedFixedBinary* fixed_binary_;
    ::substrait::ParameterizedType_ParameterizedDecimal* decimal_;
    ::substrait::ParameterizedType_ParameterizedStruct* struct__;
    ::substrait::ParameterizedType_ParameterizedList* list_;
    ::substrait::ParameterizedType_ParameterizedMap* map_;
    ::substrait::ParameterizedType_ParameterizedUserDefined* user_defined_;
    ::google::protobuf::uint32 user_defined_pointer_;
    ::substrait::ParameterizedType_TypeParameter* type_parameter_;
  } kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_substrait_2fparameterized_5ftypes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParameterizedType_TypeParameter

// string name = 1;
inline void ParameterizedType_TypeParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterizedType_TypeParameter::name() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.TypeParameter.name)
  return name_.GetNoArena();
}
inline void ParameterizedType_TypeParameter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.TypeParameter.name)
}
#if LANG_CXX11
inline void ParameterizedType_TypeParameter::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.ParameterizedType.TypeParameter.name)
}
#endif
inline void ParameterizedType_TypeParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.ParameterizedType.TypeParameter.name)
}
inline void ParameterizedType_TypeParameter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.ParameterizedType.TypeParameter.name)
}
inline ::std::string* ParameterizedType_TypeParameter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.TypeParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterizedType_TypeParameter::release_name() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.TypeParameter.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterizedType_TypeParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.TypeParameter.name)
}

// repeated .substrait.ParameterizedType bounds = 2;
inline int ParameterizedType_TypeParameter::bounds_size() const {
  return bounds_.size();
}
inline void ParameterizedType_TypeParameter::clear_bounds() {
  bounds_.Clear();
}
inline ::substrait::ParameterizedType* ParameterizedType_TypeParameter::mutable_bounds(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.TypeParameter.bounds)
  return bounds_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >*
ParameterizedType_TypeParameter::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:substrait.ParameterizedType.TypeParameter.bounds)
  return &bounds_;
}
inline const ::substrait::ParameterizedType& ParameterizedType_TypeParameter::bounds(int index) const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.TypeParameter.bounds)
  return bounds_.Get(index);
}
inline ::substrait::ParameterizedType* ParameterizedType_TypeParameter::add_bounds() {
  // @@protoc_insertion_point(field_add:substrait.ParameterizedType.TypeParameter.bounds)
  return bounds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >&
ParameterizedType_TypeParameter::bounds() const {
  // @@protoc_insertion_point(field_list:substrait.ParameterizedType.TypeParameter.bounds)
  return bounds_;
}

// -------------------------------------------------------------------

// ParameterizedType_IntegerParameter

// string name = 1;
inline void ParameterizedType_IntegerParameter::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ParameterizedType_IntegerParameter::name() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.IntegerParameter.name)
  return name_.GetNoArena();
}
inline void ParameterizedType_IntegerParameter::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.IntegerParameter.name)
}
#if LANG_CXX11
inline void ParameterizedType_IntegerParameter::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:substrait.ParameterizedType.IntegerParameter.name)
}
#endif
inline void ParameterizedType_IntegerParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:substrait.ParameterizedType.IntegerParameter.name)
}
inline void ParameterizedType_IntegerParameter::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:substrait.ParameterizedType.IntegerParameter.name)
}
inline ::std::string* ParameterizedType_IntegerParameter::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.IntegerParameter.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterizedType_IntegerParameter::release_name() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.IntegerParameter.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterizedType_IntegerParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.IntegerParameter.name)
}

// .substrait.ParameterizedType.NullableInteger range_start_inclusive = 2;
inline bool ParameterizedType_IntegerParameter::has_range_start_inclusive() const {
  return this != internal_default_instance() && range_start_inclusive_ != NULL;
}
inline void ParameterizedType_IntegerParameter::clear_range_start_inclusive() {
  if (GetArenaNoVirtual() == NULL && range_start_inclusive_ != NULL) {
    delete range_start_inclusive_;
  }
  range_start_inclusive_ = NULL;
}
inline const ::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::_internal_range_start_inclusive() const {
  return *range_start_inclusive_;
}
inline const ::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::range_start_inclusive() const {
  const ::substrait::ParameterizedType_NullableInteger* p = range_start_inclusive_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_NullableInteger*>(
      &::substrait::_ParameterizedType_NullableInteger_default_instance_);
}
inline ::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::release_range_start_inclusive() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
  
  ::substrait::ParameterizedType_NullableInteger* temp = range_start_inclusive_;
  range_start_inclusive_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::mutable_range_start_inclusive() {
  
  if (range_start_inclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_NullableInteger>(GetArenaNoVirtual());
    range_start_inclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
  return range_start_inclusive_;
}
inline void ParameterizedType_IntegerParameter::set_allocated_range_start_inclusive(::substrait::ParameterizedType_NullableInteger* range_start_inclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete range_start_inclusive_;
  }
  if (range_start_inclusive) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range_start_inclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range_start_inclusive, submessage_arena);
    }
    
  } else {
    
  }
  range_start_inclusive_ = range_start_inclusive;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.IntegerParameter.range_start_inclusive)
}

// .substrait.ParameterizedType.NullableInteger range_end_exclusive = 3;
inline bool ParameterizedType_IntegerParameter::has_range_end_exclusive() const {
  return this != internal_default_instance() && range_end_exclusive_ != NULL;
}
inline void ParameterizedType_IntegerParameter::clear_range_end_exclusive() {
  if (GetArenaNoVirtual() == NULL && range_end_exclusive_ != NULL) {
    delete range_end_exclusive_;
  }
  range_end_exclusive_ = NULL;
}
inline const ::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::_internal_range_end_exclusive() const {
  return *range_end_exclusive_;
}
inline const ::substrait::ParameterizedType_NullableInteger& ParameterizedType_IntegerParameter::range_end_exclusive() const {
  const ::substrait::ParameterizedType_NullableInteger* p = range_end_exclusive_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_NullableInteger*>(
      &::substrait::_ParameterizedType_NullableInteger_default_instance_);
}
inline ::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::release_range_end_exclusive() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
  
  ::substrait::ParameterizedType_NullableInteger* temp = range_end_exclusive_;
  range_end_exclusive_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_NullableInteger* ParameterizedType_IntegerParameter::mutable_range_end_exclusive() {
  
  if (range_end_exclusive_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_NullableInteger>(GetArenaNoVirtual());
    range_end_exclusive_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
  return range_end_exclusive_;
}
inline void ParameterizedType_IntegerParameter::set_allocated_range_end_exclusive(::substrait::ParameterizedType_NullableInteger* range_end_exclusive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete range_end_exclusive_;
  }
  if (range_end_exclusive) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range_end_exclusive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range_end_exclusive, submessage_arena);
    }
    
  } else {
    
  }
  range_end_exclusive_ = range_end_exclusive;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.IntegerParameter.range_end_exclusive)
}

// -------------------------------------------------------------------

// ParameterizedType_NullableInteger

// int64 value = 1;
inline void ParameterizedType_NullableInteger::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ParameterizedType_NullableInteger::value() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.NullableInteger.value)
  return value_;
}
inline void ParameterizedType_NullableInteger::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.NullableInteger.value)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedFixedChar

// .substrait.ParameterizedType.IntegerOption length = 1;
inline bool ParameterizedType_ParameterizedFixedChar::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
inline void ParameterizedType_ParameterizedFixedChar::clear_length() {
  if (GetArenaNoVirtual() == NULL && length_ != NULL) {
    delete length_;
  }
  length_ = NULL;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedChar::_internal_length() const {
  return *length_;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedChar::length() const {
  const ::substrait::ParameterizedType_IntegerOption* p = length_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedFixedChar.length)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_IntegerOption*>(
      &::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedChar::release_length() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedFixedChar.length)
  
  ::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedChar::mutable_length() {
  
  if (length_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_IntegerOption>(GetArenaNoVirtual());
    length_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedFixedChar.length)
  return length_;
}
inline void ParameterizedType_ParameterizedFixedChar::set_allocated_length(::substrait::ParameterizedType_IntegerOption* length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete length_;
  }
  if (length) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedFixedChar.length)
}

// uint32 variation_pointer = 2;
inline void ParameterizedType_ParameterizedFixedChar::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedFixedChar::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedFixedChar.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedFixedChar::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedFixedChar.variation_pointer)
}

// .substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedFixedChar::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedFixedChar::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedFixedChar.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedFixedChar::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedFixedChar.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedVarChar

// .substrait.ParameterizedType.IntegerOption length = 1;
inline bool ParameterizedType_ParameterizedVarChar::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
inline void ParameterizedType_ParameterizedVarChar::clear_length() {
  if (GetArenaNoVirtual() == NULL && length_ != NULL) {
    delete length_;
  }
  length_ = NULL;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedVarChar::_internal_length() const {
  return *length_;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedVarChar::length() const {
  const ::substrait::ParameterizedType_IntegerOption* p = length_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedVarChar.length)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_IntegerOption*>(
      &::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedVarChar::release_length() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedVarChar.length)
  
  ::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedVarChar::mutable_length() {
  
  if (length_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_IntegerOption>(GetArenaNoVirtual());
    length_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedVarChar.length)
  return length_;
}
inline void ParameterizedType_ParameterizedVarChar::set_allocated_length(::substrait::ParameterizedType_IntegerOption* length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete length_;
  }
  if (length) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedVarChar.length)
}

// uint32 variation_pointer = 2;
inline void ParameterizedType_ParameterizedVarChar::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedVarChar::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedVarChar.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedVarChar::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedVarChar.variation_pointer)
}

// .substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedVarChar::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedVarChar::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedVarChar.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedVarChar::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedVarChar.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedFixedBinary

// .substrait.ParameterizedType.IntegerOption length = 1;
inline bool ParameterizedType_ParameterizedFixedBinary::has_length() const {
  return this != internal_default_instance() && length_ != NULL;
}
inline void ParameterizedType_ParameterizedFixedBinary::clear_length() {
  if (GetArenaNoVirtual() == NULL && length_ != NULL) {
    delete length_;
  }
  length_ = NULL;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedBinary::_internal_length() const {
  return *length_;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedFixedBinary::length() const {
  const ::substrait::ParameterizedType_IntegerOption* p = length_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedFixedBinary.length)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_IntegerOption*>(
      &::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedBinary::release_length() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedFixedBinary.length)
  
  ::substrait::ParameterizedType_IntegerOption* temp = length_;
  length_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedFixedBinary::mutable_length() {
  
  if (length_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_IntegerOption>(GetArenaNoVirtual());
    length_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedFixedBinary.length)
  return length_;
}
inline void ParameterizedType_ParameterizedFixedBinary::set_allocated_length(::substrait::ParameterizedType_IntegerOption* length) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete length_;
  }
  if (length) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      length = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, length, submessage_arena);
    }
    
  } else {
    
  }
  length_ = length;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedFixedBinary.length)
}

// uint32 variation_pointer = 2;
inline void ParameterizedType_ParameterizedFixedBinary::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedFixedBinary::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedFixedBinary.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedFixedBinary::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedFixedBinary.variation_pointer)
}

// .substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedFixedBinary::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedFixedBinary::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedFixedBinary.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedFixedBinary::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedFixedBinary.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedDecimal

// .substrait.ParameterizedType.IntegerOption scale = 1;
inline bool ParameterizedType_ParameterizedDecimal::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
inline void ParameterizedType_ParameterizedDecimal::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::_internal_scale() const {
  return *scale_;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::scale() const {
  const ::substrait::ParameterizedType_IntegerOption* p = scale_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedDecimal.scale)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_IntegerOption*>(
      &::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::release_scale() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedDecimal.scale)
  
  ::substrait::ParameterizedType_IntegerOption* temp = scale_;
  scale_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::mutable_scale() {
  
  if (scale_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_IntegerOption>(GetArenaNoVirtual());
    scale_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedDecimal.scale)
  return scale_;
}
inline void ParameterizedType_ParameterizedDecimal::set_allocated_scale(::substrait::ParameterizedType_IntegerOption* scale) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scale_;
  }
  if (scale) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scale = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedDecimal.scale)
}

// .substrait.ParameterizedType.IntegerOption precision = 2;
inline bool ParameterizedType_ParameterizedDecimal::has_precision() const {
  return this != internal_default_instance() && precision_ != NULL;
}
inline void ParameterizedType_ParameterizedDecimal::clear_precision() {
  if (GetArenaNoVirtual() == NULL && precision_ != NULL) {
    delete precision_;
  }
  precision_ = NULL;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::_internal_precision() const {
  return *precision_;
}
inline const ::substrait::ParameterizedType_IntegerOption& ParameterizedType_ParameterizedDecimal::precision() const {
  const ::substrait::ParameterizedType_IntegerOption* p = precision_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedDecimal.precision)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_IntegerOption*>(
      &::substrait::_ParameterizedType_IntegerOption_default_instance_);
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::release_precision() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedDecimal.precision)
  
  ::substrait::ParameterizedType_IntegerOption* temp = precision_;
  precision_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_IntegerOption* ParameterizedType_ParameterizedDecimal::mutable_precision() {
  
  if (precision_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_IntegerOption>(GetArenaNoVirtual());
    precision_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedDecimal.precision)
  return precision_;
}
inline void ParameterizedType_ParameterizedDecimal::set_allocated_precision(::substrait::ParameterizedType_IntegerOption* precision) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete precision_;
  }
  if (precision) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      precision = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, precision, submessage_arena);
    }
    
  } else {
    
  }
  precision_ = precision;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedDecimal.precision)
}

// uint32 variation_pointer = 3;
inline void ParameterizedType_ParameterizedDecimal::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedDecimal::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedDecimal.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedDecimal::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedDecimal.variation_pointer)
}

// .substrait.Type.Nullability nullability = 4;
inline void ParameterizedType_ParameterizedDecimal::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedDecimal::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedDecimal.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedDecimal::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedDecimal.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedStruct

// repeated .substrait.ParameterizedType types = 1;
inline int ParameterizedType_ParameterizedStruct::types_size() const {
  return types_.size();
}
inline void ParameterizedType_ParameterizedStruct::clear_types() {
  types_.Clear();
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedStruct::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedStruct.types)
  return types_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >*
ParameterizedType_ParameterizedStruct::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:substrait.ParameterizedType.ParameterizedStruct.types)
  return &types_;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedStruct::types(int index) const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedStruct.types)
  return types_.Get(index);
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedStruct::add_types() {
  // @@protoc_insertion_point(field_add:substrait.ParameterizedType.ParameterizedStruct.types)
  return types_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::substrait::ParameterizedType >&
ParameterizedType_ParameterizedStruct::types() const {
  // @@protoc_insertion_point(field_list:substrait.ParameterizedType.ParameterizedStruct.types)
  return types_;
}

// uint32 variation_pointer = 2;
inline void ParameterizedType_ParameterizedStruct::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedStruct::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedStruct.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedStruct::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedStruct.variation_pointer)
}

// .substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedStruct::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedStruct::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedStruct.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedStruct::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedStruct.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedNamedStruct

// repeated string names = 1;
inline int ParameterizedType_ParameterizedNamedStruct::names_size() const {
  return names_.size();
}
inline void ParameterizedType_ParameterizedNamedStruct::clear_names() {
  names_.Clear();
}
inline const ::std::string& ParameterizedType_ParameterizedNamedStruct::names(int index) const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return names_.Get(index);
}
inline ::std::string* ParameterizedType_ParameterizedNamedStruct::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return names_.Mutable(index);
}
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline void ParameterizedType_ParameterizedNamedStruct::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline ::std::string* ParameterizedType_ParameterizedNamedStruct::add_names() {
  // @@protoc_insertion_point(field_add_mutable:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return names_.Add();
}
inline void ParameterizedType_ParameterizedNamedStruct::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
#if LANG_CXX11
inline void ParameterizedType_ParameterizedNamedStruct::add_names(::std::string&& value) {
  names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
#endif
inline void ParameterizedType_ParameterizedNamedStruct::add_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline void ParameterizedType_ParameterizedNamedStruct::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:substrait.ParameterizedType.ParameterizedNamedStruct.names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ParameterizedType_ParameterizedNamedStruct::names() const {
  // @@protoc_insertion_point(field_list:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ParameterizedType_ParameterizedNamedStruct::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:substrait.ParameterizedType.ParameterizedNamedStruct.names)
  return &names_;
}

// .substrait.ParameterizedType.ParameterizedStruct struct = 2;
inline bool ParameterizedType_ParameterizedNamedStruct::has_struct_() const {
  return this != internal_default_instance() && struct__ != NULL;
}
inline void ParameterizedType_ParameterizedNamedStruct::clear_struct_() {
  if (GetArenaNoVirtual() == NULL && struct__ != NULL) {
    delete struct__;
  }
  struct__ = NULL;
}
inline const ::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType_ParameterizedNamedStruct::_internal_struct_() const {
  return *struct__;
}
inline const ::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType_ParameterizedNamedStruct::struct_() const {
  const ::substrait::ParameterizedType_ParameterizedStruct* p = struct__;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedNamedStruct.struct)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType_ParameterizedStruct*>(
      &::substrait::_ParameterizedType_ParameterizedStruct_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType_ParameterizedNamedStruct::release_struct_() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedNamedStruct.struct)
  
  ::substrait::ParameterizedType_ParameterizedStruct* temp = struct__;
  struct__ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType_ParameterizedNamedStruct::mutable_struct_() {
  
  if (struct__ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType_ParameterizedStruct>(GetArenaNoVirtual());
    struct__ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedNamedStruct.struct)
  return struct__;
}
inline void ParameterizedType_ParameterizedNamedStruct::set_allocated_struct_(::substrait::ParameterizedType_ParameterizedStruct* struct_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete struct__;
  }
  if (struct_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    
  } else {
    
  }
  struct__ = struct_;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedNamedStruct.struct)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedList

// .substrait.ParameterizedType type = 1;
inline bool ParameterizedType_ParameterizedList::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline void ParameterizedType_ParameterizedList::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedList::_internal_type() const {
  return *type_;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedList::type() const {
  const ::substrait::ParameterizedType* p = type_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedList.type)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType*>(
      &::substrait::_ParameterizedType_default_instance_);
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedList::release_type() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedList.type)
  
  ::substrait::ParameterizedType* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedList::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedList.type)
  return type_;
}
inline void ParameterizedType_ParameterizedList::set_allocated_type(::substrait::ParameterizedType* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete type_;
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedList.type)
}

// uint32 variation_pointer = 2;
inline void ParameterizedType_ParameterizedList::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedList::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedList.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedList::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedList.variation_pointer)
}

// .substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedList::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedList::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedList.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedList::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedList.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedMap

// .substrait.ParameterizedType key = 1;
inline bool ParameterizedType_ParameterizedMap::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void ParameterizedType_ParameterizedMap::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::_internal_key() const {
  return *key_;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::key() const {
  const ::substrait::ParameterizedType* p = key_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedMap.key)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType*>(
      &::substrait::_ParameterizedType_default_instance_);
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::release_key() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedMap.key)
  
  ::substrait::ParameterizedType* temp = key_;
  key_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::mutable_key() {
  
  if (key_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArenaNoVirtual());
    key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedMap.key)
  return key_;
}
inline void ParameterizedType_ParameterizedMap::set_allocated_key(::substrait::ParameterizedType* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete key_;
  }
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedMap.key)
}

// .substrait.ParameterizedType value = 2;
inline bool ParameterizedType_ParameterizedMap::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void ParameterizedType_ParameterizedMap::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::_internal_value() const {
  return *value_;
}
inline const ::substrait::ParameterizedType& ParameterizedType_ParameterizedMap::value() const {
  const ::substrait::ParameterizedType* p = value_;
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedMap.value)
  return p != NULL ? *p : *reinterpret_cast<const ::substrait::ParameterizedType*>(
      &::substrait::_ParameterizedType_default_instance_);
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::release_value() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.ParameterizedMap.value)
  
  ::substrait::ParameterizedType* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::substrait::ParameterizedType* ParameterizedType_ParameterizedMap::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::substrait::ParameterizedType>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.ParameterizedMap.value)
  return value_;
}
inline void ParameterizedType_ParameterizedMap::set_allocated_value(::substrait::ParameterizedType* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:substrait.ParameterizedType.ParameterizedMap.value)
}

// uint32 variation_pointer = 3;
inline void ParameterizedType_ParameterizedMap::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedMap::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedMap.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedMap::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedMap.variation_pointer)
}

// .substrait.Type.Nullability nullability = 4;
inline void ParameterizedType_ParameterizedMap::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedMap::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedMap.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedMap::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedMap.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_ParameterizedUserDefined

// uint32 type_pointer = 1;
inline void ParameterizedType_ParameterizedUserDefined::clear_type_pointer() {
  type_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedUserDefined::type_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedUserDefined.type_pointer)
  return type_pointer_;
}
inline void ParameterizedType_ParameterizedUserDefined::set_type_pointer(::google::protobuf::uint32 value) {
  
  type_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedUserDefined.type_pointer)
}

// uint32 variation_pointer = 2;
inline void ParameterizedType_ParameterizedUserDefined::clear_variation_pointer() {
  variation_pointer_ = 0u;
}
inline ::google::protobuf::uint32 ParameterizedType_ParameterizedUserDefined::variation_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedUserDefined.variation_pointer)
  return variation_pointer_;
}
inline void ParameterizedType_ParameterizedUserDefined::set_variation_pointer(::google::protobuf::uint32 value) {
  
  variation_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedUserDefined.variation_pointer)
}

// .substrait.Type.Nullability nullability = 3;
inline void ParameterizedType_ParameterizedUserDefined::clear_nullability() {
  nullability_ = 0;
}
inline ::substrait::Type_Nullability ParameterizedType_ParameterizedUserDefined::nullability() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.ParameterizedUserDefined.nullability)
  return static_cast< ::substrait::Type_Nullability >(nullability_);
}
inline void ParameterizedType_ParameterizedUserDefined::set_nullability(::substrait::Type_Nullability value) {
  
  nullability_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.ParameterizedUserDefined.nullability)
}

// -------------------------------------------------------------------

// ParameterizedType_IntegerOption

// int32 literal = 1;
inline bool ParameterizedType_IntegerOption::has_literal() const {
  return integer_type_case() == kLiteral;
}
inline void ParameterizedType_IntegerOption::set_has_literal() {
  _oneof_case_[0] = kLiteral;
}
inline void ParameterizedType_IntegerOption::clear_literal() {
  if (has_literal()) {
    integer_type_.literal_ = 0;
    clear_has_integer_type();
  }
}
inline ::google::protobuf::int32 ParameterizedType_IntegerOption::literal() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.IntegerOption.literal)
  if (has_literal()) {
    return integer_type_.literal_;
  }
  return 0;
}
inline void ParameterizedType_IntegerOption::set_literal(::google::protobuf::int32 value) {
  if (!has_literal()) {
    clear_integer_type();
    set_has_literal();
  }
  integer_type_.literal_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.IntegerOption.literal)
}

// .substrait.ParameterizedType.IntegerParameter parameter = 2;
inline bool ParameterizedType_IntegerOption::has_parameter() const {
  return integer_type_case() == kParameter;
}
inline void ParameterizedType_IntegerOption::set_has_parameter() {
  _oneof_case_[0] = kParameter;
}
inline void ParameterizedType_IntegerOption::clear_parameter() {
  if (has_parameter()) {
    delete integer_type_.parameter_;
    clear_has_integer_type();
  }
}
inline const ::substrait::ParameterizedType_IntegerParameter& ParameterizedType_IntegerOption::_internal_parameter() const {
  return *integer_type_.parameter_;
}
inline ::substrait::ParameterizedType_IntegerParameter* ParameterizedType_IntegerOption::release_parameter() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.IntegerOption.parameter)
  if (has_parameter()) {
    clear_has_integer_type();
      ::substrait::ParameterizedType_IntegerParameter* temp = integer_type_.parameter_;
    integer_type_.parameter_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_IntegerParameter& ParameterizedType_IntegerOption::parameter() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.IntegerOption.parameter)
  return has_parameter()
      ? *integer_type_.parameter_
      : *reinterpret_cast< ::substrait::ParameterizedType_IntegerParameter*>(&::substrait::_ParameterizedType_IntegerParameter_default_instance_);
}
inline ::substrait::ParameterizedType_IntegerParameter* ParameterizedType_IntegerOption::mutable_parameter() {
  if (!has_parameter()) {
    clear_integer_type();
    set_has_parameter();
    integer_type_.parameter_ = CreateMaybeMessage< ::substrait::ParameterizedType_IntegerParameter >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.IntegerOption.parameter)
  return integer_type_.parameter_;
}

inline bool ParameterizedType_IntegerOption::has_integer_type() const {
  return integer_type_case() != INTEGER_TYPE_NOT_SET;
}
inline void ParameterizedType_IntegerOption::clear_has_integer_type() {
  _oneof_case_[0] = INTEGER_TYPE_NOT_SET;
}
inline ParameterizedType_IntegerOption::IntegerTypeCase ParameterizedType_IntegerOption::integer_type_case() const {
  return ParameterizedType_IntegerOption::IntegerTypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ParameterizedType

// .substrait.Type.Boolean bool = 1;
inline bool ParameterizedType::has_bool_() const {
  return kind_case() == kBool;
}
inline void ParameterizedType::set_has_bool_() {
  _oneof_case_[0] = kBool;
}
inline const ::substrait::Type_Boolean& ParameterizedType::_internal_bool_() const {
  return *kind_.bool__;
}
inline ::substrait::Type_Boolean* ParameterizedType::release_bool_() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.bool)
  if (has_bool_()) {
    clear_has_kind();
      ::substrait::Type_Boolean* temp = kind_.bool__;
    kind_.bool__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_Boolean& ParameterizedType::bool_() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.bool)
  return has_bool_()
      ? *kind_.bool__
      : *reinterpret_cast< ::substrait::Type_Boolean*>(&::substrait::_Type_Boolean_default_instance_);
}
inline ::substrait::Type_Boolean* ParameterizedType::mutable_bool_() {
  if (!has_bool_()) {
    clear_kind();
    set_has_bool_();
    kind_.bool__ = CreateMaybeMessage< ::substrait::Type_Boolean >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.bool)
  return kind_.bool__;
}

// .substrait.Type.I8 i8 = 2;
inline bool ParameterizedType::has_i8() const {
  return kind_case() == kI8;
}
inline void ParameterizedType::set_has_i8() {
  _oneof_case_[0] = kI8;
}
inline const ::substrait::Type_I8& ParameterizedType::_internal_i8() const {
  return *kind_.i8_;
}
inline ::substrait::Type_I8* ParameterizedType::release_i8() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.i8)
  if (has_i8()) {
    clear_has_kind();
      ::substrait::Type_I8* temp = kind_.i8_;
    kind_.i8_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_I8& ParameterizedType::i8() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.i8)
  return has_i8()
      ? *kind_.i8_
      : *reinterpret_cast< ::substrait::Type_I8*>(&::substrait::_Type_I8_default_instance_);
}
inline ::substrait::Type_I8* ParameterizedType::mutable_i8() {
  if (!has_i8()) {
    clear_kind();
    set_has_i8();
    kind_.i8_ = CreateMaybeMessage< ::substrait::Type_I8 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.i8)
  return kind_.i8_;
}

// .substrait.Type.I16 i16 = 3;
inline bool ParameterizedType::has_i16() const {
  return kind_case() == kI16;
}
inline void ParameterizedType::set_has_i16() {
  _oneof_case_[0] = kI16;
}
inline const ::substrait::Type_I16& ParameterizedType::_internal_i16() const {
  return *kind_.i16_;
}
inline ::substrait::Type_I16* ParameterizedType::release_i16() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.i16)
  if (has_i16()) {
    clear_has_kind();
      ::substrait::Type_I16* temp = kind_.i16_;
    kind_.i16_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_I16& ParameterizedType::i16() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.i16)
  return has_i16()
      ? *kind_.i16_
      : *reinterpret_cast< ::substrait::Type_I16*>(&::substrait::_Type_I16_default_instance_);
}
inline ::substrait::Type_I16* ParameterizedType::mutable_i16() {
  if (!has_i16()) {
    clear_kind();
    set_has_i16();
    kind_.i16_ = CreateMaybeMessage< ::substrait::Type_I16 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.i16)
  return kind_.i16_;
}

// .substrait.Type.I32 i32 = 5;
inline bool ParameterizedType::has_i32() const {
  return kind_case() == kI32;
}
inline void ParameterizedType::set_has_i32() {
  _oneof_case_[0] = kI32;
}
inline const ::substrait::Type_I32& ParameterizedType::_internal_i32() const {
  return *kind_.i32_;
}
inline ::substrait::Type_I32* ParameterizedType::release_i32() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.i32)
  if (has_i32()) {
    clear_has_kind();
      ::substrait::Type_I32* temp = kind_.i32_;
    kind_.i32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_I32& ParameterizedType::i32() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.i32)
  return has_i32()
      ? *kind_.i32_
      : *reinterpret_cast< ::substrait::Type_I32*>(&::substrait::_Type_I32_default_instance_);
}
inline ::substrait::Type_I32* ParameterizedType::mutable_i32() {
  if (!has_i32()) {
    clear_kind();
    set_has_i32();
    kind_.i32_ = CreateMaybeMessage< ::substrait::Type_I32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.i32)
  return kind_.i32_;
}

// .substrait.Type.I64 i64 = 7;
inline bool ParameterizedType::has_i64() const {
  return kind_case() == kI64;
}
inline void ParameterizedType::set_has_i64() {
  _oneof_case_[0] = kI64;
}
inline const ::substrait::Type_I64& ParameterizedType::_internal_i64() const {
  return *kind_.i64_;
}
inline ::substrait::Type_I64* ParameterizedType::release_i64() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.i64)
  if (has_i64()) {
    clear_has_kind();
      ::substrait::Type_I64* temp = kind_.i64_;
    kind_.i64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_I64& ParameterizedType::i64() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.i64)
  return has_i64()
      ? *kind_.i64_
      : *reinterpret_cast< ::substrait::Type_I64*>(&::substrait::_Type_I64_default_instance_);
}
inline ::substrait::Type_I64* ParameterizedType::mutable_i64() {
  if (!has_i64()) {
    clear_kind();
    set_has_i64();
    kind_.i64_ = CreateMaybeMessage< ::substrait::Type_I64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.i64)
  return kind_.i64_;
}

// .substrait.Type.FP32 fp32 = 10;
inline bool ParameterizedType::has_fp32() const {
  return kind_case() == kFp32;
}
inline void ParameterizedType::set_has_fp32() {
  _oneof_case_[0] = kFp32;
}
inline const ::substrait::Type_FP32& ParameterizedType::_internal_fp32() const {
  return *kind_.fp32_;
}
inline ::substrait::Type_FP32* ParameterizedType::release_fp32() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.fp32)
  if (has_fp32()) {
    clear_has_kind();
      ::substrait::Type_FP32* temp = kind_.fp32_;
    kind_.fp32_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_FP32& ParameterizedType::fp32() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.fp32)
  return has_fp32()
      ? *kind_.fp32_
      : *reinterpret_cast< ::substrait::Type_FP32*>(&::substrait::_Type_FP32_default_instance_);
}
inline ::substrait::Type_FP32* ParameterizedType::mutable_fp32() {
  if (!has_fp32()) {
    clear_kind();
    set_has_fp32();
    kind_.fp32_ = CreateMaybeMessage< ::substrait::Type_FP32 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.fp32)
  return kind_.fp32_;
}

// .substrait.Type.FP64 fp64 = 11;
inline bool ParameterizedType::has_fp64() const {
  return kind_case() == kFp64;
}
inline void ParameterizedType::set_has_fp64() {
  _oneof_case_[0] = kFp64;
}
inline const ::substrait::Type_FP64& ParameterizedType::_internal_fp64() const {
  return *kind_.fp64_;
}
inline ::substrait::Type_FP64* ParameterizedType::release_fp64() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.fp64)
  if (has_fp64()) {
    clear_has_kind();
      ::substrait::Type_FP64* temp = kind_.fp64_;
    kind_.fp64_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_FP64& ParameterizedType::fp64() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.fp64)
  return has_fp64()
      ? *kind_.fp64_
      : *reinterpret_cast< ::substrait::Type_FP64*>(&::substrait::_Type_FP64_default_instance_);
}
inline ::substrait::Type_FP64* ParameterizedType::mutable_fp64() {
  if (!has_fp64()) {
    clear_kind();
    set_has_fp64();
    kind_.fp64_ = CreateMaybeMessage< ::substrait::Type_FP64 >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.fp64)
  return kind_.fp64_;
}

// .substrait.Type.String string = 12;
inline bool ParameterizedType::has_string() const {
  return kind_case() == kString;
}
inline void ParameterizedType::set_has_string() {
  _oneof_case_[0] = kString;
}
inline const ::substrait::Type_String& ParameterizedType::_internal_string() const {
  return *kind_.string_;
}
inline ::substrait::Type_String* ParameterizedType::release_string() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.string)
  if (has_string()) {
    clear_has_kind();
      ::substrait::Type_String* temp = kind_.string_;
    kind_.string_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_String& ParameterizedType::string() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.string)
  return has_string()
      ? *kind_.string_
      : *reinterpret_cast< ::substrait::Type_String*>(&::substrait::_Type_String_default_instance_);
}
inline ::substrait::Type_String* ParameterizedType::mutable_string() {
  if (!has_string()) {
    clear_kind();
    set_has_string();
    kind_.string_ = CreateMaybeMessage< ::substrait::Type_String >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.string)
  return kind_.string_;
}

// .substrait.Type.Binary binary = 13;
inline bool ParameterizedType::has_binary() const {
  return kind_case() == kBinary;
}
inline void ParameterizedType::set_has_binary() {
  _oneof_case_[0] = kBinary;
}
inline const ::substrait::Type_Binary& ParameterizedType::_internal_binary() const {
  return *kind_.binary_;
}
inline ::substrait::Type_Binary* ParameterizedType::release_binary() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.binary)
  if (has_binary()) {
    clear_has_kind();
      ::substrait::Type_Binary* temp = kind_.binary_;
    kind_.binary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_Binary& ParameterizedType::binary() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.binary)
  return has_binary()
      ? *kind_.binary_
      : *reinterpret_cast< ::substrait::Type_Binary*>(&::substrait::_Type_Binary_default_instance_);
}
inline ::substrait::Type_Binary* ParameterizedType::mutable_binary() {
  if (!has_binary()) {
    clear_kind();
    set_has_binary();
    kind_.binary_ = CreateMaybeMessage< ::substrait::Type_Binary >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.binary)
  return kind_.binary_;
}

// .substrait.Type.Timestamp timestamp = 14;
inline bool ParameterizedType::has_timestamp() const {
  return kind_case() == kTimestamp;
}
inline void ParameterizedType::set_has_timestamp() {
  _oneof_case_[0] = kTimestamp;
}
inline const ::substrait::Type_Timestamp& ParameterizedType::_internal_timestamp() const {
  return *kind_.timestamp_;
}
inline ::substrait::Type_Timestamp* ParameterizedType::release_timestamp() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.timestamp)
  if (has_timestamp()) {
    clear_has_kind();
      ::substrait::Type_Timestamp* temp = kind_.timestamp_;
    kind_.timestamp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_Timestamp& ParameterizedType::timestamp() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.timestamp)
  return has_timestamp()
      ? *kind_.timestamp_
      : *reinterpret_cast< ::substrait::Type_Timestamp*>(&::substrait::_Type_Timestamp_default_instance_);
}
inline ::substrait::Type_Timestamp* ParameterizedType::mutable_timestamp() {
  if (!has_timestamp()) {
    clear_kind();
    set_has_timestamp();
    kind_.timestamp_ = CreateMaybeMessage< ::substrait::Type_Timestamp >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.timestamp)
  return kind_.timestamp_;
}

// .substrait.Type.Date date = 16;
inline bool ParameterizedType::has_date() const {
  return kind_case() == kDate;
}
inline void ParameterizedType::set_has_date() {
  _oneof_case_[0] = kDate;
}
inline const ::substrait::Type_Date& ParameterizedType::_internal_date() const {
  return *kind_.date_;
}
inline ::substrait::Type_Date* ParameterizedType::release_date() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.date)
  if (has_date()) {
    clear_has_kind();
      ::substrait::Type_Date* temp = kind_.date_;
    kind_.date_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_Date& ParameterizedType::date() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.date)
  return has_date()
      ? *kind_.date_
      : *reinterpret_cast< ::substrait::Type_Date*>(&::substrait::_Type_Date_default_instance_);
}
inline ::substrait::Type_Date* ParameterizedType::mutable_date() {
  if (!has_date()) {
    clear_kind();
    set_has_date();
    kind_.date_ = CreateMaybeMessage< ::substrait::Type_Date >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.date)
  return kind_.date_;
}

// .substrait.Type.Time time = 17;
inline bool ParameterizedType::has_time() const {
  return kind_case() == kTime;
}
inline void ParameterizedType::set_has_time() {
  _oneof_case_[0] = kTime;
}
inline const ::substrait::Type_Time& ParameterizedType::_internal_time() const {
  return *kind_.time_;
}
inline ::substrait::Type_Time* ParameterizedType::release_time() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.time)
  if (has_time()) {
    clear_has_kind();
      ::substrait::Type_Time* temp = kind_.time_;
    kind_.time_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_Time& ParameterizedType::time() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.time)
  return has_time()
      ? *kind_.time_
      : *reinterpret_cast< ::substrait::Type_Time*>(&::substrait::_Type_Time_default_instance_);
}
inline ::substrait::Type_Time* ParameterizedType::mutable_time() {
  if (!has_time()) {
    clear_kind();
    set_has_time();
    kind_.time_ = CreateMaybeMessage< ::substrait::Type_Time >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.time)
  return kind_.time_;
}

// .substrait.Type.IntervalYear interval_year = 19;
inline bool ParameterizedType::has_interval_year() const {
  return kind_case() == kIntervalYear;
}
inline void ParameterizedType::set_has_interval_year() {
  _oneof_case_[0] = kIntervalYear;
}
inline const ::substrait::Type_IntervalYear& ParameterizedType::_internal_interval_year() const {
  return *kind_.interval_year_;
}
inline ::substrait::Type_IntervalYear* ParameterizedType::release_interval_year() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.interval_year)
  if (has_interval_year()) {
    clear_has_kind();
      ::substrait::Type_IntervalYear* temp = kind_.interval_year_;
    kind_.interval_year_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_IntervalYear& ParameterizedType::interval_year() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.interval_year)
  return has_interval_year()
      ? *kind_.interval_year_
      : *reinterpret_cast< ::substrait::Type_IntervalYear*>(&::substrait::_Type_IntervalYear_default_instance_);
}
inline ::substrait::Type_IntervalYear* ParameterizedType::mutable_interval_year() {
  if (!has_interval_year()) {
    clear_kind();
    set_has_interval_year();
    kind_.interval_year_ = CreateMaybeMessage< ::substrait::Type_IntervalYear >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.interval_year)
  return kind_.interval_year_;
}

// .substrait.Type.IntervalDay interval_day = 20;
inline bool ParameterizedType::has_interval_day() const {
  return kind_case() == kIntervalDay;
}
inline void ParameterizedType::set_has_interval_day() {
  _oneof_case_[0] = kIntervalDay;
}
inline const ::substrait::Type_IntervalDay& ParameterizedType::_internal_interval_day() const {
  return *kind_.interval_day_;
}
inline ::substrait::Type_IntervalDay* ParameterizedType::release_interval_day() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.interval_day)
  if (has_interval_day()) {
    clear_has_kind();
      ::substrait::Type_IntervalDay* temp = kind_.interval_day_;
    kind_.interval_day_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_IntervalDay& ParameterizedType::interval_day() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.interval_day)
  return has_interval_day()
      ? *kind_.interval_day_
      : *reinterpret_cast< ::substrait::Type_IntervalDay*>(&::substrait::_Type_IntervalDay_default_instance_);
}
inline ::substrait::Type_IntervalDay* ParameterizedType::mutable_interval_day() {
  if (!has_interval_day()) {
    clear_kind();
    set_has_interval_day();
    kind_.interval_day_ = CreateMaybeMessage< ::substrait::Type_IntervalDay >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.interval_day)
  return kind_.interval_day_;
}

// .substrait.Type.TimestampTZ timestamp_tz = 29;
inline bool ParameterizedType::has_timestamp_tz() const {
  return kind_case() == kTimestampTz;
}
inline void ParameterizedType::set_has_timestamp_tz() {
  _oneof_case_[0] = kTimestampTz;
}
inline const ::substrait::Type_TimestampTZ& ParameterizedType::_internal_timestamp_tz() const {
  return *kind_.timestamp_tz_;
}
inline ::substrait::Type_TimestampTZ* ParameterizedType::release_timestamp_tz() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.timestamp_tz)
  if (has_timestamp_tz()) {
    clear_has_kind();
      ::substrait::Type_TimestampTZ* temp = kind_.timestamp_tz_;
    kind_.timestamp_tz_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_TimestampTZ& ParameterizedType::timestamp_tz() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.timestamp_tz)
  return has_timestamp_tz()
      ? *kind_.timestamp_tz_
      : *reinterpret_cast< ::substrait::Type_TimestampTZ*>(&::substrait::_Type_TimestampTZ_default_instance_);
}
inline ::substrait::Type_TimestampTZ* ParameterizedType::mutable_timestamp_tz() {
  if (!has_timestamp_tz()) {
    clear_kind();
    set_has_timestamp_tz();
    kind_.timestamp_tz_ = CreateMaybeMessage< ::substrait::Type_TimestampTZ >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.timestamp_tz)
  return kind_.timestamp_tz_;
}

// .substrait.Type.UUID uuid = 32;
inline bool ParameterizedType::has_uuid() const {
  return kind_case() == kUuid;
}
inline void ParameterizedType::set_has_uuid() {
  _oneof_case_[0] = kUuid;
}
inline const ::substrait::Type_UUID& ParameterizedType::_internal_uuid() const {
  return *kind_.uuid_;
}
inline ::substrait::Type_UUID* ParameterizedType::release_uuid() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.uuid)
  if (has_uuid()) {
    clear_has_kind();
      ::substrait::Type_UUID* temp = kind_.uuid_;
    kind_.uuid_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::Type_UUID& ParameterizedType::uuid() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.uuid)
  return has_uuid()
      ? *kind_.uuid_
      : *reinterpret_cast< ::substrait::Type_UUID*>(&::substrait::_Type_UUID_default_instance_);
}
inline ::substrait::Type_UUID* ParameterizedType::mutable_uuid() {
  if (!has_uuid()) {
    clear_kind();
    set_has_uuid();
    kind_.uuid_ = CreateMaybeMessage< ::substrait::Type_UUID >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.uuid)
  return kind_.uuid_;
}

// .substrait.ParameterizedType.ParameterizedFixedChar fixed_char = 21;
inline bool ParameterizedType::has_fixed_char() const {
  return kind_case() == kFixedChar;
}
inline void ParameterizedType::set_has_fixed_char() {
  _oneof_case_[0] = kFixedChar;
}
inline void ParameterizedType::clear_fixed_char() {
  if (has_fixed_char()) {
    delete kind_.fixed_char_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedFixedChar& ParameterizedType::_internal_fixed_char() const {
  return *kind_.fixed_char_;
}
inline ::substrait::ParameterizedType_ParameterizedFixedChar* ParameterizedType::release_fixed_char() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.fixed_char)
  if (has_fixed_char()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedFixedChar* temp = kind_.fixed_char_;
    kind_.fixed_char_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedFixedChar& ParameterizedType::fixed_char() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.fixed_char)
  return has_fixed_char()
      ? *kind_.fixed_char_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedFixedChar*>(&::substrait::_ParameterizedType_ParameterizedFixedChar_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedFixedChar* ParameterizedType::mutable_fixed_char() {
  if (!has_fixed_char()) {
    clear_kind();
    set_has_fixed_char();
    kind_.fixed_char_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedFixedChar >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.fixed_char)
  return kind_.fixed_char_;
}

// .substrait.ParameterizedType.ParameterizedVarChar varchar = 22;
inline bool ParameterizedType::has_varchar() const {
  return kind_case() == kVarchar;
}
inline void ParameterizedType::set_has_varchar() {
  _oneof_case_[0] = kVarchar;
}
inline void ParameterizedType::clear_varchar() {
  if (has_varchar()) {
    delete kind_.varchar_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedVarChar& ParameterizedType::_internal_varchar() const {
  return *kind_.varchar_;
}
inline ::substrait::ParameterizedType_ParameterizedVarChar* ParameterizedType::release_varchar() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.varchar)
  if (has_varchar()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedVarChar* temp = kind_.varchar_;
    kind_.varchar_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedVarChar& ParameterizedType::varchar() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.varchar)
  return has_varchar()
      ? *kind_.varchar_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedVarChar*>(&::substrait::_ParameterizedType_ParameterizedVarChar_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedVarChar* ParameterizedType::mutable_varchar() {
  if (!has_varchar()) {
    clear_kind();
    set_has_varchar();
    kind_.varchar_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedVarChar >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.varchar)
  return kind_.varchar_;
}

// .substrait.ParameterizedType.ParameterizedFixedBinary fixed_binary = 23;
inline bool ParameterizedType::has_fixed_binary() const {
  return kind_case() == kFixedBinary;
}
inline void ParameterizedType::set_has_fixed_binary() {
  _oneof_case_[0] = kFixedBinary;
}
inline void ParameterizedType::clear_fixed_binary() {
  if (has_fixed_binary()) {
    delete kind_.fixed_binary_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedFixedBinary& ParameterizedType::_internal_fixed_binary() const {
  return *kind_.fixed_binary_;
}
inline ::substrait::ParameterizedType_ParameterizedFixedBinary* ParameterizedType::release_fixed_binary() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.fixed_binary)
  if (has_fixed_binary()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedFixedBinary* temp = kind_.fixed_binary_;
    kind_.fixed_binary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedFixedBinary& ParameterizedType::fixed_binary() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.fixed_binary)
  return has_fixed_binary()
      ? *kind_.fixed_binary_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedFixedBinary*>(&::substrait::_ParameterizedType_ParameterizedFixedBinary_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedFixedBinary* ParameterizedType::mutable_fixed_binary() {
  if (!has_fixed_binary()) {
    clear_kind();
    set_has_fixed_binary();
    kind_.fixed_binary_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedFixedBinary >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.fixed_binary)
  return kind_.fixed_binary_;
}

// .substrait.ParameterizedType.ParameterizedDecimal decimal = 24;
inline bool ParameterizedType::has_decimal() const {
  return kind_case() == kDecimal;
}
inline void ParameterizedType::set_has_decimal() {
  _oneof_case_[0] = kDecimal;
}
inline void ParameterizedType::clear_decimal() {
  if (has_decimal()) {
    delete kind_.decimal_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedDecimal& ParameterizedType::_internal_decimal() const {
  return *kind_.decimal_;
}
inline ::substrait::ParameterizedType_ParameterizedDecimal* ParameterizedType::release_decimal() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.decimal)
  if (has_decimal()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedDecimal* temp = kind_.decimal_;
    kind_.decimal_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedDecimal& ParameterizedType::decimal() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.decimal)
  return has_decimal()
      ? *kind_.decimal_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedDecimal*>(&::substrait::_ParameterizedType_ParameterizedDecimal_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedDecimal* ParameterizedType::mutable_decimal() {
  if (!has_decimal()) {
    clear_kind();
    set_has_decimal();
    kind_.decimal_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedDecimal >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.decimal)
  return kind_.decimal_;
}

// .substrait.ParameterizedType.ParameterizedStruct struct = 25;
inline bool ParameterizedType::has_struct_() const {
  return kind_case() == kStruct;
}
inline void ParameterizedType::set_has_struct_() {
  _oneof_case_[0] = kStruct;
}
inline void ParameterizedType::clear_struct_() {
  if (has_struct_()) {
    delete kind_.struct__;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType::_internal_struct_() const {
  return *kind_.struct__;
}
inline ::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType::release_struct_() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.struct)
  if (has_struct_()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedStruct* temp = kind_.struct__;
    kind_.struct__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedStruct& ParameterizedType::struct_() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.struct)
  return has_struct_()
      ? *kind_.struct__
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedStruct*>(&::substrait::_ParameterizedType_ParameterizedStruct_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedStruct* ParameterizedType::mutable_struct_() {
  if (!has_struct_()) {
    clear_kind();
    set_has_struct_();
    kind_.struct__ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedStruct >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.struct)
  return kind_.struct__;
}

// .substrait.ParameterizedType.ParameterizedList list = 27;
inline bool ParameterizedType::has_list() const {
  return kind_case() == kList;
}
inline void ParameterizedType::set_has_list() {
  _oneof_case_[0] = kList;
}
inline void ParameterizedType::clear_list() {
  if (has_list()) {
    delete kind_.list_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedList& ParameterizedType::_internal_list() const {
  return *kind_.list_;
}
inline ::substrait::ParameterizedType_ParameterizedList* ParameterizedType::release_list() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.list)
  if (has_list()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedList* temp = kind_.list_;
    kind_.list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedList& ParameterizedType::list() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.list)
  return has_list()
      ? *kind_.list_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedList*>(&::substrait::_ParameterizedType_ParameterizedList_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedList* ParameterizedType::mutable_list() {
  if (!has_list()) {
    clear_kind();
    set_has_list();
    kind_.list_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedList >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.list)
  return kind_.list_;
}

// .substrait.ParameterizedType.ParameterizedMap map = 28;
inline bool ParameterizedType::has_map() const {
  return kind_case() == kMap;
}
inline void ParameterizedType::set_has_map() {
  _oneof_case_[0] = kMap;
}
inline void ParameterizedType::clear_map() {
  if (has_map()) {
    delete kind_.map_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedMap& ParameterizedType::_internal_map() const {
  return *kind_.map_;
}
inline ::substrait::ParameterizedType_ParameterizedMap* ParameterizedType::release_map() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.map)
  if (has_map()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedMap* temp = kind_.map_;
    kind_.map_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedMap& ParameterizedType::map() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.map)
  return has_map()
      ? *kind_.map_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedMap*>(&::substrait::_ParameterizedType_ParameterizedMap_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedMap* ParameterizedType::mutable_map() {
  if (!has_map()) {
    clear_kind();
    set_has_map();
    kind_.map_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedMap >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.map)
  return kind_.map_;
}

// .substrait.ParameterizedType.ParameterizedUserDefined user_defined = 30;
inline bool ParameterizedType::has_user_defined() const {
  return kind_case() == kUserDefined;
}
inline void ParameterizedType::set_has_user_defined() {
  _oneof_case_[0] = kUserDefined;
}
inline void ParameterizedType::clear_user_defined() {
  if (has_user_defined()) {
    delete kind_.user_defined_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_ParameterizedUserDefined& ParameterizedType::_internal_user_defined() const {
  return *kind_.user_defined_;
}
inline ::substrait::ParameterizedType_ParameterizedUserDefined* ParameterizedType::release_user_defined() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.user_defined)
  if (has_user_defined()) {
    clear_has_kind();
      ::substrait::ParameterizedType_ParameterizedUserDefined* temp = kind_.user_defined_;
    kind_.user_defined_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_ParameterizedUserDefined& ParameterizedType::user_defined() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.user_defined)
  return has_user_defined()
      ? *kind_.user_defined_
      : *reinterpret_cast< ::substrait::ParameterizedType_ParameterizedUserDefined*>(&::substrait::_ParameterizedType_ParameterizedUserDefined_default_instance_);
}
inline ::substrait::ParameterizedType_ParameterizedUserDefined* ParameterizedType::mutable_user_defined() {
  if (!has_user_defined()) {
    clear_kind();
    set_has_user_defined();
    kind_.user_defined_ = CreateMaybeMessage< ::substrait::ParameterizedType_ParameterizedUserDefined >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.user_defined)
  return kind_.user_defined_;
}

// uint32 user_defined_pointer = 31 [deprecated = true];
inline bool ParameterizedType::has_user_defined_pointer() const {
  return kind_case() == kUserDefinedPointer;
}
inline void ParameterizedType::set_has_user_defined_pointer() {
  _oneof_case_[0] = kUserDefinedPointer;
}
inline void ParameterizedType::clear_user_defined_pointer() {
  if (has_user_defined_pointer()) {
    kind_.user_defined_pointer_ = 0u;
    clear_has_kind();
  }
}
inline ::google::protobuf::uint32 ParameterizedType::user_defined_pointer() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.user_defined_pointer)
  if (has_user_defined_pointer()) {
    return kind_.user_defined_pointer_;
  }
  return 0u;
}
inline void ParameterizedType::set_user_defined_pointer(::google::protobuf::uint32 value) {
  if (!has_user_defined_pointer()) {
    clear_kind();
    set_has_user_defined_pointer();
  }
  kind_.user_defined_pointer_ = value;
  // @@protoc_insertion_point(field_set:substrait.ParameterizedType.user_defined_pointer)
}

// .substrait.ParameterizedType.TypeParameter type_parameter = 33;
inline bool ParameterizedType::has_type_parameter() const {
  return kind_case() == kTypeParameter;
}
inline void ParameterizedType::set_has_type_parameter() {
  _oneof_case_[0] = kTypeParameter;
}
inline void ParameterizedType::clear_type_parameter() {
  if (has_type_parameter()) {
    delete kind_.type_parameter_;
    clear_has_kind();
  }
}
inline const ::substrait::ParameterizedType_TypeParameter& ParameterizedType::_internal_type_parameter() const {
  return *kind_.type_parameter_;
}
inline ::substrait::ParameterizedType_TypeParameter* ParameterizedType::release_type_parameter() {
  // @@protoc_insertion_point(field_release:substrait.ParameterizedType.type_parameter)
  if (has_type_parameter()) {
    clear_has_kind();
      ::substrait::ParameterizedType_TypeParameter* temp = kind_.type_parameter_;
    kind_.type_parameter_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::substrait::ParameterizedType_TypeParameter& ParameterizedType::type_parameter() const {
  // @@protoc_insertion_point(field_get:substrait.ParameterizedType.type_parameter)
  return has_type_parameter()
      ? *kind_.type_parameter_
      : *reinterpret_cast< ::substrait::ParameterizedType_TypeParameter*>(&::substrait::_ParameterizedType_TypeParameter_default_instance_);
}
inline ::substrait::ParameterizedType_TypeParameter* ParameterizedType::mutable_type_parameter() {
  if (!has_type_parameter()) {
    clear_kind();
    set_has_type_parameter();
    kind_.type_parameter_ = CreateMaybeMessage< ::substrait::ParameterizedType_TypeParameter >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:substrait.ParameterizedType.type_parameter)
  return kind_.type_parameter_;
}

inline bool ParameterizedType::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void ParameterizedType::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline ParameterizedType::KindCase ParameterizedType::kind_case() const {
  return ParameterizedType::KindCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace substrait

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_substrait_2fparameterized_5ftypes_2eproto
