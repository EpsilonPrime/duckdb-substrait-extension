// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/algebra.proto

#include "substrait/algebra.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_substrait_2falgebra_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExchangeRel_Broadcast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ExchangeRel_RoundRobin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_EmbeddedFunction_PythonPickleFunction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_EmbeddedFunction_WebAssemblyFunction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Enum_Empty;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_FieldReference_OuterReference;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_FieldReference_RootReference;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_Decimal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_IntervalDayToSecond;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_IntervalYearToMonth;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_VarChar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_MapSelect_MapKey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_MapSelect_MapKeyExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_CurrentRow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_Following;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_Preceding;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_Unbounded;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FunctionOption;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RelCommon_Direct;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RelCommon_Emit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<18> scc_info_AggregateFunction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_ExchangeTarget;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_MultiBucketExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_ScatterFields;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_SingleBucketExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Expression_Enum;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Expression_MaskExpression;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Expression_ReferenceSegment;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExtensionObject;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NamedObjectWrite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReadRel_ExtensionTable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReadRel_NamedTable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReadRel_VirtualTable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RelCommon_Hint_RuntimeConstraint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RelCommon_Hint_Stats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Expression_Literal_UserDefined;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Expression_MaskExpression_ListSelect_ListSelectItem;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ExtensionLeafRel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ReadRel_LocalFiles;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Expression_MaskExpression_ListSelect;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_RelCommon_Hint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Expression_WindowFunction_Bound;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_RelCommon;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ReadRel_LocalFiles_FileOrFiles;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2falgebra_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Expression_Literal;
}  // namespace protobuf_substrait_2falgebra_2eproto
namespace protobuf_substrait_2fextensions_2fextensions_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2fextensions_2fextensions_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AdvancedExtension;
}  // namespace protobuf_substrait_2fextensions_2fextensions_2eproto
namespace protobuf_substrait_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_NamedStruct;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<21> scc_info_Type;
}  // namespace protobuf_substrait_2ftype_2eproto
namespace substrait {
class RelCommon_DirectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelCommon_Direct>
      _instance;
} _RelCommon_Direct_default_instance_;
class RelCommon_EmitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelCommon_Emit>
      _instance;
} _RelCommon_Emit_default_instance_;
class RelCommon_Hint_StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelCommon_Hint_Stats>
      _instance;
} _RelCommon_Hint_Stats_default_instance_;
class RelCommon_Hint_RuntimeConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelCommon_Hint_RuntimeConstraint>
      _instance;
} _RelCommon_Hint_RuntimeConstraint_default_instance_;
class RelCommon_HintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelCommon_Hint>
      _instance;
} _RelCommon_Hint_default_instance_;
class RelCommonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelCommon>
      _instance;
  const ::substrait::RelCommon_Direct* direct_;
  const ::substrait::RelCommon_Emit* emit_;
} _RelCommon_default_instance_;
class ReadRel_NamedTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_NamedTable>
      _instance;
} _ReadRel_NamedTable_default_instance_;
class ReadRel_VirtualTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_VirtualTable>
      _instance;
} _ReadRel_VirtualTable_default_instance_;
class ReadRel_ExtensionTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_ExtensionTable>
      _instance;
} _ReadRel_ExtensionTable_default_instance_;
class ReadRel_LocalFiles_FileOrFiles_ParquetReadOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions>
      _instance;
} _ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_default_instance_;
class ReadRel_LocalFiles_FileOrFiles_ArrowReadOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions>
      _instance;
} _ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_default_instance_;
class ReadRel_LocalFiles_FileOrFiles_OrcReadOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_LocalFiles_FileOrFiles_OrcReadOptions>
      _instance;
} _ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_default_instance_;
class ReadRel_LocalFiles_FileOrFiles_DwrfReadOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions>
      _instance;
} _ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_default_instance_;
class ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_LocalFiles_FileOrFiles>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr uri_path_;
  ::google::protobuf::internal::ArenaStringPtr uri_path_glob_;
  ::google::protobuf::internal::ArenaStringPtr uri_file_;
  ::google::protobuf::internal::ArenaStringPtr uri_folder_;
  const ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions* parquet_;
  const ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions* arrow_;
  const ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions* orc_;
  const ::google::protobuf::Any* extension_;
  const ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions* dwrf_;
} _ReadRel_LocalFiles_FileOrFiles_default_instance_;
class ReadRel_LocalFilesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel_LocalFiles>
      _instance;
} _ReadRel_LocalFiles_default_instance_;
class ReadRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadRel>
      _instance;
  const ::substrait::ReadRel_VirtualTable* virtual_table_;
  const ::substrait::ReadRel_LocalFiles* local_files_;
  const ::substrait::ReadRel_NamedTable* named_table_;
  const ::substrait::ReadRel_ExtensionTable* extension_table_;
} _ReadRel_default_instance_;
class ProjectRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjectRel>
      _instance;
} _ProjectRel_default_instance_;
class JoinRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinRel>
      _instance;
} _JoinRel_default_instance_;
class CrossRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CrossRel>
      _instance;
} _CrossRel_default_instance_;
class FetchRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FetchRel>
      _instance;
} _FetchRel_default_instance_;
class AggregateRel_GroupingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggregateRel_Grouping>
      _instance;
} _AggregateRel_Grouping_default_instance_;
class AggregateRel_MeasureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggregateRel_Measure>
      _instance;
} _AggregateRel_Measure_default_instance_;
class AggregateRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggregateRel>
      _instance;
} _AggregateRel_default_instance_;
class SortRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SortRel>
      _instance;
} _SortRel_default_instance_;
class FilterRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FilterRel>
      _instance;
} _FilterRel_default_instance_;
class SetRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetRel>
      _instance;
} _SetRel_default_instance_;
class ExtensionSingleRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtensionSingleRel>
      _instance;
} _ExtensionSingleRel_default_instance_;
class ExtensionLeafRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtensionLeafRel>
      _instance;
} _ExtensionLeafRel_default_instance_;
class ExtensionMultiRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtensionMultiRel>
      _instance;
} _ExtensionMultiRel_default_instance_;
class ExchangeRel_ScatterFieldsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel_ScatterFields>
      _instance;
} _ExchangeRel_ScatterFields_default_instance_;
class ExchangeRel_SingleBucketExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel_SingleBucketExpression>
      _instance;
} _ExchangeRel_SingleBucketExpression_default_instance_;
class ExchangeRel_MultiBucketExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel_MultiBucketExpression>
      _instance;
} _ExchangeRel_MultiBucketExpression_default_instance_;
class ExchangeRel_BroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel_Broadcast>
      _instance;
} _ExchangeRel_Broadcast_default_instance_;
class ExchangeRel_RoundRobinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel_RoundRobin>
      _instance;
} _ExchangeRel_RoundRobin_default_instance_;
class ExchangeRel_ExchangeTargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel_ExchangeTarget>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  const ::google::protobuf::Any* extended_;
} _ExchangeRel_ExchangeTarget_default_instance_;
class ExchangeRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExchangeRel>
      _instance;
  const ::substrait::ExchangeRel_ScatterFields* scatter_by_fields_;
  const ::substrait::ExchangeRel_SingleBucketExpression* single_target_;
  const ::substrait::ExchangeRel_MultiBucketExpression* multi_target_;
  const ::substrait::ExchangeRel_RoundRobin* round_robin_;
  const ::substrait::ExchangeRel_Broadcast* broadcast_;
} _ExchangeRel_default_instance_;
class RelRootDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RelRoot>
      _instance;
} _RelRoot_default_instance_;
class RelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rel>
      _instance;
  const ::substrait::ReadRel* read_;
  const ::substrait::FilterRel* filter_;
  const ::substrait::FetchRel* fetch_;
  const ::substrait::AggregateRel* aggregate_;
  const ::substrait::SortRel* sort_;
  const ::substrait::JoinRel* join_;
  const ::substrait::ProjectRel* project_;
  const ::substrait::SetRel* set_;
  const ::substrait::ExtensionSingleRel* extension_single_;
  const ::substrait::ExtensionMultiRel* extension_multi_;
  const ::substrait::ExtensionLeafRel* extension_leaf_;
  const ::substrait::CrossRel* cross_;
  const ::substrait::HashJoinRel* hash_join_;
  const ::substrait::MergeJoinRel* merge_join_;
} _Rel_default_instance_;
class NamedObjectWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NamedObjectWrite>
      _instance;
} _NamedObjectWrite_default_instance_;
class ExtensionObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExtensionObject>
      _instance;
} _ExtensionObject_default_instance_;
class DdlRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DdlRel>
      _instance;
  const ::substrait::NamedObjectWrite* named_object_;
  const ::substrait::ExtensionObject* extension_object_;
} _DdlRel_default_instance_;
class WriteRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteRel>
      _instance;
  const ::substrait::NamedObjectWrite* named_table_;
  const ::substrait::ExtensionObject* extension_table_;
} _WriteRel_default_instance_;
class HashJoinRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HashJoinRel>
      _instance;
} _HashJoinRel_default_instance_;
class MergeJoinRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MergeJoinRel>
      _instance;
} _MergeJoinRel_default_instance_;
class FunctionArgumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionArgument>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr enum__;
  const ::substrait::Type* type_;
  const ::substrait::Expression* value_;
} _FunctionArgument_default_instance_;
class FunctionOptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionOption>
      _instance;
} _FunctionOption_default_instance_;
class Expression_Enum_EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Enum_Empty>
      _instance;
} _Expression_Enum_Empty_default_instance_;
class Expression_EnumDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Enum>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr specified_;
  const ::substrait::Expression_Enum_Empty* unspecified_;
} _Expression_Enum_default_instance_;
class Expression_Literal_VarCharDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_VarChar>
      _instance;
} _Expression_Literal_VarChar_default_instance_;
class Expression_Literal_DecimalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_Decimal>
      _instance;
} _Expression_Literal_Decimal_default_instance_;
class Expression_Literal_Map_KeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_Map_KeyValue>
      _instance;
} _Expression_Literal_Map_KeyValue_default_instance_;
class Expression_Literal_MapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_Map>
      _instance;
} _Expression_Literal_Map_default_instance_;
class Expression_Literal_IntervalYearToMonthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_IntervalYearToMonth>
      _instance;
} _Expression_Literal_IntervalYearToMonth_default_instance_;
class Expression_Literal_IntervalDayToSecondDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_IntervalDayToSecond>
      _instance;
} _Expression_Literal_IntervalDayToSecond_default_instance_;
class Expression_Literal_StructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_Struct>
      _instance;
} _Expression_Literal_Struct_default_instance_;
class Expression_Literal_ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_List>
      _instance;
} _Expression_Literal_List_default_instance_;
class Expression_Literal_UserDefinedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal_UserDefined>
      _instance;
} _Expression_Literal_UserDefined_default_instance_;
class Expression_LiteralDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Literal>
      _instance;
  bool boolean_;
  ::google::protobuf::int32 i8_;
  ::google::protobuf::int32 i16_;
  ::google::protobuf::int32 i32_;
  ::google::protobuf::int64 i64_;
  float fp32_;
  double fp64_;
  ::google::protobuf::internal::ArenaStringPtr string_;
  ::google::protobuf::internal::ArenaStringPtr binary_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int64 time_;
  const ::substrait::Expression_Literal_IntervalYearToMonth* interval_year_to_month_;
  const ::substrait::Expression_Literal_IntervalDayToSecond* interval_day_to_second_;
  ::google::protobuf::internal::ArenaStringPtr fixed_char_;
  const ::substrait::Expression_Literal_VarChar* var_char_;
  ::google::protobuf::internal::ArenaStringPtr fixed_binary_;
  const ::substrait::Expression_Literal_Decimal* decimal_;
  const ::substrait::Expression_Literal_Struct* struct__;
  const ::substrait::Expression_Literal_Map* map_;
  ::google::protobuf::int64 timestamp_tz_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  const ::substrait::Type* null_;
  const ::substrait::Expression_Literal_List* list_;
  const ::substrait::Type_List* empty_list_;
  const ::substrait::Type_Map* empty_map_;
  const ::substrait::Expression_Literal_UserDefined* user_defined_;
} _Expression_Literal_default_instance_;
class Expression_Nested_Map_KeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Nested_Map_KeyValue>
      _instance;
} _Expression_Nested_Map_KeyValue_default_instance_;
class Expression_Nested_MapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Nested_Map>
      _instance;
} _Expression_Nested_Map_default_instance_;
class Expression_Nested_StructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Nested_Struct>
      _instance;
} _Expression_Nested_Struct_default_instance_;
class Expression_Nested_ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Nested_List>
      _instance;
} _Expression_Nested_List_default_instance_;
class Expression_NestedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Nested>
      _instance;
  const ::substrait::Expression_Nested_Struct* struct__;
  const ::substrait::Expression_Nested_List* list_;
  const ::substrait::Expression_Nested_Map* map_;
} _Expression_Nested_default_instance_;
class Expression_ScalarFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_ScalarFunction>
      _instance;
} _Expression_ScalarFunction_default_instance_;
class Expression_WindowFunction_Bound_PrecedingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_WindowFunction_Bound_Preceding>
      _instance;
} _Expression_WindowFunction_Bound_Preceding_default_instance_;
class Expression_WindowFunction_Bound_FollowingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_WindowFunction_Bound_Following>
      _instance;
} _Expression_WindowFunction_Bound_Following_default_instance_;
class Expression_WindowFunction_Bound_CurrentRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_WindowFunction_Bound_CurrentRow>
      _instance;
} _Expression_WindowFunction_Bound_CurrentRow_default_instance_;
class Expression_WindowFunction_Bound_UnboundedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_WindowFunction_Bound_Unbounded>
      _instance;
} _Expression_WindowFunction_Bound_Unbounded_default_instance_;
class Expression_WindowFunction_BoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_WindowFunction_Bound>
      _instance;
  const ::substrait::Expression_WindowFunction_Bound_Preceding* preceding_;
  const ::substrait::Expression_WindowFunction_Bound_Following* following_;
  const ::substrait::Expression_WindowFunction_Bound_CurrentRow* current_row_;
  const ::substrait::Expression_WindowFunction_Bound_Unbounded* unbounded_;
} _Expression_WindowFunction_Bound_default_instance_;
class Expression_WindowFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_WindowFunction>
      _instance;
} _Expression_WindowFunction_default_instance_;
class Expression_IfThen_IfClauseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_IfThen_IfClause>
      _instance;
} _Expression_IfThen_IfClause_default_instance_;
class Expression_IfThenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_IfThen>
      _instance;
} _Expression_IfThen_default_instance_;
class Expression_CastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Cast>
      _instance;
} _Expression_Cast_default_instance_;
class Expression_SwitchExpression_IfValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_SwitchExpression_IfValue>
      _instance;
} _Expression_SwitchExpression_IfValue_default_instance_;
class Expression_SwitchExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_SwitchExpression>
      _instance;
} _Expression_SwitchExpression_default_instance_;
class Expression_SingularOrListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_SingularOrList>
      _instance;
} _Expression_SingularOrList_default_instance_;
class Expression_MultiOrList_RecordDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MultiOrList_Record>
      _instance;
} _Expression_MultiOrList_Record_default_instance_;
class Expression_MultiOrListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MultiOrList>
      _instance;
} _Expression_MultiOrList_default_instance_;
class Expression_EmbeddedFunction_PythonPickleFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_EmbeddedFunction_PythonPickleFunction>
      _instance;
} _Expression_EmbeddedFunction_PythonPickleFunction_default_instance_;
class Expression_EmbeddedFunction_WebAssemblyFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_EmbeddedFunction_WebAssemblyFunction>
      _instance;
} _Expression_EmbeddedFunction_WebAssemblyFunction_default_instance_;
class Expression_EmbeddedFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_EmbeddedFunction>
      _instance;
  const ::substrait::Expression_EmbeddedFunction_PythonPickleFunction* python_pickle_function_;
  const ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction* web_assembly_function_;
} _Expression_EmbeddedFunction_default_instance_;
class Expression_ReferenceSegment_MapKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_ReferenceSegment_MapKey>
      _instance;
} _Expression_ReferenceSegment_MapKey_default_instance_;
class Expression_ReferenceSegment_StructFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_ReferenceSegment_StructField>
      _instance;
} _Expression_ReferenceSegment_StructField_default_instance_;
class Expression_ReferenceSegment_ListElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_ReferenceSegment_ListElement>
      _instance;
} _Expression_ReferenceSegment_ListElement_default_instance_;
class Expression_ReferenceSegmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_ReferenceSegment>
      _instance;
  const ::substrait::Expression_ReferenceSegment_MapKey* map_key_;
  const ::substrait::Expression_ReferenceSegment_StructField* struct_field_;
  const ::substrait::Expression_ReferenceSegment_ListElement* list_element_;
} _Expression_ReferenceSegment_default_instance_;
class Expression_MaskExpression_SelectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_Select>
      _instance;
  const ::substrait::Expression_MaskExpression_StructSelect* struct__;
  const ::substrait::Expression_MaskExpression_ListSelect* list_;
  const ::substrait::Expression_MaskExpression_MapSelect* map_;
} _Expression_MaskExpression_Select_default_instance_;
class Expression_MaskExpression_StructSelectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_StructSelect>
      _instance;
} _Expression_MaskExpression_StructSelect_default_instance_;
class Expression_MaskExpression_StructItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_StructItem>
      _instance;
} _Expression_MaskExpression_StructItem_default_instance_;
class Expression_MaskExpression_ListSelect_ListSelectItem_ListElementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_ListSelect_ListSelectItem_ListElement>
      _instance;
} _Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_default_instance_;
class Expression_MaskExpression_ListSelect_ListSelectItem_ListSliceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice>
      _instance;
} _Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_default_instance_;
class Expression_MaskExpression_ListSelect_ListSelectItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_ListSelect_ListSelectItem>
      _instance;
  const ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement* item_;
  const ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice* slice_;
} _Expression_MaskExpression_ListSelect_ListSelectItem_default_instance_;
class Expression_MaskExpression_ListSelectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_ListSelect>
      _instance;
} _Expression_MaskExpression_ListSelect_default_instance_;
class Expression_MaskExpression_MapSelect_MapKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_MapSelect_MapKey>
      _instance;
} _Expression_MaskExpression_MapSelect_MapKey_default_instance_;
class Expression_MaskExpression_MapSelect_MapKeyExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_MapSelect_MapKeyExpression>
      _instance;
} _Expression_MaskExpression_MapSelect_MapKeyExpression_default_instance_;
class Expression_MaskExpression_MapSelectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression_MapSelect>
      _instance;
  const ::substrait::Expression_MaskExpression_MapSelect_MapKey* key_;
  const ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression* expression_;
} _Expression_MaskExpression_MapSelect_default_instance_;
class Expression_MaskExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_MaskExpression>
      _instance;
} _Expression_MaskExpression_default_instance_;
class Expression_FieldReference_RootReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_FieldReference_RootReference>
      _instance;
} _Expression_FieldReference_RootReference_default_instance_;
class Expression_FieldReference_OuterReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_FieldReference_OuterReference>
      _instance;
} _Expression_FieldReference_OuterReference_default_instance_;
class Expression_FieldReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_FieldReference>
      _instance;
  const ::substrait::Expression_ReferenceSegment* direct_reference_;
  const ::substrait::Expression_MaskExpression* masked_reference_;
  const ::substrait::Expression* expression_;
  const ::substrait::Expression_FieldReference_RootReference* root_reference_;
  const ::substrait::Expression_FieldReference_OuterReference* outer_reference_;
} _Expression_FieldReference_default_instance_;
class Expression_Subquery_ScalarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Subquery_Scalar>
      _instance;
} _Expression_Subquery_Scalar_default_instance_;
class Expression_Subquery_InPredicateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Subquery_InPredicate>
      _instance;
} _Expression_Subquery_InPredicate_default_instance_;
class Expression_Subquery_SetPredicateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Subquery_SetPredicate>
      _instance;
} _Expression_Subquery_SetPredicate_default_instance_;
class Expression_Subquery_SetComparisonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Subquery_SetComparison>
      _instance;
} _Expression_Subquery_SetComparison_default_instance_;
class Expression_SubqueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression_Subquery>
      _instance;
  const ::substrait::Expression_Subquery_Scalar* scalar_;
  const ::substrait::Expression_Subquery_InPredicate* in_predicate_;
  const ::substrait::Expression_Subquery_SetPredicate* set_predicate_;
  const ::substrait::Expression_Subquery_SetComparison* set_comparison_;
} _Expression_Subquery_default_instance_;
class ExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression>
      _instance;
  const ::substrait::Expression_Literal* literal_;
  const ::substrait::Expression_FieldReference* selection_;
  const ::substrait::Expression_ScalarFunction* scalar_function_;
  const ::substrait::Expression_WindowFunction* window_function_;
  const ::substrait::Expression_IfThen* if_then_;
  const ::substrait::Expression_SwitchExpression* switch_expression_;
  const ::substrait::Expression_SingularOrList* singular_or_list_;
  const ::substrait::Expression_MultiOrList* multi_or_list_;
  const ::substrait::Expression_Cast* cast_;
  const ::substrait::Expression_Subquery* subquery_;
  const ::substrait::Expression_Nested* nested_;
  const ::substrait::Expression_Enum* enum__;
} _Expression_default_instance_;
class SortFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SortField>
      _instance;
  int direction_;
  ::google::protobuf::uint32 comparison_function_reference_;
} _SortField_default_instance_;
class AggregateFunction_ReferenceRelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggregateFunction_ReferenceRel>
      _instance;
} _AggregateFunction_ReferenceRel_default_instance_;
class AggregateFunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AggregateFunction>
      _instance;
} _AggregateFunction_default_instance_;
}  // namespace substrait
namespace protobuf_substrait_2falgebra_2eproto {
static void InitDefaultsRelCommon_Direct() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelCommon_Direct_default_instance_;
    new (ptr) ::substrait::RelCommon_Direct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelCommon_Direct::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RelCommon_Direct =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRelCommon_Direct}, {}};

static void InitDefaultsRelCommon_Emit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelCommon_Emit_default_instance_;
    new (ptr) ::substrait::RelCommon_Emit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelCommon_Emit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RelCommon_Emit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRelCommon_Emit}, {}};

static void InitDefaultsRelCommon_Hint_Stats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelCommon_Hint_Stats_default_instance_;
    new (ptr) ::substrait::RelCommon_Hint_Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelCommon_Hint_Stats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RelCommon_Hint_Stats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelCommon_Hint_Stats}, {
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsRelCommon_Hint_RuntimeConstraint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelCommon_Hint_RuntimeConstraint_default_instance_;
    new (ptr) ::substrait::RelCommon_Hint_RuntimeConstraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelCommon_Hint_RuntimeConstraint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RelCommon_Hint_RuntimeConstraint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelCommon_Hint_RuntimeConstraint}, {
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsRelCommon_Hint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelCommon_Hint_default_instance_;
    new (ptr) ::substrait::RelCommon_Hint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelCommon_Hint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RelCommon_Hint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRelCommon_Hint}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint_Stats.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint_RuntimeConstraint.base,
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsRelCommon() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelCommon_default_instance_;
    new (ptr) ::substrait::RelCommon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelCommon::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_RelCommon =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsRelCommon}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Direct.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Emit.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint.base,
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsReadRel_NamedTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_NamedTable_default_instance_;
    new (ptr) ::substrait::ReadRel_NamedTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_NamedTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadRel_NamedTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadRel_NamedTable}, {
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsReadRel_VirtualTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_VirtualTable_default_instance_;
    new (ptr) ::substrait::ReadRel_VirtualTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_VirtualTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadRel_VirtualTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadRel_VirtualTable}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base,}};

static void InitDefaultsReadRel_ExtensionTable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_ExtensionTable_default_instance_;
    new (ptr) ::substrait::ReadRel_ExtensionTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_ExtensionTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadRel_ExtensionTable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadRel_ExtensionTable}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsReadRel_LocalFiles_FileOrFiles_ParquetReadOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_default_instance_;
    new (ptr) ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRel_LocalFiles_FileOrFiles_ParquetReadOptions}, {}};

static void InitDefaultsReadRel_LocalFiles_FileOrFiles_ArrowReadOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_default_instance_;
    new (ptr) ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRel_LocalFiles_FileOrFiles_ArrowReadOptions}, {}};

static void InitDefaultsReadRel_LocalFiles_FileOrFiles_OrcReadOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_default_instance_;
    new (ptr) ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRel_LocalFiles_FileOrFiles_OrcReadOptions}, {}};

static void InitDefaultsReadRel_LocalFiles_FileOrFiles_DwrfReadOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_default_instance_;
    new (ptr) ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadRel_LocalFiles_FileOrFiles_DwrfReadOptions}, {}};

static void InitDefaultsReadRel_LocalFiles_FileOrFiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_;
    new (ptr) ::substrait::ReadRel_LocalFiles_FileOrFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_LocalFiles_FileOrFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ReadRel_LocalFiles_FileOrFiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsReadRel_LocalFiles_FileOrFiles}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions.base,}};

static void InitDefaultsReadRel_LocalFiles() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_LocalFiles_default_instance_;
    new (ptr) ::substrait::ReadRel_LocalFiles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel_LocalFiles::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ReadRel_LocalFiles =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReadRel_LocalFiles}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles.base,
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsExtensionLeafRel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExtensionLeafRel_default_instance_;
    new (ptr) ::substrait::ExtensionLeafRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExtensionLeafRel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExtensionLeafRel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExtensionLeafRel}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsExchangeRel_ScatterFields() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_ScatterFields_default_instance_;
    new (ptr) ::substrait::ExchangeRel_ScatterFields();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel_ScatterFields::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_ScatterFields =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExchangeRel_ScatterFields}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,}};

static void InitDefaultsExchangeRel_SingleBucketExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_SingleBucketExpression_default_instance_;
    new (ptr) ::substrait::ExchangeRel_SingleBucketExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel_SingleBucketExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_SingleBucketExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExchangeRel_SingleBucketExpression}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,}};

static void InitDefaultsExchangeRel_MultiBucketExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_MultiBucketExpression_default_instance_;
    new (ptr) ::substrait::ExchangeRel_MultiBucketExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel_MultiBucketExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_MultiBucketExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExchangeRel_MultiBucketExpression}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,}};

static void InitDefaultsExchangeRel_Broadcast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_Broadcast_default_instance_;
    new (ptr) ::substrait::ExchangeRel_Broadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel_Broadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExchangeRel_Broadcast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExchangeRel_Broadcast}, {}};

static void InitDefaultsExchangeRel_RoundRobin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_RoundRobin_default_instance_;
    new (ptr) ::substrait::ExchangeRel_RoundRobin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel_RoundRobin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExchangeRel_RoundRobin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExchangeRel_RoundRobin}, {}};

static void InitDefaultsExchangeRel_ExchangeTarget() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_ExchangeTarget_default_instance_;
    new (ptr) ::substrait::ExchangeRel_ExchangeTarget();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel_ExchangeTarget::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExchangeRel_ExchangeTarget =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExchangeRel_ExchangeTarget}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsExchangeRel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExchangeRel_default_instance_;
    new (ptr) ::substrait::ExchangeRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExchangeRel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_ExchangeRel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsExchangeRel}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_ExchangeTarget.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_ScatterFields.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_SingleBucketExpression.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_MultiBucketExpression.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_RoundRobin.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_Broadcast.base,
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsRelRoot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_RelRoot_default_instance_;
    new (ptr) ::substrait::RelRoot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::RelRoot::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RelRoot =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRelRoot}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,}};

static void InitDefaultsNamedObjectWrite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_NamedObjectWrite_default_instance_;
    new (ptr) ::substrait::NamedObjectWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::NamedObjectWrite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NamedObjectWrite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNamedObjectWrite}, {
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,}};

static void InitDefaultsExtensionObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ExtensionObject_default_instance_;
    new (ptr) ::substrait::ExtensionObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ExtensionObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExtensionObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExtensionObject}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDdlRel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_DdlRel_default_instance_;
    new (ptr) ::substrait::DdlRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::DdlRel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_DdlRel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsDdlRel}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_NamedObjectWrite.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionObject.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_NamedStruct.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,}};

static void InitDefaultsWriteRel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_WriteRel_default_instance_;
    new (ptr) ::substrait::WriteRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::WriteRel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_WriteRel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsWriteRel}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_NamedObjectWrite.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionObject.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_NamedStruct.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,}};

static void InitDefaultsFunctionOption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_FunctionOption_default_instance_;
    new (ptr) ::substrait::FunctionOption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::FunctionOption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FunctionOption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFunctionOption}, {}};

static void InitDefaultsExpression_Enum_Empty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Enum_Empty_default_instance_;
    new (ptr) ::substrait::Expression_Enum_Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Enum_Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Enum_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_Enum_Empty}, {}};

static void InitDefaultsExpression_Enum() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Enum_default_instance_;
    new (ptr) ::substrait::Expression_Enum();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Enum::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Expression_Enum =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExpression_Enum}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Enum_Empty.base,}};

static void InitDefaultsExpression_Literal_VarChar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Literal_VarChar_default_instance_;
    new (ptr) ::substrait::Expression_Literal_VarChar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Literal_VarChar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_VarChar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_Literal_VarChar}, {}};

static void InitDefaultsExpression_Literal_Decimal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Literal_Decimal_default_instance_;
    new (ptr) ::substrait::Expression_Literal_Decimal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Literal_Decimal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_Decimal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_Literal_Decimal}, {}};

static void InitDefaultsExpression_Literal_IntervalYearToMonth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Literal_IntervalYearToMonth_default_instance_;
    new (ptr) ::substrait::Expression_Literal_IntervalYearToMonth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Literal_IntervalYearToMonth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_IntervalYearToMonth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_Literal_IntervalYearToMonth}, {}};

static void InitDefaultsExpression_Literal_IntervalDayToSecond() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Literal_IntervalDayToSecond_default_instance_;
    new (ptr) ::substrait::Expression_Literal_IntervalDayToSecond();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Literal_IntervalDayToSecond::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_Literal_IntervalDayToSecond =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_Literal_IntervalDayToSecond}, {}};

static void InitDefaultsExpression_Literal_UserDefined() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Literal_UserDefined_default_instance_;
    new (ptr) ::substrait::Expression_Literal_UserDefined();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Literal_UserDefined::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Expression_Literal_UserDefined =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExpression_Literal_UserDefined}, {
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsExpression_Literal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_Literal_Map_KeyValue_default_instance_;
    new (ptr) ::substrait::Expression_Literal_Map_KeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Literal_Map_default_instance_;
    new (ptr) ::substrait::Expression_Literal_Map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Literal_Struct_default_instance_;
    new (ptr) ::substrait::Expression_Literal_Struct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Literal_List_default_instance_;
    new (ptr) ::substrait::Expression_Literal_List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Literal_default_instance_;
    new (ptr) ::substrait::Expression_Literal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_Literal_Map_KeyValue::InitAsDefaultInstance();
  ::substrait::Expression_Literal_Map::InitAsDefaultInstance();
  ::substrait::Expression_Literal_Struct::InitAsDefaultInstance();
  ::substrait::Expression_Literal_List::InitAsDefaultInstance();
  ::substrait::Expression_Literal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Expression_Literal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsExpression_Literal}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_IntervalYearToMonth.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_IntervalDayToSecond.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_VarChar.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_Decimal.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_UserDefined.base,}};

static void InitDefaultsExpression_WindowFunction_Bound_Preceding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_WindowFunction_Bound_Preceding_default_instance_;
    new (ptr) ::substrait::Expression_WindowFunction_Bound_Preceding();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_WindowFunction_Bound_Preceding::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_Preceding =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_WindowFunction_Bound_Preceding}, {}};

static void InitDefaultsExpression_WindowFunction_Bound_Following() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_WindowFunction_Bound_Following_default_instance_;
    new (ptr) ::substrait::Expression_WindowFunction_Bound_Following();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_WindowFunction_Bound_Following::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_Following =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_WindowFunction_Bound_Following}, {}};

static void InitDefaultsExpression_WindowFunction_Bound_CurrentRow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_WindowFunction_Bound_CurrentRow_default_instance_;
    new (ptr) ::substrait::Expression_WindowFunction_Bound_CurrentRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_WindowFunction_Bound_CurrentRow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_CurrentRow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_WindowFunction_Bound_CurrentRow}, {}};

static void InitDefaultsExpression_WindowFunction_Bound_Unbounded() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_WindowFunction_Bound_Unbounded_default_instance_;
    new (ptr) ::substrait::Expression_WindowFunction_Bound_Unbounded();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_WindowFunction_Bound_Unbounded::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_WindowFunction_Bound_Unbounded =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_WindowFunction_Bound_Unbounded}, {}};

static void InitDefaultsExpression_WindowFunction_Bound() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_WindowFunction_Bound_default_instance_;
    new (ptr) ::substrait::Expression_WindowFunction_Bound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_WindowFunction_Bound::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Expression_WindowFunction_Bound =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsExpression_WindowFunction_Bound}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Preceding.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Following.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_CurrentRow.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Unbounded.base,}};

static void InitDefaultsExpression_EmbeddedFunction_PythonPickleFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_EmbeddedFunction_PythonPickleFunction_default_instance_;
    new (ptr) ::substrait::Expression_EmbeddedFunction_PythonPickleFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_EmbeddedFunction_PythonPickleFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_EmbeddedFunction_PythonPickleFunction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_EmbeddedFunction_PythonPickleFunction}, {}};

static void InitDefaultsExpression_EmbeddedFunction_WebAssemblyFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_EmbeddedFunction_WebAssemblyFunction_default_instance_;
    new (ptr) ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_EmbeddedFunction_WebAssemblyFunction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_EmbeddedFunction_WebAssemblyFunction}, {}};

static void InitDefaultsExpression_EmbeddedFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_EmbeddedFunction_default_instance_;
    new (ptr) ::substrait::Expression_EmbeddedFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_EmbeddedFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Expression_EmbeddedFunction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsExpression_EmbeddedFunction}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction_PythonPickleFunction.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction_WebAssemblyFunction.base,}};

static void InitDefaultsExpression_ReferenceSegment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_ReferenceSegment_MapKey_default_instance_;
    new (ptr) ::substrait::Expression_ReferenceSegment_MapKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_ReferenceSegment_StructField_default_instance_;
    new (ptr) ::substrait::Expression_ReferenceSegment_StructField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_ReferenceSegment_ListElement_default_instance_;
    new (ptr) ::substrait::Expression_ReferenceSegment_ListElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_ReferenceSegment_default_instance_;
    new (ptr) ::substrait::Expression_ReferenceSegment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_ReferenceSegment_MapKey::InitAsDefaultInstance();
  ::substrait::Expression_ReferenceSegment_StructField::InitAsDefaultInstance();
  ::substrait::Expression_ReferenceSegment_ListElement::InitAsDefaultInstance();
  ::substrait::Expression_ReferenceSegment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Expression_ReferenceSegment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExpression_ReferenceSegment}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base,}};

static void InitDefaultsExpression_MaskExpression_ListSelect_ListSelectItem_ListElement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_MaskExpression_ListSelect_ListSelectItem_ListElement}, {}};

static void InitDefaultsExpression_MaskExpression_ListSelect_ListSelectItem_ListSlice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_MaskExpression_ListSelect_ListSelectItem_ListSlice}, {}};

static void InitDefaultsExpression_MaskExpression_ListSelect_ListSelectItem() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Expression_MaskExpression_ListSelect_ListSelectItem =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExpression_MaskExpression_ListSelect_ListSelectItem}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice.base,}};

static void InitDefaultsExpression_MaskExpression_ListSelect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_Select_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_Select();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_MaskExpression_StructSelect_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_StructSelect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_MaskExpression_StructItem_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_StructItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_MaskExpression_ListSelect_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_ListSelect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_MaskExpression_MapSelect_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_MapSelect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression_Select::InitAsDefaultInstance();
  ::substrait::Expression_MaskExpression_StructSelect::InitAsDefaultInstance();
  ::substrait::Expression_MaskExpression_StructItem::InitAsDefaultInstance();
  ::substrait::Expression_MaskExpression_ListSelect::InitAsDefaultInstance();
  ::substrait::Expression_MaskExpression_MapSelect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Expression_MaskExpression_ListSelect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsExpression_MaskExpression_ListSelect}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_MapSelect_MapKey.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_MapSelect_MapKeyExpression.base,}};

static void InitDefaultsExpression_MaskExpression_MapSelect_MapKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_MapSelect_MapKey_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_MapSelect_MapKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression_MapSelect_MapKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_MapSelect_MapKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_MaskExpression_MapSelect_MapKey}, {}};

static void InitDefaultsExpression_MaskExpression_MapSelect_MapKeyExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_MapSelect_MapKeyExpression_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_MaskExpression_MapSelect_MapKeyExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_MaskExpression_MapSelect_MapKeyExpression}, {}};

static void InitDefaultsExpression_MaskExpression() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_MaskExpression_default_instance_;
    new (ptr) ::substrait::Expression_MaskExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_MaskExpression::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Expression_MaskExpression =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExpression_MaskExpression}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base,}};

static void InitDefaultsExpression_FieldReference_RootReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_FieldReference_RootReference_default_instance_;
    new (ptr) ::substrait::Expression_FieldReference_RootReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_FieldReference_RootReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_FieldReference_RootReference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_FieldReference_RootReference}, {}};

static void InitDefaultsExpression_FieldReference_OuterReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Expression_FieldReference_OuterReference_default_instance_;
    new (ptr) ::substrait::Expression_FieldReference_OuterReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Expression_FieldReference_OuterReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Expression_FieldReference_OuterReference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExpression_FieldReference_OuterReference}, {}};

static void InitDefaultsAggregateFunction_ReferenceRel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_AggregateFunction_ReferenceRel_default_instance_;
    new (ptr) ::substrait::AggregateFunction_ReferenceRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::AggregateFunction_ReferenceRel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AggregateFunction_ReferenceRel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAggregateFunction_ReferenceRel}, {}};

static void InitDefaultsAggregateFunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_ReadRel_default_instance_;
    new (ptr) ::substrait::ReadRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_ProjectRel_default_instance_;
    new (ptr) ::substrait::ProjectRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_JoinRel_default_instance_;
    new (ptr) ::substrait::JoinRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_CrossRel_default_instance_;
    new (ptr) ::substrait::CrossRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_FetchRel_default_instance_;
    new (ptr) ::substrait::FetchRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_AggregateRel_Grouping_default_instance_;
    new (ptr) ::substrait::AggregateRel_Grouping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_AggregateRel_Measure_default_instance_;
    new (ptr) ::substrait::AggregateRel_Measure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_AggregateRel_default_instance_;
    new (ptr) ::substrait::AggregateRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_SortRel_default_instance_;
    new (ptr) ::substrait::SortRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_FilterRel_default_instance_;
    new (ptr) ::substrait::FilterRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_SetRel_default_instance_;
    new (ptr) ::substrait::SetRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_ExtensionSingleRel_default_instance_;
    new (ptr) ::substrait::ExtensionSingleRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_ExtensionMultiRel_default_instance_;
    new (ptr) ::substrait::ExtensionMultiRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Rel_default_instance_;
    new (ptr) ::substrait::Rel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_HashJoinRel_default_instance_;
    new (ptr) ::substrait::HashJoinRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_MergeJoinRel_default_instance_;
    new (ptr) ::substrait::MergeJoinRel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_FunctionArgument_default_instance_;
    new (ptr) ::substrait::FunctionArgument();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Nested_Map_KeyValue_default_instance_;
    new (ptr) ::substrait::Expression_Nested_Map_KeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Nested_Map_default_instance_;
    new (ptr) ::substrait::Expression_Nested_Map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Nested_Struct_default_instance_;
    new (ptr) ::substrait::Expression_Nested_Struct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Nested_List_default_instance_;
    new (ptr) ::substrait::Expression_Nested_List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Nested_default_instance_;
    new (ptr) ::substrait::Expression_Nested();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_ScalarFunction_default_instance_;
    new (ptr) ::substrait::Expression_ScalarFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_WindowFunction_default_instance_;
    new (ptr) ::substrait::Expression_WindowFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_IfThen_IfClause_default_instance_;
    new (ptr) ::substrait::Expression_IfThen_IfClause();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_IfThen_default_instance_;
    new (ptr) ::substrait::Expression_IfThen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Cast_default_instance_;
    new (ptr) ::substrait::Expression_Cast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_SwitchExpression_IfValue_default_instance_;
    new (ptr) ::substrait::Expression_SwitchExpression_IfValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_SwitchExpression_default_instance_;
    new (ptr) ::substrait::Expression_SwitchExpression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_SingularOrList_default_instance_;
    new (ptr) ::substrait::Expression_SingularOrList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_MultiOrList_Record_default_instance_;
    new (ptr) ::substrait::Expression_MultiOrList_Record();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_MultiOrList_default_instance_;
    new (ptr) ::substrait::Expression_MultiOrList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_FieldReference_default_instance_;
    new (ptr) ::substrait::Expression_FieldReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Subquery_Scalar_default_instance_;
    new (ptr) ::substrait::Expression_Subquery_Scalar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Subquery_InPredicate_default_instance_;
    new (ptr) ::substrait::Expression_Subquery_InPredicate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Subquery_SetPredicate_default_instance_;
    new (ptr) ::substrait::Expression_Subquery_SetPredicate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Subquery_SetComparison_default_instance_;
    new (ptr) ::substrait::Expression_Subquery_SetComparison();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_Subquery_default_instance_;
    new (ptr) ::substrait::Expression_Subquery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Expression_default_instance_;
    new (ptr) ::substrait::Expression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_SortField_default_instance_;
    new (ptr) ::substrait::SortField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_AggregateFunction_default_instance_;
    new (ptr) ::substrait::AggregateFunction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::ReadRel::InitAsDefaultInstance();
  ::substrait::ProjectRel::InitAsDefaultInstance();
  ::substrait::JoinRel::InitAsDefaultInstance();
  ::substrait::CrossRel::InitAsDefaultInstance();
  ::substrait::FetchRel::InitAsDefaultInstance();
  ::substrait::AggregateRel_Grouping::InitAsDefaultInstance();
  ::substrait::AggregateRel_Measure::InitAsDefaultInstance();
  ::substrait::AggregateRel::InitAsDefaultInstance();
  ::substrait::SortRel::InitAsDefaultInstance();
  ::substrait::FilterRel::InitAsDefaultInstance();
  ::substrait::SetRel::InitAsDefaultInstance();
  ::substrait::ExtensionSingleRel::InitAsDefaultInstance();
  ::substrait::ExtensionMultiRel::InitAsDefaultInstance();
  ::substrait::Rel::InitAsDefaultInstance();
  ::substrait::HashJoinRel::InitAsDefaultInstance();
  ::substrait::MergeJoinRel::InitAsDefaultInstance();
  ::substrait::FunctionArgument::InitAsDefaultInstance();
  ::substrait::Expression_Nested_Map_KeyValue::InitAsDefaultInstance();
  ::substrait::Expression_Nested_Map::InitAsDefaultInstance();
  ::substrait::Expression_Nested_Struct::InitAsDefaultInstance();
  ::substrait::Expression_Nested_List::InitAsDefaultInstance();
  ::substrait::Expression_Nested::InitAsDefaultInstance();
  ::substrait::Expression_ScalarFunction::InitAsDefaultInstance();
  ::substrait::Expression_WindowFunction::InitAsDefaultInstance();
  ::substrait::Expression_IfThen_IfClause::InitAsDefaultInstance();
  ::substrait::Expression_IfThen::InitAsDefaultInstance();
  ::substrait::Expression_Cast::InitAsDefaultInstance();
  ::substrait::Expression_SwitchExpression_IfValue::InitAsDefaultInstance();
  ::substrait::Expression_SwitchExpression::InitAsDefaultInstance();
  ::substrait::Expression_SingularOrList::InitAsDefaultInstance();
  ::substrait::Expression_MultiOrList_Record::InitAsDefaultInstance();
  ::substrait::Expression_MultiOrList::InitAsDefaultInstance();
  ::substrait::Expression_FieldReference::InitAsDefaultInstance();
  ::substrait::Expression_Subquery_Scalar::InitAsDefaultInstance();
  ::substrait::Expression_Subquery_InPredicate::InitAsDefaultInstance();
  ::substrait::Expression_Subquery_SetPredicate::InitAsDefaultInstance();
  ::substrait::Expression_Subquery_SetComparison::InitAsDefaultInstance();
  ::substrait::Expression_Subquery::InitAsDefaultInstance();
  ::substrait::Expression::InitAsDefaultInstance();
  ::substrait::SortField::InitAsDefaultInstance();
  ::substrait::AggregateFunction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<18> scc_info_AggregateFunction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 18, InitDefaultsAggregateFunction}, {
      &protobuf_substrait_2falgebra_2eproto::scc_info_FunctionOption.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon.base,
      &protobuf_substrait_2fextensions_2fextensions_2eproto::scc_info_AdvancedExtension.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Enum.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_FieldReference_RootReference.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_FieldReference_OuterReference.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_NamedStruct.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_VirtualTable.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_NamedTable.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_ExtensionTable.base,
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionLeafRel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RelCommon_Direct.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelCommon_Emit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelCommon_Hint_Stats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelCommon_Hint_RuntimeConstraint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelCommon_Hint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelCommon.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_NamedTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_VirtualTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_ExtensionTable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_LocalFiles_FileOrFiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadRel_LocalFiles.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtensionLeafRel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel_ScatterFields.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel_SingleBucketExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel_MultiBucketExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel_Broadcast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel_RoundRobin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel_ExchangeTarget.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExchangeRel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RelRoot.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NamedObjectWrite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExtensionObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DdlRel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteRel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FunctionOption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Enum_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Enum.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Literal_VarChar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Literal_Decimal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Literal_IntervalYearToMonth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Literal_IntervalDayToSecond.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Literal_UserDefined.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_Literal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_WindowFunction_Bound_Preceding.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_WindowFunction_Bound_Following.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_WindowFunction_Bound_CurrentRow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_WindowFunction_Bound_Unbounded.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_WindowFunction_Bound.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_EmbeddedFunction_PythonPickleFunction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_EmbeddedFunction_WebAssemblyFunction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_EmbeddedFunction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_ReferenceSegment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression_ListSelect_ListSelectItem.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression_ListSelect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression_MapSelect_MapKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression_MapSelect_MapKeyExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_MaskExpression.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_FieldReference_RootReference.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Expression_FieldReference_OuterReference.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AggregateFunction_ReferenceRel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AggregateFunction.base);
}

::google::protobuf::Metadata file_level_metadata[108];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Direct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Emit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Emit, output_mapping_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint_Stats, row_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint_Stats, record_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint_Stats, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint_RuntimeConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint_RuntimeConstraint, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint, constraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon_Hint, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::RelCommonDefaultTypeInternal, direct_),
  offsetof(::substrait::RelCommonDefaultTypeInternal, emit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon, hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon, advanced_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelCommon, emit_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_NamedTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_NamedTable, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_NamedTable, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_VirtualTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_VirtualTable, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_ExtensionTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_ExtensionTable, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, uri_path_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, uri_path_glob_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, uri_file_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, uri_folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, partition_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, length_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, parquet_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, arrow_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, orc_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, extension_),
  offsetof(::substrait::ReadRel_LocalFiles_FileOrFilesDefaultTypeInternal, dwrf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, path_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles_FileOrFiles, file_format_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel_LocalFiles, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, base_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, best_effort_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, projection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, advanced_extension_),
  offsetof(::substrait::ReadRelDefaultTypeInternal, virtual_table_),
  offsetof(::substrait::ReadRelDefaultTypeInternal, local_files_),
  offsetof(::substrait::ReadRelDefaultTypeInternal, named_table_),
  offsetof(::substrait::ReadRelDefaultTypeInternal, extension_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ReadRel, read_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ProjectRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ProjectRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ProjectRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ProjectRel, expressions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ProjectRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, expression_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, post_join_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::JoinRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::CrossRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::CrossRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::CrossRel, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::CrossRel, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::CrossRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FetchRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FetchRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FetchRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FetchRel, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FetchRel, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FetchRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel_Grouping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel_Grouping, grouping_expressions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel_Measure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel_Measure, measure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel_Measure, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel, groupings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel, measures_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortRel, sorts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FilterRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FilterRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FilterRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FilterRel, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FilterRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SetRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SetRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SetRel, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SetRel, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SetRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionSingleRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionSingleRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionSingleRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionSingleRel, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionLeafRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionLeafRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionLeafRel, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionMultiRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionMultiRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionMultiRel, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionMultiRel, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_ScatterFields, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_ScatterFields, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_SingleBucketExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_SingleBucketExpression, expression_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_MultiBucketExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_MultiBucketExpression, expression_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_MultiBucketExpression, constrained_to_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_Broadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_RoundRobin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_RoundRobin, exact_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_ExchangeTarget, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_ExchangeTarget, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_ExchangeTarget, partition_id_),
  offsetof(::substrait::ExchangeRel_ExchangeTargetDefaultTypeInternal, uri_),
  offsetof(::substrait::ExchangeRel_ExchangeTargetDefaultTypeInternal, extended_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel_ExchangeTarget, target_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, partition_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, targets_),
  offsetof(::substrait::ExchangeRelDefaultTypeInternal, scatter_by_fields_),
  offsetof(::substrait::ExchangeRelDefaultTypeInternal, single_target_),
  offsetof(::substrait::ExchangeRelDefaultTypeInternal, multi_target_),
  offsetof(::substrait::ExchangeRelDefaultTypeInternal, round_robin_),
  offsetof(::substrait::ExchangeRelDefaultTypeInternal, broadcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, advanced_extension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExchangeRel, exchange_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelRoot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelRoot, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::RelRoot, names_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Rel, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Rel, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::RelDefaultTypeInternal, read_),
  offsetof(::substrait::RelDefaultTypeInternal, filter_),
  offsetof(::substrait::RelDefaultTypeInternal, fetch_),
  offsetof(::substrait::RelDefaultTypeInternal, aggregate_),
  offsetof(::substrait::RelDefaultTypeInternal, sort_),
  offsetof(::substrait::RelDefaultTypeInternal, join_),
  offsetof(::substrait::RelDefaultTypeInternal, project_),
  offsetof(::substrait::RelDefaultTypeInternal, set_),
  offsetof(::substrait::RelDefaultTypeInternal, extension_single_),
  offsetof(::substrait::RelDefaultTypeInternal, extension_multi_),
  offsetof(::substrait::RelDefaultTypeInternal, extension_leaf_),
  offsetof(::substrait::RelDefaultTypeInternal, cross_),
  offsetof(::substrait::RelDefaultTypeInternal, hash_join_),
  offsetof(::substrait::RelDefaultTypeInternal, merge_join_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Rel, rel_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::NamedObjectWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::NamedObjectWrite, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::NamedObjectWrite, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::ExtensionObject, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::DdlRelDefaultTypeInternal, named_object_),
  offsetof(::substrait::DdlRelDefaultTypeInternal, extension_object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, table_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, table_defaults_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, view_definition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::DdlRel, write_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::WriteRelDefaultTypeInternal, named_table_),
  offsetof(::substrait::WriteRelDefaultTypeInternal, extension_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, table_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::WriteRel, write_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, left_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, right_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, post_join_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::HashJoinRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, common_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, left_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, right_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, post_join_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::MergeJoinRel, advanced_extension_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FunctionArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FunctionArgument, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::FunctionArgumentDefaultTypeInternal, enum__),
  offsetof(::substrait::FunctionArgumentDefaultTypeInternal, type_),
  offsetof(::substrait::FunctionArgumentDefaultTypeInternal, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FunctionArgument, arg_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FunctionOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FunctionOption, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::FunctionOption, preference_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Enum_Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Enum, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Enum, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_EnumDefaultTypeInternal, specified_),
  offsetof(::substrait::Expression_EnumDefaultTypeInternal, unspecified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Enum, enum_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_VarChar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_VarChar, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_VarChar, length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Decimal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Decimal, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Decimal, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Decimal, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Map_KeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Map_KeyValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Map_KeyValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Map, key_values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalYearToMonth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalYearToMonth, years_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalYearToMonth, months_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalDayToSecond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalDayToSecond, days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalDayToSecond, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_IntervalDayToSecond, microseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_Struct, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_UserDefined, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_UserDefined, type_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_UserDefined, type_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal_UserDefined, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, boolean_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, i8_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, i16_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, i32_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, i64_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, fp32_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, fp64_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, string_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, binary_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, timestamp_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, date_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, time_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, interval_year_to_month_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, interval_day_to_second_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, fixed_char_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, var_char_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, fixed_binary_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, decimal_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, struct__),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, map_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, timestamp_tz_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, uuid_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, null_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, list_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, empty_list_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, empty_map_),
  offsetof(::substrait::Expression_LiteralDefaultTypeInternal, user_defined_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal, nullable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Literal, literal_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Map_KeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Map_KeyValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Map_KeyValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Map, key_values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_Struct, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested_List, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested, nullable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested, type_variation_reference_),
  offsetof(::substrait::Expression_NestedDefaultTypeInternal, struct__),
  offsetof(::substrait::Expression_NestedDefaultTypeInternal, list_),
  offsetof(::substrait::Expression_NestedDefaultTypeInternal, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Nested, nested_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ScalarFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ScalarFunction, function_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ScalarFunction, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ScalarFunction, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ScalarFunction, output_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ScalarFunction, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound_Preceding, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound_Preceding, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound_Following, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound_Following, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound_CurrentRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound_Unbounded, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_WindowFunction_BoundDefaultTypeInternal, preceding_),
  offsetof(::substrait::Expression_WindowFunction_BoundDefaultTypeInternal, following_),
  offsetof(::substrait::Expression_WindowFunction_BoundDefaultTypeInternal, current_row_),
  offsetof(::substrait::Expression_WindowFunction_BoundDefaultTypeInternal, unbounded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction_Bound, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, function_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, output_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, phase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, sorts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, invocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, partitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_WindowFunction, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_IfThen_IfClause, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_IfThen_IfClause, if__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_IfThen_IfClause, then_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_IfThen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_IfThen, ifs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_IfThen, else__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Cast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Cast, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Cast, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Cast, failure_behavior_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression_IfValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression_IfValue, if__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression_IfValue, then_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression, match_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression, ifs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SwitchExpression, else__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SingularOrList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SingularOrList, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_SingularOrList, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MultiOrList_Record, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MultiOrList_Record, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MultiOrList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MultiOrList, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MultiOrList, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction_PythonPickleFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction_PythonPickleFunction, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction_PythonPickleFunction, prerequisite_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction_WebAssemblyFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction_WebAssemblyFunction, script_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction_WebAssemblyFunction, prerequisite_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction, output_type_),
  offsetof(::substrait::Expression_EmbeddedFunctionDefaultTypeInternal, python_pickle_function_),
  offsetof(::substrait::Expression_EmbeddedFunctionDefaultTypeInternal, web_assembly_function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_EmbeddedFunction, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_MapKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_MapKey, map_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_MapKey, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_StructField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_StructField, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_StructField, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_ListElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_ListElement, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment_ListElement, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_ReferenceSegmentDefaultTypeInternal, map_key_),
  offsetof(::substrait::Expression_ReferenceSegmentDefaultTypeInternal, struct_field_),
  offsetof(::substrait::Expression_ReferenceSegmentDefaultTypeInternal, list_element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_ReferenceSegment, reference_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_Select, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_Select, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_MaskExpression_SelectDefaultTypeInternal, struct__),
  offsetof(::substrait::Expression_MaskExpression_SelectDefaultTypeInternal, list_),
  offsetof(::substrait::Expression_MaskExpression_SelectDefaultTypeInternal, map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_Select, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_StructSelect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_StructSelect, struct_items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_StructItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_StructItem, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_StructItem, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement, field_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_MaskExpression_ListSelect_ListSelectItemDefaultTypeInternal, item_),
  offsetof(::substrait::Expression_MaskExpression_ListSelect_ListSelectItemDefaultTypeInternal, slice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect, selection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_ListSelect, child_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect_MapKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect_MapKey, map_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression, map_key_expression_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_MaskExpression_MapSelectDefaultTypeInternal, key_),
  offsetof(::substrait::Expression_MaskExpression_MapSelectDefaultTypeInternal, expression_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect, child_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression_MapSelect, select_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression, select_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_MaskExpression, maintain_singular_struct_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference_RootReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference_OuterReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference_OuterReference, steps_out_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_FieldReferenceDefaultTypeInternal, direct_reference_),
  offsetof(::substrait::Expression_FieldReferenceDefaultTypeInternal, masked_reference_),
  offsetof(::substrait::Expression_FieldReferenceDefaultTypeInternal, expression_),
  offsetof(::substrait::Expression_FieldReferenceDefaultTypeInternal, root_reference_),
  offsetof(::substrait::Expression_FieldReferenceDefaultTypeInternal, outer_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference, reference_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_FieldReference, root_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_Scalar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_Scalar, input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_InPredicate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_InPredicate, needles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_InPredicate, haystack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetPredicate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetPredicate, predicate_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetPredicate, tuples_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetComparison, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetComparison, reduction_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetComparison, comparison_op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetComparison, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery_SetComparison, right_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Expression_SubqueryDefaultTypeInternal, scalar_),
  offsetof(::substrait::Expression_SubqueryDefaultTypeInternal, in_predicate_),
  offsetof(::substrait::Expression_SubqueryDefaultTypeInternal, set_predicate_),
  offsetof(::substrait::Expression_SubqueryDefaultTypeInternal, set_comparison_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression_Subquery, subquery_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::ExpressionDefaultTypeInternal, literal_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, selection_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, scalar_function_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, window_function_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, if_then_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, switch_expression_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, singular_or_list_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, multi_or_list_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, cast_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, subquery_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, nested_),
  offsetof(::substrait::ExpressionDefaultTypeInternal, enum__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Expression, rex_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortField, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortField, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortField, expr_),
  offsetof(::substrait::SortFieldDefaultTypeInternal, direction_),
  offsetof(::substrait::SortFieldDefaultTypeInternal, comparison_function_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::SortField, sort_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction_ReferenceRel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction_ReferenceRel, subtree_ordinal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, function_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, arguments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, output_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, phase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, sorts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, invocation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::AggregateFunction, args_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::substrait::RelCommon_Direct)},
  { 5, -1, sizeof(::substrait::RelCommon_Emit)},
  { 11, -1, sizeof(::substrait::RelCommon_Hint_Stats)},
  { 19, -1, sizeof(::substrait::RelCommon_Hint_RuntimeConstraint)},
  { 25, -1, sizeof(::substrait::RelCommon_Hint)},
  { 33, -1, sizeof(::substrait::RelCommon)},
  { 43, -1, sizeof(::substrait::ReadRel_NamedTable)},
  { 50, -1, sizeof(::substrait::ReadRel_VirtualTable)},
  { 56, -1, sizeof(::substrait::ReadRel_ExtensionTable)},
  { 62, -1, sizeof(::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions)},
  { 67, -1, sizeof(::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions)},
  { 72, -1, sizeof(::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions)},
  { 77, -1, sizeof(::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions)},
  { 82, -1, sizeof(::substrait::ReadRel_LocalFiles_FileOrFiles)},
  { 101, -1, sizeof(::substrait::ReadRel_LocalFiles)},
  { 108, -1, sizeof(::substrait::ReadRel)},
  { 124, -1, sizeof(::substrait::ProjectRel)},
  { 133, -1, sizeof(::substrait::JoinRel)},
  { 145, -1, sizeof(::substrait::CrossRel)},
  { 154, -1, sizeof(::substrait::FetchRel)},
  { 164, -1, sizeof(::substrait::AggregateRel_Grouping)},
  { 170, -1, sizeof(::substrait::AggregateRel_Measure)},
  { 177, -1, sizeof(::substrait::AggregateRel)},
  { 187, -1, sizeof(::substrait::SortRel)},
  { 196, -1, sizeof(::substrait::FilterRel)},
  { 205, -1, sizeof(::substrait::SetRel)},
  { 214, -1, sizeof(::substrait::ExtensionSingleRel)},
  { 222, -1, sizeof(::substrait::ExtensionLeafRel)},
  { 229, -1, sizeof(::substrait::ExtensionMultiRel)},
  { 237, -1, sizeof(::substrait::ExchangeRel_ScatterFields)},
  { 243, -1, sizeof(::substrait::ExchangeRel_SingleBucketExpression)},
  { 249, -1, sizeof(::substrait::ExchangeRel_MultiBucketExpression)},
  { 256, -1, sizeof(::substrait::ExchangeRel_Broadcast)},
  { 261, -1, sizeof(::substrait::ExchangeRel_RoundRobin)},
  { 267, -1, sizeof(::substrait::ExchangeRel_ExchangeTarget)},
  { 276, -1, sizeof(::substrait::ExchangeRel)},
  { 292, -1, sizeof(::substrait::RelRoot)},
  { 299, -1, sizeof(::substrait::Rel)},
  { 319, -1, sizeof(::substrait::NamedObjectWrite)},
  { 326, -1, sizeof(::substrait::ExtensionObject)},
  { 332, -1, sizeof(::substrait::DdlRel)},
  { 345, -1, sizeof(::substrait::WriteRel)},
  { 357, -1, sizeof(::substrait::HashJoinRel)},
  { 370, -1, sizeof(::substrait::MergeJoinRel)},
  { 383, -1, sizeof(::substrait::FunctionArgument)},
  { 392, -1, sizeof(::substrait::FunctionOption)},
  { 399, -1, sizeof(::substrait::Expression_Enum_Empty)},
  { 404, -1, sizeof(::substrait::Expression_Enum)},
  { 412, -1, sizeof(::substrait::Expression_Literal_VarChar)},
  { 419, -1, sizeof(::substrait::Expression_Literal_Decimal)},
  { 427, -1, sizeof(::substrait::Expression_Literal_Map_KeyValue)},
  { 434, -1, sizeof(::substrait::Expression_Literal_Map)},
  { 440, -1, sizeof(::substrait::Expression_Literal_IntervalYearToMonth)},
  { 447, -1, sizeof(::substrait::Expression_Literal_IntervalDayToSecond)},
  { 455, -1, sizeof(::substrait::Expression_Literal_Struct)},
  { 461, -1, sizeof(::substrait::Expression_Literal_List)},
  { 467, -1, sizeof(::substrait::Expression_Literal_UserDefined)},
  { 475, -1, sizeof(::substrait::Expression_Literal)},
  { 510, -1, sizeof(::substrait::Expression_Nested_Map_KeyValue)},
  { 517, -1, sizeof(::substrait::Expression_Nested_Map)},
  { 523, -1, sizeof(::substrait::Expression_Nested_Struct)},
  { 529, -1, sizeof(::substrait::Expression_Nested_List)},
  { 535, -1, sizeof(::substrait::Expression_Nested)},
  { 546, -1, sizeof(::substrait::Expression_ScalarFunction)},
  { 556, -1, sizeof(::substrait::Expression_WindowFunction_Bound_Preceding)},
  { 562, -1, sizeof(::substrait::Expression_WindowFunction_Bound_Following)},
  { 568, -1, sizeof(::substrait::Expression_WindowFunction_Bound_CurrentRow)},
  { 573, -1, sizeof(::substrait::Expression_WindowFunction_Bound_Unbounded)},
  { 578, -1, sizeof(::substrait::Expression_WindowFunction_Bound)},
  { 588, -1, sizeof(::substrait::Expression_WindowFunction)},
  { 604, -1, sizeof(::substrait::Expression_IfThen_IfClause)},
  { 611, -1, sizeof(::substrait::Expression_IfThen)},
  { 618, -1, sizeof(::substrait::Expression_Cast)},
  { 626, -1, sizeof(::substrait::Expression_SwitchExpression_IfValue)},
  { 633, -1, sizeof(::substrait::Expression_SwitchExpression)},
  { 641, -1, sizeof(::substrait::Expression_SingularOrList)},
  { 648, -1, sizeof(::substrait::Expression_MultiOrList_Record)},
  { 654, -1, sizeof(::substrait::Expression_MultiOrList)},
  { 661, -1, sizeof(::substrait::Expression_EmbeddedFunction_PythonPickleFunction)},
  { 668, -1, sizeof(::substrait::Expression_EmbeddedFunction_WebAssemblyFunction)},
  { 675, -1, sizeof(::substrait::Expression_EmbeddedFunction)},
  { 685, -1, sizeof(::substrait::Expression_ReferenceSegment_MapKey)},
  { 692, -1, sizeof(::substrait::Expression_ReferenceSegment_StructField)},
  { 699, -1, sizeof(::substrait::Expression_ReferenceSegment_ListElement)},
  { 706, -1, sizeof(::substrait::Expression_ReferenceSegment)},
  { 715, -1, sizeof(::substrait::Expression_MaskExpression_Select)},
  { 724, -1, sizeof(::substrait::Expression_MaskExpression_StructSelect)},
  { 730, -1, sizeof(::substrait::Expression_MaskExpression_StructItem)},
  { 737, -1, sizeof(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement)},
  { 743, -1, sizeof(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice)},
  { 750, -1, sizeof(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem)},
  { 758, -1, sizeof(::substrait::Expression_MaskExpression_ListSelect)},
  { 765, -1, sizeof(::substrait::Expression_MaskExpression_MapSelect_MapKey)},
  { 771, -1, sizeof(::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression)},
  { 777, -1, sizeof(::substrait::Expression_MaskExpression_MapSelect)},
  { 786, -1, sizeof(::substrait::Expression_MaskExpression)},
  { 793, -1, sizeof(::substrait::Expression_FieldReference_RootReference)},
  { 798, -1, sizeof(::substrait::Expression_FieldReference_OuterReference)},
  { 804, -1, sizeof(::substrait::Expression_FieldReference)},
  { 816, -1, sizeof(::substrait::Expression_Subquery_Scalar)},
  { 822, -1, sizeof(::substrait::Expression_Subquery_InPredicate)},
  { 829, -1, sizeof(::substrait::Expression_Subquery_SetPredicate)},
  { 836, -1, sizeof(::substrait::Expression_Subquery_SetComparison)},
  { 845, -1, sizeof(::substrait::Expression_Subquery)},
  { 855, -1, sizeof(::substrait::Expression)},
  { 873, -1, sizeof(::substrait::SortField)},
  { 882, -1, sizeof(::substrait::AggregateFunction_ReferenceRel)},
  { 888, -1, sizeof(::substrait::AggregateFunction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelCommon_Direct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelCommon_Emit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelCommon_Hint_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelCommon_Hint_RuntimeConstraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelCommon_Hint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelCommon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_NamedTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_VirtualTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_ExtensionTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_LocalFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ReadRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ProjectRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_JoinRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_CrossRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_FetchRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_AggregateRel_Grouping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_AggregateRel_Measure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_AggregateRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_SortRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_FilterRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_SetRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExtensionSingleRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExtensionLeafRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExtensionMultiRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_ScatterFields_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_SingleBucketExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_MultiBucketExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_Broadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_RoundRobin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_ExchangeTarget_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExchangeRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_RelRoot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Rel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_NamedObjectWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_ExtensionObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_DdlRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_WriteRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_HashJoinRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_MergeJoinRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_FunctionArgument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_FunctionOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Enum_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Enum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_VarChar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_Decimal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_Map_KeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_Map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_IntervalYearToMonth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_IntervalDayToSecond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_Struct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_UserDefined_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Literal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Nested_Map_KeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Nested_Map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Nested_Struct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Nested_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Nested_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_ScalarFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_WindowFunction_Bound_Preceding_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_WindowFunction_Bound_Following_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_WindowFunction_Bound_CurrentRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_WindowFunction_Bound_Unbounded_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_WindowFunction_Bound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_WindowFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_IfThen_IfClause_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_IfThen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Cast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_SwitchExpression_IfValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_SwitchExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_SingularOrList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MultiOrList_Record_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MultiOrList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_EmbeddedFunction_PythonPickleFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_EmbeddedFunction_WebAssemblyFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_EmbeddedFunction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_ReferenceSegment_MapKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_ReferenceSegment_StructField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_ReferenceSegment_ListElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_ReferenceSegment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_Select_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_StructSelect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_StructItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_ListSelect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_MapSelect_MapKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_MapSelect_MapKeyExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_MapSelect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_MaskExpression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_FieldReference_RootReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_FieldReference_OuterReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_FieldReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Subquery_Scalar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Subquery_InPredicate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Subquery_SetPredicate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Subquery_SetComparison_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_Subquery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Expression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_SortField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_AggregateFunction_ReferenceRel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_AggregateFunction_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "substrait/algebra.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 108);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027substrait/algebra.proto\022\tsubstrait\032\031go"
      "ogle/protobuf/any.proto\032%substrait/exten"
      "sions/extensions.proto\032\024substrait/type.p"
      "roto\"\231\005\n\tRelCommon\022-\n\006direct\030\001 \001(\0132\033.sub"
      "strait.RelCommon.DirectH\000\022)\n\004emit\030\002 \001(\0132"
      "\031.substrait.RelCommon.EmitH\000\022\'\n\004hint\030\003 \001"
      "(\0132\031.substrait.RelCommon.Hint\022C\n\022advance"
      "d_extension\030\004 \001(\0132\'.substrait.extensions"
      ".AdvancedExtension\032\010\n\006Direct\032\036\n\004Emit\022\026\n\016"
      "output_mapping\030\001 \003(\005\032\214\003\n\004Hint\022.\n\005stats\030\001"
      " \001(\0132\037.substrait.RelCommon.Hint.Stats\022\?\n"
      "\nconstraint\030\002 \001(\0132+.substrait.RelCommon."
      "Hint.RuntimeConstraint\022C\n\022advanced_exten"
      "sion\030\n \001(\0132\'.substrait.extensions.Advanc"
      "edExtension\032t\n\005Stats\022\021\n\trow_count\030\001 \001(\001\022"
      "\023\n\013record_size\030\002 \001(\001\022C\n\022advanced_extensi"
      "on\030\n \001(\0132\'.substrait.extensions.Advanced"
      "Extension\032X\n\021RuntimeConstraint\022C\n\022advanc"
      "ed_extension\030\n \001(\0132\'.substrait.extension"
      "s.AdvancedExtensionB\013\n\temit_kind\"\211\014\n\007Rea"
      "dRel\022$\n\006common\030\001 \001(\0132\024.substrait.RelComm"
      "on\022+\n\013base_schema\030\002 \001(\0132\026.substrait.Name"
      "dStruct\022%\n\006filter\030\003 \001(\0132\025.substrait.Expr"
      "ession\0221\n\022best_effort_filter\030\013 \001(\0132\025.sub"
      "strait.Expression\0228\n\nprojection\030\004 \001(\0132$."
      "substrait.Expression.MaskExpression\022C\n\022a"
      "dvanced_extension\030\n \001(\0132\'.substrait.exte"
      "nsions.AdvancedExtension\0228\n\rvirtual_tabl"
      "e\030\005 \001(\0132\037.substrait.ReadRel.VirtualTable"
      "H\000\0224\n\013local_files\030\006 \001(\0132\035.substrait.Read"
      "Rel.LocalFilesH\000\0224\n\013named_table\030\007 \001(\0132\035."
      "substrait.ReadRel.NamedTableH\000\022<\n\017extens"
      "ion_table\030\010 \001(\0132!.substrait.ReadRel.Exte"
      "nsionTableH\000\032`\n\nNamedTable\022\r\n\005names\030\001 \003("
      "\t\022C\n\022advanced_extension\030\n \001(\0132\'.substrai"
      "t.extensions.AdvancedExtension\032D\n\014Virtua"
      "lTable\0224\n\006values\030\001 \003(\0132$.substrait.Expre"
      "ssion.Literal.Struct\0326\n\016ExtensionTable\022$"
      "\n\006detail\030\001 \001(\0132\024.google.protobuf.Any\032\200\006\n"
      "\nLocalFiles\0228\n\005items\030\001 \003(\0132).substrait.R"
      "eadRel.LocalFiles.FileOrFiles\022C\n\022advance"
      "d_extension\030\n \001(\0132\'.substrait.extensions"
      ".AdvancedExtension\032\362\004\n\013FileOrFiles\022\022\n\010ur"
      "i_path\030\001 \001(\tH\000\022\027\n\ruri_path_glob\030\002 \001(\tH\000\022"
      "\022\n\010uri_file\030\003 \001(\tH\000\022\024\n\nuri_folder\030\004 \001(\tH"
      "\000\022\027\n\017partition_index\030\006 \001(\004\022\r\n\005start\030\007 \001("
      "\004\022\016\n\006length\030\010 \001(\004\022O\n\007parquet\030\t \001(\0132<.sub"
      "strait.ReadRel.LocalFiles.FileOrFiles.Pa"
      "rquetReadOptionsH\001\022K\n\005arrow\030\n \001(\0132:.subs"
      "trait.ReadRel.LocalFiles.FileOrFiles.Arr"
      "owReadOptionsH\001\022G\n\003orc\030\013 \001(\01328.substrait"
      ".ReadRel.LocalFiles.FileOrFiles.OrcReadO"
      "ptionsH\001\022)\n\textension\030\014 \001(\0132\024.google.pro"
      "tobuf.AnyH\001\022I\n\004dwrf\030\r \001(\01329.substrait.Re"
      "adRel.LocalFiles.FileOrFiles.DwrfReadOpt"
      "ionsH\001\032\024\n\022ParquetReadOptions\032\022\n\020ArrowRea"
      "dOptions\032\020\n\016OrcReadOptions\032\021\n\017DwrfReadOp"
      "tionsB\013\n\tpath_typeB\r\n\013file_formatJ\004\010\005\020\006R"
      "\006formatB\013\n\tread_type\"\302\001\n\nProjectRel\022$\n\006c"
      "ommon\030\001 \001(\0132\024.substrait.RelCommon\022\035\n\005inp"
      "ut\030\002 \001(\0132\016.substrait.Rel\022*\n\013expressions\030"
      "\003 \003(\0132\025.substrait.Expression\022C\n\022advanced"
      "_extension\030\n \001(\0132\'.substrait.extensions."
      "AdvancedExtension\"\361\003\n\007JoinRel\022$\n\006common\030"
      "\001 \001(\0132\024.substrait.RelCommon\022\034\n\004left\030\002 \001("
      "\0132\016.substrait.Rel\022\035\n\005right\030\003 \001(\0132\016.subst"
      "rait.Rel\022)\n\nexpression\030\004 \001(\0132\025.substrait"
      ".Expression\022/\n\020post_join_filter\030\005 \001(\0132\025."
      "substrait.Expression\022)\n\004type\030\006 \001(\0162\033.sub"
      "strait.JoinRel.JoinType\022C\n\022advanced_exte"
      "nsion\030\n \001(\0132\'.substrait.extensions.Advan"
      "cedExtension\"\266\001\n\010JoinType\022\031\n\025JOIN_TYPE_U"
      "NSPECIFIED\020\000\022\023\n\017JOIN_TYPE_INNER\020\001\022\023\n\017JOI"
      "N_TYPE_OUTER\020\002\022\022\n\016JOIN_TYPE_LEFT\020\003\022\023\n\017JO"
      "IN_TYPE_RIGHT\020\004\022\022\n\016JOIN_TYPE_SEMI\020\005\022\022\n\016J"
      "OIN_TYPE_ANTI\020\006\022\024\n\020JOIN_TYPE_SINGLE\020\007\"\262\001"
      "\n\010CrossRel\022$\n\006common\030\001 \001(\0132\024.substrait.R"
      "elCommon\022\034\n\004left\030\002 \001(\0132\016.substrait.Rel\022\035"
      "\n\005right\030\003 \001(\0132\016.substrait.Rel\022C\n\022advance"
      "d_extension\030\n \001(\0132\'.substrait.extensions"
      ".AdvancedExtension\"\263\001\n\010FetchRel\022$\n\006commo"
      "n\030\001 \001(\0132\024.substrait.RelCommon\022\035\n\005input\030\002"
      " \001(\0132\016.substrait.Rel\022\016\n\006offset\030\003 \001(\003\022\r\n\005"
      "count\030\004 \001(\003\022C\n\022advanced_extension\030\n \001(\0132"
      "\'.substrait.extensions.AdvancedExtension"
      "\"\242\003\n\014AggregateRel\022$\n\006common\030\001 \001(\0132\024.subs"
      "trait.RelCommon\022\035\n\005input\030\002 \001(\0132\016.substra"
      "it.Rel\0223\n\tgroupings\030\003 \003(\0132 .substrait.Ag"
      "gregateRel.Grouping\0221\n\010measures\030\004 \003(\0132\037."
      "substrait.AggregateRel.Measure\022C\n\022advanc"
      "ed_extension\030\n \001(\0132\'.substrait.extension"
      "s.AdvancedExtension\032\?\n\010Grouping\0223\n\024group"
      "ing_expressions\030\001 \003(\0132\025.substrait.Expres"
      "sion\032_\n\007Measure\022-\n\007measure\030\001 \001(\0132\034.subst"
      "rait.AggregateFunction\022%\n\006filter\030\002 \001(\0132\025"
      ".substrait.Expression\"\270\001\n\007SortRel\022$\n\006com"
      "mon\030\001 \001(\0132\024.substrait.RelCommon\022\035\n\005input"
      "\030\002 \001(\0132\016.substrait.Rel\022#\n\005sorts\030\003 \003(\0132\024."
      "substrait.SortField\022C\n\022advanced_extensio"
      "n\030\n \001(\0132\'.substrait.extensions.AdvancedE"
      "xtension\"\277\001\n\tFilterRel\022$\n\006common\030\001 \001(\0132\024"
      ".substrait.RelCommon\022\035\n\005input\030\002 \001(\0132\016.su"
      "bstrait.Rel\022(\n\tcondition\030\003 \001(\0132\025.substra"
      "it.Expression\022C\n\022advanced_extension\030\n \001("
      "\0132\'.substrait.extensions.AdvancedExtensi"
      "on\"\203\003\n\006SetRel\022$\n\006common\030\001 \001(\0132\024.substrai"
      "t.RelCommon\022\036\n\006inputs\030\002 \003(\0132\016.substrait."
      "Rel\022#\n\002op\030\003 \001(\0162\027.substrait.SetRel.SetOp"
      "\022C\n\022advanced_extension\030\n \001(\0132\'.substrait"
      ".extensions.AdvancedExtension\"\310\001\n\005SetOp\022"
      "\026\n\022SET_OP_UNSPECIFIED\020\000\022\030\n\024SET_OP_MINUS_"
      "PRIMARY\020\001\022\031\n\025SET_OP_MINUS_MULTISET\020\002\022\037\n\033"
      "SET_OP_INTERSECTION_PRIMARY\020\003\022 \n\034SET_OP_"
      "INTERSECTION_MULTISET\020\004\022\031\n\025SET_OP_UNION_"
      "DISTINCT\020\005\022\024\n\020SET_OP_UNION_ALL\020\006\"\177\n\022Exte"
      "nsionSingleRel\022$\n\006common\030\001 \001(\0132\024.substra"
      "it.RelCommon\022\035\n\005input\030\002 \001(\0132\016.substrait."
      "Rel\022$\n\006detail\030\003 \001(\0132\024.google.protobuf.An"
      "y\"^\n\020ExtensionLeafRel\022$\n\006common\030\001 \001(\0132\024."
      "substrait.RelCommon\022$\n\006detail\030\002 \001(\0132\024.go"
      "ogle.protobuf.Any\"\177\n\021ExtensionMultiRel\022$"
      "\n\006common\030\001 \001(\0132\024.substrait.RelCommon\022\036\n\006"
      "inputs\030\002 \003(\0132\016.substrait.Rel\022$\n\006detail\030\003"
      " \001(\0132\024.google.protobuf.Any\"\303\007\n\013ExchangeR"
      "el\022$\n\006common\030\001 \001(\0132\024.substrait.RelCommon"
      "\022\035\n\005input\030\002 \001(\0132\016.substrait.Rel\022\027\n\017parti"
      "tion_count\030\003 \001(\005\0226\n\007targets\030\004 \003(\0132%.subs"
      "trait.ExchangeRel.ExchangeTarget\022A\n\021scat"
      "ter_by_fields\030\005 \001(\0132$.substrait.Exchange"
      "Rel.ScatterFieldsH\000\022F\n\rsingle_target\030\006 \001"
      "(\0132-.substrait.ExchangeRel.SingleBucketE"
      "xpressionH\000\022D\n\014multi_target\030\007 \001(\0132,.subs"
      "trait.ExchangeRel.MultiBucketExpressionH"
      "\000\0228\n\013round_robin\030\010 \001(\0132!.substrait.Excha"
      "ngeRel.RoundRobinH\000\0225\n\tbroadcast\030\t \001(\0132 "
      ".substrait.ExchangeRel.BroadcastH\000\022C\n\022ad"
      "vanced_extension\030\n \001(\0132\'.substrait.exten"
      "sions.AdvancedExtension\032E\n\rScatterFields"
      "\0224\n\006fields\030\001 \003(\0132$.substrait.Expression."
      "FieldReference\032C\n\026SingleBucketExpression"
      "\022)\n\nexpression\030\001 \001(\0132\025.substrait.Express"
      "ion\032`\n\025MultiBucketExpression\022)\n\nexpressi"
      "on\030\001 \001(\0132\025.substrait.Expression\022\034\n\024const"
      "rained_to_count\030\002 \001(\010\032\013\n\tBroadcast\032\033\n\nRo"
      "undRobin\022\r\n\005exact\030\001 \001(\010\032n\n\016ExchangeTarge"
      "t\022\024\n\014partition_id\030\001 \003(\005\022\r\n\003uri\030\002 \001(\tH\000\022("
      "\n\010extended\030\003 \001(\0132\024.google.protobuf.AnyH\000"
      "B\r\n\013target_typeB\017\n\rexchange_kind\"7\n\007RelR"
      "oot\022\035\n\005input\030\001 \001(\0132\016.substrait.Rel\022\r\n\005na"
      "mes\030\002 \003(\t\"\362\004\n\003Rel\022\"\n\004read\030\001 \001(\0132\022.substr"
      "ait.ReadRelH\000\022&\n\006filter\030\002 \001(\0132\024.substrai"
      "t.FilterRelH\000\022$\n\005fetch\030\003 \001(\0132\023.substrait"
      ".FetchRelH\000\022,\n\taggregate\030\004 \001(\0132\027.substra"
      "it.AggregateRelH\000\022\"\n\004sort\030\005 \001(\0132\022.substr"
      "ait.SortRelH\000\022\"\n\004join\030\006 \001(\0132\022.substrait."
      "JoinRelH\000\022(\n\007project\030\007 \001(\0132\025.substrait.P"
      "rojectRelH\000\022 \n\003set\030\010 \001(\0132\021.substrait.Set"
      "RelH\000\0229\n\020extension_single\030\t \001(\0132\035.substr"
      "ait.ExtensionSingleRelH\000\0227\n\017extension_mu"
      "lti\030\n \001(\0132\034.substrait.ExtensionMultiRelH"
      "\000\0225\n\016extension_leaf\030\013 \001(\0132\033.substrait.Ex"
      "tensionLeafRelH\000\022$\n\005cross\030\014 \001(\0132\023.substr"
      "ait.CrossRelH\000\022+\n\thash_join\030\r \001(\0132\026.subs"
      "trait.HashJoinRelH\000\022-\n\nmerge_join\030\016 \001(\0132"
      "\027.substrait.MergeJoinRelH\000B\n\n\010rel_type\"f"
      "\n\020NamedObjectWrite\022\r\n\005names\030\001 \003(\t\022C\n\022adv"
      "anced_extension\030\n \001(\0132\'.substrait.extens"
      "ions.AdvancedExtension\"7\n\017ExtensionObjec"
      "t\022$\n\006detail\030\001 \001(\0132\024.google.protobuf.Any\""
      "\316\004\n\006DdlRel\0223\n\014named_object\030\001 \001(\0132\033.subst"
      "rait.NamedObjectWriteH\000\0226\n\020extension_obj"
      "ect\030\002 \001(\0132\032.substrait.ExtensionObjectH\000\022"
      ",\n\014table_schema\030\003 \001(\0132\026.substrait.NamedS"
      "truct\022<\n\016table_defaults\030\004 \001(\0132$.substrai"
      "t.Expression.Literal.Struct\022+\n\006object\030\005 "
      "\001(\0162\033.substrait.DdlRel.DdlObject\022#\n\002op\030\006"
      " \001(\0162\027.substrait.DdlRel.DdlOp\022\'\n\017view_de"
      "finition\030\007 \001(\0132\016.substrait.Rel\"R\n\tDdlObj"
      "ect\022\032\n\026DDL_OBJECT_UNSPECIFIED\020\000\022\024\n\020DDL_O"
      "BJECT_TABLE\020\001\022\023\n\017DDL_OBJECT_VIEW\020\002\"\215\001\n\005D"
      "dlOp\022\026\n\022DDL_OP_UNSPECIFIED\020\000\022\021\n\rDDL_OP_C"
      "REATE\020\001\022\034\n\030DDL_OP_CREATE_OR_REPLACE\020\002\022\020\n"
      "\014DDL_OP_ALTER\020\003\022\017\n\013DDL_OP_DROP\020\004\022\030\n\024DDL_"
      "OP_DROP_IF_EXIST\020\005B\014\n\nwrite_type\"\207\004\n\010Wri"
      "teRel\0222\n\013named_table\030\001 \001(\0132\033.substrait.N"
      "amedObjectWriteH\000\0225\n\017extension_table\030\002 \001"
      "(\0132\032.substrait.ExtensionObjectH\000\022,\n\014tabl"
      "e_schema\030\003 \001(\0132\026.substrait.NamedStruct\022\'"
      "\n\002op\030\004 \001(\0162\033.substrait.WriteRel.WriteOp\022"
      "\035\n\005input\030\005 \001(\0132\016.substrait.Rel\022.\n\006output"
      "\030\006 \001(\0162\036.substrait.WriteRel.OutputMode\"u"
      "\n\007WriteOp\022\030\n\024WRITE_OP_UNSPECIFIED\020\000\022\023\n\017W"
      "RITE_OP_INSERT\020\001\022\023\n\017WRITE_OP_DELETE\020\002\022\023\n"
      "\017WRITE_OP_UPDATE\020\003\022\021\n\rWRITE_OP_CTAS\020\004\"e\n"
      "\nOutputMode\022\033\n\027OUTPUT_MODE_UNSPECIFIED\020\000"
      "\022\031\n\025OUTPUT_MODE_NO_OUTPUT\020\001\022\037\n\033OUTPUT_MO"
      "DE_MODIFIED_TUPLES\020\002B\014\n\nwrite_type\"\351\004\n\013H"
      "ashJoinRel\022$\n\006common\030\001 \001(\0132\024.substrait.R"
      "elCommon\022\034\n\004left\030\002 \001(\0132\016.substrait.Rel\022\035"
      "\n\005right\030\003 \001(\0132\016.substrait.Rel\0227\n\tleft_ke"
      "ys\030\004 \003(\0132$.substrait.Expression.FieldRef"
      "erence\0228\n\nright_keys\030\005 \003(\0132$.substrait.E"
      "xpression.FieldReference\022/\n\020post_join_fi"
      "lter\030\006 \001(\0132\025.substrait.Expression\022-\n\004typ"
      "e\030\007 \001(\0162\037.substrait.HashJoinRel.JoinType"
      "\022C\n\022advanced_extension\030\n \001(\0132\'.substrait"
      ".extensions.AdvancedExtension\"\336\001\n\010JoinTy"
      "pe\022\031\n\025JOIN_TYPE_UNSPECIFIED\020\000\022\023\n\017JOIN_TY"
      "PE_INNER\020\001\022\023\n\017JOIN_TYPE_OUTER\020\002\022\022\n\016JOIN_"
      "TYPE_LEFT\020\003\022\023\n\017JOIN_TYPE_RIGHT\020\004\022\027\n\023JOIN"
      "_TYPE_LEFT_SEMI\020\005\022\030\n\024JOIN_TYPE_RIGHT_SEM"
      "I\020\006\022\027\n\023JOIN_TYPE_LEFT_ANTI\020\007\022\030\n\024JOIN_TYP"
      "E_RIGHT_ANTI\020\010\"\353\004\n\014MergeJoinRel\022$\n\006commo"
      "n\030\001 \001(\0132\024.substrait.RelCommon\022\034\n\004left\030\002 "
      "\001(\0132\016.substrait.Rel\022\035\n\005right\030\003 \001(\0132\016.sub"
      "strait.Rel\0227\n\tleft_keys\030\004 \003(\0132$.substrai"
      "t.Expression.FieldReference\0228\n\nright_key"
      "s\030\005 \003(\0132$.substrait.Expression.FieldRefe"
      "rence\022/\n\020post_join_filter\030\006 \001(\0132\025.substr"
      "ait.Expression\022.\n\004type\030\007 \001(\0162 .substrait"
      ".MergeJoinRel.JoinType\022C\n\022advanced_exten"
      "sion\030\n \001(\0132\'.substrait.extensions.Advanc"
      "edExtension\"\336\001\n\010JoinType\022\031\n\025JOIN_TYPE_UN"
      "SPECIFIED\020\000\022\023\n\017JOIN_TYPE_INNER\020\001\022\023\n\017JOIN"
      "_TYPE_OUTER\020\002\022\022\n\016JOIN_TYPE_LEFT\020\003\022\023\n\017JOI"
      "N_TYPE_RIGHT\020\004\022\027\n\023JOIN_TYPE_LEFT_SEMI\020\005\022"
      "\030\n\024JOIN_TYPE_RIGHT_SEMI\020\006\022\027\n\023JOIN_TYPE_L"
      "EFT_ANTI\020\007\022\030\n\024JOIN_TYPE_RIGHT_ANTI\020\010\"w\n\020"
      "FunctionArgument\022\016\n\004enum\030\001 \001(\tH\000\022\037\n\004type"
      "\030\002 \001(\0132\017.substrait.TypeH\000\022&\n\005value\030\003 \001(\013"
      "2\025.substrait.ExpressionH\000B\n\n\010arg_type\"2\n"
      "\016FunctionOption\022\014\n\004name\030\001 \001(\t\022\022\n\nprefere"
      "nce\030\002 \003(\t\"\320E\n\nExpression\0220\n\007literal\030\001 \001("
      "\0132\035.substrait.Expression.LiteralH\000\0229\n\tse"
      "lection\030\002 \001(\0132$.substrait.Expression.Fie"
      "ldReferenceH\000\022\?\n\017scalar_function\030\003 \001(\0132$"
      ".substrait.Expression.ScalarFunctionH\000\022\?"
      "\n\017window_function\030\005 \001(\0132$.substrait.Expr"
      "ession.WindowFunctionH\000\022/\n\007if_then\030\006 \001(\013"
      "2\034.substrait.Expression.IfThenH\000\022C\n\021swit"
      "ch_expression\030\007 \001(\0132&.substrait.Expressi"
      "on.SwitchExpressionH\000\022@\n\020singular_or_lis"
      "t\030\010 \001(\0132$.substrait.Expression.SingularO"
      "rListH\000\022:\n\rmulti_or_list\030\t \001(\0132!.substra"
      "it.Expression.MultiOrListH\000\022*\n\004cast\030\013 \001("
      "\0132\032.substrait.Expression.CastH\000\0222\n\010subqu"
      "ery\030\014 \001(\0132\036.substrait.Expression.Subquer"
      "yH\000\022.\n\006nested\030\r \001(\0132\034.substrait.Expressi"
      "on.NestedH\000\022.\n\004enum\030\n \001(\0132\032.substrait.Ex"
      "pression.EnumB\002\030\001H\000\032r\n\004Enum\022\023\n\tspecified"
      "\030\001 \001(\tH\000\0227\n\013unspecified\030\002 \001(\0132 .substrai"
      "t.Expression.Enum.EmptyH\000\032\013\n\005Empty:\002\030\001:\002"
      "\030\001B\013\n\tenum_kind\032\347\014\n\007Literal\022\021\n\007boolean\030\001"
      " \001(\010H\000\022\014\n\002i8\030\002 \001(\005H\000\022\r\n\003i16\030\003 \001(\005H\000\022\r\n\003i"
      "32\030\005 \001(\005H\000\022\r\n\003i64\030\007 \001(\003H\000\022\016\n\004fp32\030\n \001(\002H"
      "\000\022\016\n\004fp64\030\013 \001(\001H\000\022\020\n\006string\030\014 \001(\tH\000\022\020\n\006b"
      "inary\030\r \001(\014H\000\022\023\n\ttimestamp\030\016 \001(\003H\000\022\016\n\004da"
      "te\030\020 \001(\005H\000\022\016\n\004time\030\021 \001(\003H\000\022S\n\026interval_y"
      "ear_to_month\030\023 \001(\01321.substrait.Expressio"
      "n.Literal.IntervalYearToMonthH\000\022S\n\026inter"
      "val_day_to_second\030\024 \001(\01321.substrait.Expr"
      "ession.Literal.IntervalDayToSecondH\000\022\024\n\n"
      "fixed_char\030\025 \001(\tH\000\0229\n\010var_char\030\026 \001(\0132%.s"
      "ubstrait.Expression.Literal.VarCharH\000\022\026\n"
      "\014fixed_binary\030\027 \001(\014H\000\0228\n\007decimal\030\030 \001(\0132%"
      ".substrait.Expression.Literal.DecimalH\000\022"
      "6\n\006struct\030\031 \001(\0132$.substrait.Expression.L"
      "iteral.StructH\000\0220\n\003map\030\032 \001(\0132!.substrait"
      ".Expression.Literal.MapH\000\022\026\n\014timestamp_t"
      "z\030\033 \001(\003H\000\022\016\n\004uuid\030\034 \001(\014H\000\022\037\n\004null\030\035 \001(\0132"
      "\017.substrait.TypeH\000\0222\n\004list\030\036 \001(\0132\".subst"
      "rait.Expression.Literal.ListH\000\022*\n\nempty_"
      "list\030\037 \001(\0132\024.substrait.Type.ListH\000\022(\n\tem"
      "pty_map\030  \001(\0132\023.substrait.Type.MapH\000\022A\n\014"
      "user_defined\030! \001(\0132).substrait.Expressio"
      "n.Literal.UserDefinedH\000\022\020\n\010nullable\0302 \001("
      "\010\022 \n\030type_variation_reference\0303 \001(\r\032(\n\007V"
      "arChar\022\r\n\005value\030\001 \001(\t\022\016\n\006length\030\002 \001(\r\032:\n"
      "\007Decimal\022\r\n\005value\030\001 \001(\014\022\021\n\tprecision\030\002 \001"
      "(\005\022\r\n\005scale\030\003 \001(\005\032\253\001\n\003Map\022>\n\nkey_values\030"
      "\001 \003(\0132*.substrait.Expression.Literal.Map"
      ".KeyValue\032d\n\010KeyValue\022*\n\003key\030\001 \001(\0132\035.sub"
      "strait.Expression.Literal\022,\n\005value\030\002 \001(\013"
      "2\035.substrait.Expression.Literal\0324\n\023Inter"
      "valYearToMonth\022\r\n\005years\030\001 \001(\005\022\016\n\006months\030"
      "\002 \001(\005\032J\n\023IntervalDayToSecond\022\014\n\004days\030\001 \001"
      "(\005\022\017\n\007seconds\030\002 \001(\005\022\024\n\014microseconds\030\003 \001("
      "\005\0327\n\006Struct\022-\n\006fields\030\001 \003(\0132\035.substrait."
      "Expression.Literal\0325\n\004List\022-\n\006values\030\001 \003"
      "(\0132\035.substrait.Expression.Literal\032~\n\013Use"
      "rDefined\022\026\n\016type_reference\030\001 \001(\r\0222\n\017type"
      "_parameters\030\003 \003(\0132\031.substrait.Type.Param"
      "eter\022#\n\005value\030\002 \001(\0132\024.google.protobuf.An"
      "yB\016\n\014literal_type\032\343\003\n\006Nested\022\020\n\010nullable"
      "\030\001 \001(\010\022 \n\030type_variation_reference\030\002 \001(\r"
      "\0225\n\006struct\030\003 \001(\0132#.substrait.Expression."
      "Nested.StructH\000\0221\n\004list\030\004 \001(\0132!.substrai"
      "t.Expression.Nested.ListH\000\022/\n\003map\030\005 \001(\0132"
      " .substrait.Expression.Nested.MapH\000\032\232\001\n\003"
      "Map\022=\n\nkey_values\030\001 \003(\0132).substrait.Expr"
      "ession.Nested.Map.KeyValue\032T\n\010KeyValue\022\""
      "\n\003key\030\001 \001(\0132\025.substrait.Expression\022$\n\005va"
      "lue\030\002 \001(\0132\025.substrait.Expression\032/\n\006Stru"
      "ct\022%\n\006fields\030\001 \003(\0132\025.substrait.Expressio"
      "n\032-\n\004List\022%\n\006values\030\001 \003(\0132\025.substrait.Ex"
      "pressionB\r\n\013nested_type\032\327\001\n\016ScalarFuncti"
      "on\022\032\n\022function_reference\030\001 \001(\r\022.\n\targume"
      "nts\030\004 \003(\0132\033.substrait.FunctionArgument\022*"
      "\n\007options\030\005 \003(\0132\031.substrait.FunctionOpti"
      "on\022$\n\013output_type\030\003 \001(\0132\017.substrait.Type"
      "\022\'\n\004args\030\002 \003(\0132\025.substrait.ExpressionB\002\030"
      "\001\032\263\007\n\016WindowFunction\022\032\n\022function_referen"
      "ce\030\001 \001(\r\022.\n\targuments\030\t \003(\0132\033.substrait."
      "FunctionArgument\022*\n\007options\030\013 \003(\0132\031.subs"
      "trait.FunctionOption\022$\n\013output_type\030\007 \001("
      "\0132\017.substrait.Type\022*\n\005phase\030\006 \001(\0162\033.subs"
      "trait.AggregationPhase\022#\n\005sorts\030\003 \003(\0132\024."
      "substrait.SortField\022F\n\ninvocation\030\n \001(\0162"
      "2.substrait.AggregateFunction.Aggregatio"
      "nInvocation\022)\n\npartitions\030\002 \003(\0132\025.substr"
      "ait.Expression\022\?\n\013lower_bound\030\005 \001(\0132*.su"
      "bstrait.Expression.WindowFunction.Bound\022"
      "\?\n\013upper_bound\030\004 \001(\0132*.substrait.Express"
      "ion.WindowFunction.Bound\022\'\n\004args\030\010 \003(\0132\025"
      ".substrait.ExpressionB\002\030\001\032\223\003\n\005Bound\022I\n\tp"
      "receding\030\001 \001(\01324.substrait.Expression.Wi"
      "ndowFunction.Bound.PrecedingH\000\022I\n\tfollow"
      "ing\030\002 \001(\01324.substrait.Expression.WindowF"
      "unction.Bound.FollowingH\000\022L\n\013current_row"
      "\030\003 \001(\01325.substrait.Expression.WindowFunc"
      "tion.Bound.CurrentRowH\000\022I\n\tunbounded\030\004 \001"
      "(\01324.substrait.Expression.WindowFunction"
      ".Bound.UnboundedH\000\032\033\n\tPreceding\022\016\n\006offse"
      "t\030\001 \001(\003\032\033\n\tFollowing\022\016\n\006offset\030\001 \001(\003\032\014\n\n"
      "CurrentRow\032\013\n\tUnboundedB\006\n\004kind\032\265\001\n\006IfTh"
      "en\0222\n\003ifs\030\001 \003(\0132%.substrait.Expression.I"
      "fThen.IfClause\022#\n\004else\030\002 \001(\0132\025.substrait"
      ".Expression\032R\n\010IfClause\022!\n\002if\030\001 \001(\0132\025.su"
      "bstrait.Expression\022#\n\004then\030\002 \001(\0132\025.subst"
      "rait.Expression\032\216\002\n\004Cast\022\035\n\004type\030\001 \001(\0132\017"
      ".substrait.Type\022$\n\005input\030\002 \001(\0132\025.substra"
      "it.Expression\022D\n\020failure_behavior\030\003 \001(\0162"
      "*.substrait.Expression.Cast.FailureBehav"
      "ior\"{\n\017FailureBehavior\022 \n\034FAILURE_BEHAVI"
      "OR_UNSPECIFIED\020\000\022 \n\034FAILURE_BEHAVIOR_RET"
      "URN_NULL\020\001\022$\n FAILURE_BEHAVIOR_THROW_EXC"
      "EPTION\020\002\032\365\001\n\020SwitchExpression\022$\n\005match\030\003"
      " \001(\0132\025.substrait.Expression\022;\n\003ifs\030\001 \003(\013"
      "2..substrait.Expression.SwitchExpression"
      ".IfValue\022#\n\004else\030\002 \001(\0132\025.substrait.Expre"
      "ssion\032Y\n\007IfValue\022)\n\002if\030\001 \001(\0132\035.substrait"
      ".Expression.Literal\022#\n\004then\030\002 \001(\0132\025.subs"
      "trait.Expression\032^\n\016SingularOrList\022$\n\005va"
      "lue\030\001 \001(\0132\025.substrait.Expression\022&\n\007opti"
      "ons\030\002 \003(\0132\025.substrait.Expression\032\237\001\n\013Mul"
      "tiOrList\022$\n\005value\030\001 \003(\0132\025.substrait.Expr"
      "ession\0229\n\007options\030\002 \003(\0132(.substrait.Expr"
      "ession.MultiOrList.Record\032/\n\006Record\022%\n\006f"
      "ields\030\001 \003(\0132\025.substrait.Expression\032\243\003\n\020E"
      "mbeddedFunction\022(\n\targuments\030\001 \003(\0132\025.sub"
      "strait.Expression\022$\n\013output_type\030\002 \001(\0132\017"
      ".substrait.Type\022]\n\026python_pickle_functio"
      "n\030\003 \001(\0132;.substrait.Expression.EmbeddedF"
      "unction.PythonPickleFunctionH\000\022[\n\025web_as"
      "sembly_function\030\004 \001(\0132:.substrait.Expres"
      "sion.EmbeddedFunction.WebAssemblyFunctio"
      "nH\000\032>\n\024PythonPickleFunction\022\020\n\010function\030"
      "\001 \001(\014\022\024\n\014prerequisite\030\002 \003(\t\032;\n\023WebAssemb"
      "lyFunction\022\016\n\006script\030\001 \001(\014\022\024\n\014prerequisi"
      "te\030\002 \003(\tB\006\n\004kind\032\232\004\n\020ReferenceSegment\022@\n"
      "\007map_key\030\001 \001(\0132-.substrait.Expression.Re"
      "ferenceSegment.MapKeyH\000\022J\n\014struct_field\030"
      "\002 \001(\01322.substrait.Expression.ReferenceSe"
      "gment.StructFieldH\000\022J\n\014list_element\030\003 \001("
      "\01322.substrait.Expression.ReferenceSegmen"
      "t.ListElementH\000\032o\n\006MapKey\022.\n\007map_key\030\001 \001"
      "(\0132\035.substrait.Expression.Literal\0225\n\005chi"
      "ld\030\002 \001(\0132&.substrait.Expression.Referenc"
      "eSegment\032S\n\013StructField\022\r\n\005field\030\001 \001(\005\0225"
      "\n\005child\030\002 \001(\0132&.substrait.Expression.Ref"
      "erenceSegment\032T\n\013ListElement\022\016\n\006offset\030\001"
      " \001(\005\0225\n\005child\030\002 \001(\0132&.substrait.Expressi"
      "on.ReferenceSegmentB\020\n\016reference_type\032\360\t"
      "\n\016MaskExpression\022A\n\006select\030\001 \001(\01321.subst"
      "rait.Expression.MaskExpression.StructSel"
      "ect\022 \n\030maintain_singular_struct\030\002 \001(\010\032\325\001"
      "\n\006Select\022C\n\006struct\030\001 \001(\01321.substrait.Exp"
      "ression.MaskExpression.StructSelectH\000\022\?\n"
      "\004list\030\002 \001(\0132/.substrait.Expression.MaskE"
      "xpression.ListSelectH\000\022=\n\003map\030\003 \001(\0132..su"
      "bstrait.Expression.MaskExpression.MapSel"
      "ectH\000B\006\n\004type\032U\n\014StructSelect\022E\n\014struct_"
      "items\030\001 \003(\0132/.substrait.Expression.MaskE"
      "xpression.StructItem\032W\n\nStructItem\022\r\n\005fi"
      "eld\030\001 \001(\005\022:\n\005child\030\002 \001(\0132+.substrait.Exp"
      "ression.MaskExpression.Select\032\264\003\n\nListSe"
      "lect\022Q\n\tselection\030\001 \003(\0132>.substrait.Expr"
      "ession.MaskExpression.ListSelect.ListSel"
      "ectItem\022:\n\005child\030\002 \001(\0132+.substrait.Expre"
      "ssion.MaskExpression.Select\032\226\002\n\016ListSele"
      "ctItem\022Z\n\004item\030\001 \001(\0132J.substrait.Express"
      "ion.MaskExpression.ListSelect.ListSelect"
      "Item.ListElementH\000\022Y\n\005slice\030\002 \001(\0132H.subs"
      "trait.Expression.MaskExpression.ListSele"
      "ct.ListSelectItem.ListSliceH\000\032\034\n\013ListEle"
      "ment\022\r\n\005field\030\001 \001(\005\032\'\n\tListSlice\022\r\n\005star"
      "t\030\001 \001(\005\022\013\n\003end\030\002 \001(\005B\006\n\004type\032\271\002\n\tMapSele"
      "ct\022D\n\003key\030\001 \001(\01325.substrait.Expression.M"
      "askExpression.MapSelect.MapKeyH\000\022U\n\nexpr"
      "ession\030\002 \001(\0132\?.substrait.Expression.Mask"
      "Expression.MapSelect.MapKeyExpressionH\000\022"
      ":\n\005child\030\003 \001(\0132+.substrait.Expression.Ma"
      "skExpression.Select\032\031\n\006MapKey\022\017\n\007map_key"
      "\030\001 \001(\t\032.\n\020MapKeyExpression\022\032\n\022map_key_ex"
      "pression\030\001 \001(\tB\010\n\006select\032\266\003\n\016FieldRefere"
      "nce\022B\n\020direct_reference\030\001 \001(\0132&.substrai"
      "t.Expression.ReferenceSegmentH\000\022@\n\020maske"
      "d_reference\030\002 \001(\0132$.substrait.Expression"
      ".MaskExpressionH\000\022+\n\nexpression\030\003 \001(\0132\025."
      "substrait.ExpressionH\001\022L\n\016root_reference"
      "\030\004 \001(\01322.substrait.Expression.FieldRefer"
      "ence.RootReferenceH\001\022N\n\017outer_reference\030"
      "\005 \001(\01323.substrait.Expression.FieldRefere"
      "nce.OuterReferenceH\001\032\017\n\rRootReference\032#\n"
      "\016OuterReference\022\021\n\tsteps_out\030\001 \001(\rB\020\n\016re"
      "ference_typeB\013\n\troot_type\032\214\t\n\010Subquery\0227"
      "\n\006scalar\030\001 \001(\0132%.substrait.Expression.Su"
      "bquery.ScalarH\000\022B\n\014in_predicate\030\002 \001(\0132*."
      "substrait.Expression.Subquery.InPredicat"
      "eH\000\022D\n\rset_predicate\030\003 \001(\0132+.substrait.E"
      "xpression.Subquery.SetPredicateH\000\022F\n\016set"
      "_comparison\030\004 \001(\0132,.substrait.Expression"
      ".Subquery.SetComparisonH\000\032\'\n\006Scalar\022\035\n\005i"
      "nput\030\001 \001(\0132\016.substrait.Rel\032W\n\013InPredicat"
      "e\022&\n\007needles\030\001 \003(\0132\025.substrait.Expressio"
      "n\022 \n\010haystack\030\002 \001(\0132\016.substrait.Rel\032\334\001\n\014"
      "SetPredicate\022M\n\014predicate_op\030\001 \001(\01627.sub"
      "strait.Expression.Subquery.SetPredicate."
      "PredicateOp\022\036\n\006tuples\030\002 \001(\0132\016.substrait."
      "Rel\"]\n\013PredicateOp\022\034\n\030PREDICATE_OP_UNSPE"
      "CIFIED\020\000\022\027\n\023PREDICATE_OP_EXISTS\020\001\022\027\n\023PRE"
      "DICATE_OP_UNIQUE\020\002\032\202\004\n\rSetComparison\022N\n\014"
      "reduction_op\030\001 \001(\01628.substrait.Expressio"
      "n.Subquery.SetComparison.ReductionOp\022P\n\r"
      "comparison_op\030\002 \001(\01629.substrait.Expressi"
      "on.Subquery.SetComparison.ComparisonOp\022#"
      "\n\004left\030\003 \001(\0132\025.substrait.Expression\022\035\n\005r"
      "ight\030\004 \001(\0132\016.substrait.Rel\"\261\001\n\014Compariso"
      "nOp\022\035\n\031COMPARISON_OP_UNSPECIFIED\020\000\022\024\n\020CO"
      "MPARISON_OP_EQ\020\001\022\024\n\020COMPARISON_OP_NE\020\002\022\024"
      "\n\020COMPARISON_OP_LT\020\003\022\024\n\020COMPARISON_OP_GT"
      "\020\004\022\024\n\020COMPARISON_OP_LE\020\005\022\024\n\020COMPARISON_O"
      "P_GE\020\006\"W\n\013ReductionOp\022\034\n\030REDUCTION_OP_UN"
      "SPECIFIED\020\000\022\024\n\020REDUCTION_OP_ANY\020\001\022\024\n\020RED"
      "UCTION_OP_ALL\020\002B\017\n\rsubquery_typeB\n\n\010rex_"
      "type\"\377\002\n\tSortField\022#\n\004expr\030\001 \001(\0132\025.subst"
      "rait.Expression\0227\n\tdirection\030\002 \001(\0162\".sub"
      "strait.SortField.SortDirectionH\000\022\'\n\035comp"
      "arison_function_reference\030\003 \001(\rH\000\"\335\001\n\rSo"
      "rtDirection\022\036\n\032SORT_DIRECTION_UNSPECIFIE"
      "D\020\000\022\"\n\036SORT_DIRECTION_ASC_NULLS_FIRST\020\001\022"
      "!\n\035SORT_DIRECTION_ASC_NULLS_LAST\020\002\022#\n\037SO"
      "RT_DIRECTION_DESC_NULLS_FIRST\020\003\022\"\n\036SORT_"
      "DIRECTION_DESC_NULLS_LAST\020\004\022\034\n\030SORT_DIRE"
      "CTION_CLUSTERED\020\005B\013\n\tsort_kind\"\243\004\n\021Aggre"
      "gateFunction\022\032\n\022function_reference\030\001 \001(\r"
      "\022.\n\targuments\030\007 \003(\0132\033.substrait.Function"
      "Argument\022*\n\007options\030\010 \003(\0132\031.substrait.Fu"
      "nctionOption\022$\n\013output_type\030\005 \001(\0132\017.subs"
      "trait.Type\022*\n\005phase\030\004 \001(\0162\033.substrait.Ag"
      "gregationPhase\022#\n\005sorts\030\003 \003(\0132\024.substrai"
      "t.SortField\022F\n\ninvocation\030\006 \001(\01622.substr"
      "ait.AggregateFunction.AggregationInvocat"
      "ion\022\'\n\004args\030\002 \003(\0132\025.substrait.Expression"
      "B\002\030\001\032\'\n\014ReferenceRel\022\027\n\017subtree_ordinal\030"
      "\001 \001(\005\"\204\001\n\025AggregationInvocation\022&\n\"AGGRE"
      "GATION_INVOCATION_UNSPECIFIED\020\000\022\036\n\032AGGRE"
      "GATION_INVOCATION_ALL\020\001\022#\n\037AGGREGATION_I"
      "NVOCATION_DISTINCT\020\002*\357\001\n\020AggregationPhas"
      "e\022!\n\035AGGREGATION_PHASE_UNSPECIFIED\020\000\022-\n)"
      "AGGREGATION_PHASE_INITIAL_TO_INTERMEDIAT"
      "E\020\001\0222\n.AGGREGATION_PHASE_INTERMEDIATE_TO"
      "_INTERMEDIATE\020\002\022\'\n#AGGREGATION_PHASE_INI"
      "TIAL_TO_RESULT\020\003\022,\n(AGGREGATION_PHASE_IN"
      "TERMEDIATE_TO_RESULT\020\004BW\n\022io.substrait.p"
      "rotoP\001Z*github.com/substrait-io/substrai"
      "t-go/proto\252\002\022Substrait.Protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 19479);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "substrait/algebra.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_substrait_2fextensions_2fextensions_2eproto::AddDescriptors();
  ::protobuf_substrait_2ftype_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_substrait_2falgebra_2eproto
namespace substrait {
const ::google::protobuf::EnumDescriptor* JoinRel_JoinType_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[0];
}
bool JoinRel_JoinType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const JoinRel_JoinType JoinRel::JOIN_TYPE_UNSPECIFIED;
const JoinRel_JoinType JoinRel::JOIN_TYPE_INNER;
const JoinRel_JoinType JoinRel::JOIN_TYPE_OUTER;
const JoinRel_JoinType JoinRel::JOIN_TYPE_LEFT;
const JoinRel_JoinType JoinRel::JOIN_TYPE_RIGHT;
const JoinRel_JoinType JoinRel::JOIN_TYPE_SEMI;
const JoinRel_JoinType JoinRel::JOIN_TYPE_ANTI;
const JoinRel_JoinType JoinRel::JOIN_TYPE_SINGLE;
const JoinRel_JoinType JoinRel::JoinType_MIN;
const JoinRel_JoinType JoinRel::JoinType_MAX;
const int JoinRel::JoinType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetRel_SetOp_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[1];
}
bool SetRel_SetOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetRel_SetOp SetRel::SET_OP_UNSPECIFIED;
const SetRel_SetOp SetRel::SET_OP_MINUS_PRIMARY;
const SetRel_SetOp SetRel::SET_OP_MINUS_MULTISET;
const SetRel_SetOp SetRel::SET_OP_INTERSECTION_PRIMARY;
const SetRel_SetOp SetRel::SET_OP_INTERSECTION_MULTISET;
const SetRel_SetOp SetRel::SET_OP_UNION_DISTINCT;
const SetRel_SetOp SetRel::SET_OP_UNION_ALL;
const SetRel_SetOp SetRel::SetOp_MIN;
const SetRel_SetOp SetRel::SetOp_MAX;
const int SetRel::SetOp_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DdlRel_DdlObject_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[2];
}
bool DdlRel_DdlObject_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DdlRel_DdlObject DdlRel::DDL_OBJECT_UNSPECIFIED;
const DdlRel_DdlObject DdlRel::DDL_OBJECT_TABLE;
const DdlRel_DdlObject DdlRel::DDL_OBJECT_VIEW;
const DdlRel_DdlObject DdlRel::DdlObject_MIN;
const DdlRel_DdlObject DdlRel::DdlObject_MAX;
const int DdlRel::DdlObject_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DdlRel_DdlOp_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[3];
}
bool DdlRel_DdlOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DdlRel_DdlOp DdlRel::DDL_OP_UNSPECIFIED;
const DdlRel_DdlOp DdlRel::DDL_OP_CREATE;
const DdlRel_DdlOp DdlRel::DDL_OP_CREATE_OR_REPLACE;
const DdlRel_DdlOp DdlRel::DDL_OP_ALTER;
const DdlRel_DdlOp DdlRel::DDL_OP_DROP;
const DdlRel_DdlOp DdlRel::DDL_OP_DROP_IF_EXIST;
const DdlRel_DdlOp DdlRel::DdlOp_MIN;
const DdlRel_DdlOp DdlRel::DdlOp_MAX;
const int DdlRel::DdlOp_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WriteRel_WriteOp_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[4];
}
bool WriteRel_WriteOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WriteRel_WriteOp WriteRel::WRITE_OP_UNSPECIFIED;
const WriteRel_WriteOp WriteRel::WRITE_OP_INSERT;
const WriteRel_WriteOp WriteRel::WRITE_OP_DELETE;
const WriteRel_WriteOp WriteRel::WRITE_OP_UPDATE;
const WriteRel_WriteOp WriteRel::WRITE_OP_CTAS;
const WriteRel_WriteOp WriteRel::WriteOp_MIN;
const WriteRel_WriteOp WriteRel::WriteOp_MAX;
const int WriteRel::WriteOp_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WriteRel_OutputMode_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[5];
}
bool WriteRel_OutputMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WriteRel_OutputMode WriteRel::OUTPUT_MODE_UNSPECIFIED;
const WriteRel_OutputMode WriteRel::OUTPUT_MODE_NO_OUTPUT;
const WriteRel_OutputMode WriteRel::OUTPUT_MODE_MODIFIED_TUPLES;
const WriteRel_OutputMode WriteRel::OutputMode_MIN;
const WriteRel_OutputMode WriteRel::OutputMode_MAX;
const int WriteRel::OutputMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HashJoinRel_JoinType_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[6];
}
bool HashJoinRel_JoinType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_UNSPECIFIED;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_INNER;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_OUTER;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_LEFT;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_RIGHT;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_LEFT_SEMI;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_RIGHT_SEMI;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_LEFT_ANTI;
const HashJoinRel_JoinType HashJoinRel::JOIN_TYPE_RIGHT_ANTI;
const HashJoinRel_JoinType HashJoinRel::JoinType_MIN;
const HashJoinRel_JoinType HashJoinRel::JoinType_MAX;
const int HashJoinRel::JoinType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MergeJoinRel_JoinType_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[7];
}
bool MergeJoinRel_JoinType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_UNSPECIFIED;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_INNER;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_OUTER;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_LEFT;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_RIGHT;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_LEFT_SEMI;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_RIGHT_SEMI;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_LEFT_ANTI;
const MergeJoinRel_JoinType MergeJoinRel::JOIN_TYPE_RIGHT_ANTI;
const MergeJoinRel_JoinType MergeJoinRel::JoinType_MIN;
const MergeJoinRel_JoinType MergeJoinRel::JoinType_MAX;
const int MergeJoinRel::JoinType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Expression_Cast_FailureBehavior_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[8];
}
bool Expression_Cast_FailureBehavior_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Expression_Cast_FailureBehavior Expression_Cast::FAILURE_BEHAVIOR_UNSPECIFIED;
const Expression_Cast_FailureBehavior Expression_Cast::FAILURE_BEHAVIOR_RETURN_NULL;
const Expression_Cast_FailureBehavior Expression_Cast::FAILURE_BEHAVIOR_THROW_EXCEPTION;
const Expression_Cast_FailureBehavior Expression_Cast::FailureBehavior_MIN;
const Expression_Cast_FailureBehavior Expression_Cast::FailureBehavior_MAX;
const int Expression_Cast::FailureBehavior_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Expression_Subquery_SetPredicate_PredicateOp_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[9];
}
bool Expression_Subquery_SetPredicate_PredicateOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Expression_Subquery_SetPredicate_PredicateOp Expression_Subquery_SetPredicate::PREDICATE_OP_UNSPECIFIED;
const Expression_Subquery_SetPredicate_PredicateOp Expression_Subquery_SetPredicate::PREDICATE_OP_EXISTS;
const Expression_Subquery_SetPredicate_PredicateOp Expression_Subquery_SetPredicate::PREDICATE_OP_UNIQUE;
const Expression_Subquery_SetPredicate_PredicateOp Expression_Subquery_SetPredicate::PredicateOp_MIN;
const Expression_Subquery_SetPredicate_PredicateOp Expression_Subquery_SetPredicate::PredicateOp_MAX;
const int Expression_Subquery_SetPredicate::PredicateOp_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Expression_Subquery_SetComparison_ComparisonOp_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[10];
}
bool Expression_Subquery_SetComparison_ComparisonOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_UNSPECIFIED;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_EQ;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_NE;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_LT;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_GT;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_LE;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::COMPARISON_OP_GE;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::ComparisonOp_MIN;
const Expression_Subquery_SetComparison_ComparisonOp Expression_Subquery_SetComparison::ComparisonOp_MAX;
const int Expression_Subquery_SetComparison::ComparisonOp_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Expression_Subquery_SetComparison_ReductionOp_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[11];
}
bool Expression_Subquery_SetComparison_ReductionOp_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Expression_Subquery_SetComparison_ReductionOp Expression_Subquery_SetComparison::REDUCTION_OP_UNSPECIFIED;
const Expression_Subquery_SetComparison_ReductionOp Expression_Subquery_SetComparison::REDUCTION_OP_ANY;
const Expression_Subquery_SetComparison_ReductionOp Expression_Subquery_SetComparison::REDUCTION_OP_ALL;
const Expression_Subquery_SetComparison_ReductionOp Expression_Subquery_SetComparison::ReductionOp_MIN;
const Expression_Subquery_SetComparison_ReductionOp Expression_Subquery_SetComparison::ReductionOp_MAX;
const int Expression_Subquery_SetComparison::ReductionOp_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SortField_SortDirection_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[12];
}
bool SortField_SortDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SortField_SortDirection SortField::SORT_DIRECTION_UNSPECIFIED;
const SortField_SortDirection SortField::SORT_DIRECTION_ASC_NULLS_FIRST;
const SortField_SortDirection SortField::SORT_DIRECTION_ASC_NULLS_LAST;
const SortField_SortDirection SortField::SORT_DIRECTION_DESC_NULLS_FIRST;
const SortField_SortDirection SortField::SORT_DIRECTION_DESC_NULLS_LAST;
const SortField_SortDirection SortField::SORT_DIRECTION_CLUSTERED;
const SortField_SortDirection SortField::SortDirection_MIN;
const SortField_SortDirection SortField::SortDirection_MAX;
const int SortField::SortDirection_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AggregateFunction_AggregationInvocation_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[13];
}
bool AggregateFunction_AggregationInvocation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AggregateFunction_AggregationInvocation AggregateFunction::AGGREGATION_INVOCATION_UNSPECIFIED;
const AggregateFunction_AggregationInvocation AggregateFunction::AGGREGATION_INVOCATION_ALL;
const AggregateFunction_AggregationInvocation AggregateFunction::AGGREGATION_INVOCATION_DISTINCT;
const AggregateFunction_AggregationInvocation AggregateFunction::AggregationInvocation_MIN;
const AggregateFunction_AggregationInvocation AggregateFunction::AggregationInvocation_MAX;
const int AggregateFunction::AggregationInvocation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AggregationPhase_descriptor() {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2falgebra_2eproto::file_level_enum_descriptors[14];
}
bool AggregationPhase_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RelCommon_Direct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelCommon_Direct::RelCommon_Direct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Direct.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelCommon.Direct)
}
RelCommon_Direct::RelCommon_Direct(const RelCommon_Direct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.RelCommon.Direct)
}

void RelCommon_Direct::SharedCtor() {
}

RelCommon_Direct::~RelCommon_Direct() {
  // @@protoc_insertion_point(destructor:substrait.RelCommon.Direct)
  SharedDtor();
}

void RelCommon_Direct::SharedDtor() {
}

void RelCommon_Direct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelCommon_Direct::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelCommon_Direct& RelCommon_Direct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Direct.base);
  return *internal_default_instance();
}


void RelCommon_Direct::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelCommon.Direct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RelCommon_Direct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelCommon.Direct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelCommon.Direct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelCommon.Direct)
  return false;
#undef DO_
}

void RelCommon_Direct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelCommon.Direct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelCommon.Direct)
}

::google::protobuf::uint8* RelCommon_Direct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelCommon.Direct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelCommon.Direct)
  return target;
}

size_t RelCommon_Direct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelCommon.Direct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelCommon_Direct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelCommon.Direct)
  GOOGLE_DCHECK_NE(&from, this);
  const RelCommon_Direct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelCommon_Direct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelCommon.Direct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelCommon.Direct)
    MergeFrom(*source);
  }
}

void RelCommon_Direct::MergeFrom(const RelCommon_Direct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelCommon.Direct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RelCommon_Direct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelCommon.Direct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelCommon_Direct::CopyFrom(const RelCommon_Direct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelCommon.Direct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelCommon_Direct::IsInitialized() const {
  return true;
}

void RelCommon_Direct::Swap(RelCommon_Direct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelCommon_Direct::InternalSwap(RelCommon_Direct* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelCommon_Direct::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelCommon_Emit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelCommon_Emit::kOutputMappingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelCommon_Emit::RelCommon_Emit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Emit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelCommon.Emit)
}
RelCommon_Emit::RelCommon_Emit(const RelCommon_Emit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      output_mapping_(from.output_mapping_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.RelCommon.Emit)
}

void RelCommon_Emit::SharedCtor() {
}

RelCommon_Emit::~RelCommon_Emit() {
  // @@protoc_insertion_point(destructor:substrait.RelCommon.Emit)
  SharedDtor();
}

void RelCommon_Emit::SharedDtor() {
}

void RelCommon_Emit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelCommon_Emit::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelCommon_Emit& RelCommon_Emit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Emit.base);
  return *internal_default_instance();
}


void RelCommon_Emit::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelCommon.Emit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  output_mapping_.Clear();
  _internal_metadata_.Clear();
}

bool RelCommon_Emit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelCommon.Emit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 output_mapping = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_output_mapping())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_output_mapping())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelCommon.Emit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelCommon.Emit)
  return false;
#undef DO_
}

void RelCommon_Emit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelCommon.Emit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 output_mapping = 1;
  if (this->output_mapping_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _output_mapping_cached_byte_size_));
  }
  for (int i = 0, n = this->output_mapping_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->output_mapping(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelCommon.Emit)
}

::google::protobuf::uint8* RelCommon_Emit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelCommon.Emit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 output_mapping = 1;
  if (this->output_mapping_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _output_mapping_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->output_mapping_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelCommon.Emit)
  return target;
}

size_t RelCommon_Emit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelCommon.Emit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 output_mapping = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->output_mapping_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _output_mapping_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelCommon_Emit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelCommon.Emit)
  GOOGLE_DCHECK_NE(&from, this);
  const RelCommon_Emit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelCommon_Emit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelCommon.Emit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelCommon.Emit)
    MergeFrom(*source);
  }
}

void RelCommon_Emit::MergeFrom(const RelCommon_Emit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelCommon.Emit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_mapping_.MergeFrom(from.output_mapping_);
}

void RelCommon_Emit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelCommon.Emit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelCommon_Emit::CopyFrom(const RelCommon_Emit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelCommon.Emit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelCommon_Emit::IsInitialized() const {
  return true;
}

void RelCommon_Emit::Swap(RelCommon_Emit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelCommon_Emit::InternalSwap(RelCommon_Emit* other) {
  using std::swap;
  output_mapping_.InternalSwap(&other->output_mapping_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelCommon_Emit::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelCommon_Hint_Stats::InitAsDefaultInstance() {
  ::substrait::_RelCommon_Hint_Stats_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void RelCommon_Hint_Stats::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelCommon_Hint_Stats::kRowCountFieldNumber;
const int RelCommon_Hint_Stats::kRecordSizeFieldNumber;
const int RelCommon_Hint_Stats::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelCommon_Hint_Stats::RelCommon_Hint_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint_Stats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelCommon.Hint.Stats)
}
RelCommon_Hint_Stats::RelCommon_Hint_Stats(const RelCommon_Hint_Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  ::memcpy(&row_count_, &from.row_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&record_size_) -
    reinterpret_cast<char*>(&row_count_)) + sizeof(record_size_));
  // @@protoc_insertion_point(copy_constructor:substrait.RelCommon.Hint.Stats)
}

void RelCommon_Hint_Stats::SharedCtor() {
  ::memset(&advanced_extension_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&record_size_) -
      reinterpret_cast<char*>(&advanced_extension_)) + sizeof(record_size_));
}

RelCommon_Hint_Stats::~RelCommon_Hint_Stats() {
  // @@protoc_insertion_point(destructor:substrait.RelCommon.Hint.Stats)
  SharedDtor();
}

void RelCommon_Hint_Stats::SharedDtor() {
  if (this != internal_default_instance()) delete advanced_extension_;
}

void RelCommon_Hint_Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelCommon_Hint_Stats::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelCommon_Hint_Stats& RelCommon_Hint_Stats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint_Stats.base);
  return *internal_default_instance();
}


void RelCommon_Hint_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelCommon.Hint.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  ::memset(&row_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&record_size_) -
      reinterpret_cast<char*>(&row_count_)) + sizeof(record_size_));
  _internal_metadata_.Clear();
}

bool RelCommon_Hint_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelCommon.Hint.Stats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double row_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &row_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double record_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &record_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelCommon.Hint.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelCommon.Hint.Stats)
  return false;
#undef DO_
}

void RelCommon_Hint_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelCommon.Hint.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double row_count = 1;
  if (this->row_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->row_count(), output);
  }

  // double record_size = 2;
  if (this->record_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->record_size(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelCommon.Hint.Stats)
}

::google::protobuf::uint8* RelCommon_Hint_Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelCommon.Hint.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double row_count = 1;
  if (this->row_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->row_count(), target);
  }

  // double record_size = 2;
  if (this->record_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->record_size(), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelCommon.Hint.Stats)
  return target;
}

size_t RelCommon_Hint_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelCommon.Hint.Stats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // double row_count = 1;
  if (this->row_count() != 0) {
    total_size += 1 + 8;
  }

  // double record_size = 2;
  if (this->record_size() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelCommon_Hint_Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelCommon.Hint.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const RelCommon_Hint_Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelCommon_Hint_Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelCommon.Hint.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelCommon.Hint.Stats)
    MergeFrom(*source);
  }
}

void RelCommon_Hint_Stats::MergeFrom(const RelCommon_Hint_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelCommon.Hint.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.row_count() != 0) {
    set_row_count(from.row_count());
  }
  if (from.record_size() != 0) {
    set_record_size(from.record_size());
  }
}

void RelCommon_Hint_Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelCommon.Hint.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelCommon_Hint_Stats::CopyFrom(const RelCommon_Hint_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelCommon.Hint.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelCommon_Hint_Stats::IsInitialized() const {
  return true;
}

void RelCommon_Hint_Stats::Swap(RelCommon_Hint_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelCommon_Hint_Stats::InternalSwap(RelCommon_Hint_Stats* other) {
  using std::swap;
  swap(advanced_extension_, other->advanced_extension_);
  swap(row_count_, other->row_count_);
  swap(record_size_, other->record_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelCommon_Hint_Stats::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelCommon_Hint_RuntimeConstraint::InitAsDefaultInstance() {
  ::substrait::_RelCommon_Hint_RuntimeConstraint_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void RelCommon_Hint_RuntimeConstraint::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelCommon_Hint_RuntimeConstraint::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelCommon_Hint_RuntimeConstraint::RelCommon_Hint_RuntimeConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint_RuntimeConstraint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelCommon.Hint.RuntimeConstraint)
}
RelCommon_Hint_RuntimeConstraint::RelCommon_Hint_RuntimeConstraint(const RelCommon_Hint_RuntimeConstraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.RelCommon.Hint.RuntimeConstraint)
}

void RelCommon_Hint_RuntimeConstraint::SharedCtor() {
  advanced_extension_ = NULL;
}

RelCommon_Hint_RuntimeConstraint::~RelCommon_Hint_RuntimeConstraint() {
  // @@protoc_insertion_point(destructor:substrait.RelCommon.Hint.RuntimeConstraint)
  SharedDtor();
}

void RelCommon_Hint_RuntimeConstraint::SharedDtor() {
  if (this != internal_default_instance()) delete advanced_extension_;
}

void RelCommon_Hint_RuntimeConstraint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelCommon_Hint_RuntimeConstraint::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelCommon_Hint_RuntimeConstraint& RelCommon_Hint_RuntimeConstraint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint_RuntimeConstraint.base);
  return *internal_default_instance();
}


void RelCommon_Hint_RuntimeConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelCommon.Hint.RuntimeConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool RelCommon_Hint_RuntimeConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelCommon.Hint.RuntimeConstraint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelCommon.Hint.RuntimeConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelCommon.Hint.RuntimeConstraint)
  return false;
#undef DO_
}

void RelCommon_Hint_RuntimeConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelCommon.Hint.RuntimeConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelCommon.Hint.RuntimeConstraint)
}

::google::protobuf::uint8* RelCommon_Hint_RuntimeConstraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelCommon.Hint.RuntimeConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelCommon.Hint.RuntimeConstraint)
  return target;
}

size_t RelCommon_Hint_RuntimeConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelCommon.Hint.RuntimeConstraint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelCommon_Hint_RuntimeConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelCommon.Hint.RuntimeConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  const RelCommon_Hint_RuntimeConstraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelCommon_Hint_RuntimeConstraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelCommon.Hint.RuntimeConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelCommon.Hint.RuntimeConstraint)
    MergeFrom(*source);
  }
}

void RelCommon_Hint_RuntimeConstraint::MergeFrom(const RelCommon_Hint_RuntimeConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelCommon.Hint.RuntimeConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void RelCommon_Hint_RuntimeConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelCommon.Hint.RuntimeConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelCommon_Hint_RuntimeConstraint::CopyFrom(const RelCommon_Hint_RuntimeConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelCommon.Hint.RuntimeConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelCommon_Hint_RuntimeConstraint::IsInitialized() const {
  return true;
}

void RelCommon_Hint_RuntimeConstraint::Swap(RelCommon_Hint_RuntimeConstraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelCommon_Hint_RuntimeConstraint::InternalSwap(RelCommon_Hint_RuntimeConstraint* other) {
  using std::swap;
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelCommon_Hint_RuntimeConstraint::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelCommon_Hint::InitAsDefaultInstance() {
  ::substrait::_RelCommon_Hint_default_instance_._instance.get_mutable()->stats_ = const_cast< ::substrait::RelCommon_Hint_Stats*>(
      ::substrait::RelCommon_Hint_Stats::internal_default_instance());
  ::substrait::_RelCommon_Hint_default_instance_._instance.get_mutable()->constraint_ = const_cast< ::substrait::RelCommon_Hint_RuntimeConstraint*>(
      ::substrait::RelCommon_Hint_RuntimeConstraint::internal_default_instance());
  ::substrait::_RelCommon_Hint_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void RelCommon_Hint::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelCommon_Hint::kStatsFieldNumber;
const int RelCommon_Hint::kConstraintFieldNumber;
const int RelCommon_Hint::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelCommon_Hint::RelCommon_Hint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelCommon.Hint)
}
RelCommon_Hint::RelCommon_Hint(const RelCommon_Hint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stats()) {
    stats_ = new ::substrait::RelCommon_Hint_Stats(*from.stats_);
  } else {
    stats_ = NULL;
  }
  if (from.has_constraint()) {
    constraint_ = new ::substrait::RelCommon_Hint_RuntimeConstraint(*from.constraint_);
  } else {
    constraint_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.RelCommon.Hint)
}

void RelCommon_Hint::SharedCtor() {
  ::memset(&stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&stats_)) + sizeof(advanced_extension_));
}

RelCommon_Hint::~RelCommon_Hint() {
  // @@protoc_insertion_point(destructor:substrait.RelCommon.Hint)
  SharedDtor();
}

void RelCommon_Hint::SharedDtor() {
  if (this != internal_default_instance()) delete stats_;
  if (this != internal_default_instance()) delete constraint_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void RelCommon_Hint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelCommon_Hint::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelCommon_Hint& RelCommon_Hint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon_Hint.base);
  return *internal_default_instance();
}


void RelCommon_Hint::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelCommon.Hint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && stats_ != NULL) {
    delete stats_;
  }
  stats_ = NULL;
  if (GetArenaNoVirtual() == NULL && constraint_ != NULL) {
    delete constraint_;
  }
  constraint_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool RelCommon_Hint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelCommon.Hint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon.Hint.Stats stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.RelCommon.Hint.RuntimeConstraint constraint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelCommon.Hint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelCommon.Hint)
  return false;
#undef DO_
}

void RelCommon_Hint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelCommon.Hint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon.Hint.Stats stats = 1;
  if (this->has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_stats(), output);
  }

  // .substrait.RelCommon.Hint.RuntimeConstraint constraint = 2;
  if (this->has_constraint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_constraint(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelCommon.Hint)
}

::google::protobuf::uint8* RelCommon_Hint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelCommon.Hint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon.Hint.Stats stats = 1;
  if (this->has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_stats(), deterministic, target);
  }

  // .substrait.RelCommon.Hint.RuntimeConstraint constraint = 2;
  if (this->has_constraint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_constraint(), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelCommon.Hint)
  return target;
}

size_t RelCommon_Hint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelCommon.Hint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon.Hint.Stats stats = 1;
  if (this->has_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stats_);
  }

  // .substrait.RelCommon.Hint.RuntimeConstraint constraint = 2;
  if (this->has_constraint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *constraint_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelCommon_Hint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelCommon.Hint)
  GOOGLE_DCHECK_NE(&from, this);
  const RelCommon_Hint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelCommon_Hint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelCommon.Hint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelCommon.Hint)
    MergeFrom(*source);
  }
}

void RelCommon_Hint::MergeFrom(const RelCommon_Hint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelCommon.Hint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stats()) {
    mutable_stats()->::substrait::RelCommon_Hint_Stats::MergeFrom(from.stats());
  }
  if (from.has_constraint()) {
    mutable_constraint()->::substrait::RelCommon_Hint_RuntimeConstraint::MergeFrom(from.constraint());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void RelCommon_Hint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelCommon.Hint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelCommon_Hint::CopyFrom(const RelCommon_Hint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelCommon.Hint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelCommon_Hint::IsInitialized() const {
  return true;
}

void RelCommon_Hint::Swap(RelCommon_Hint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelCommon_Hint::InternalSwap(RelCommon_Hint* other) {
  using std::swap;
  swap(stats_, other->stats_);
  swap(constraint_, other->constraint_);
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelCommon_Hint::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelCommon::InitAsDefaultInstance() {
  ::substrait::_RelCommon_default_instance_.direct_ = const_cast< ::substrait::RelCommon_Direct*>(
      ::substrait::RelCommon_Direct::internal_default_instance());
  ::substrait::_RelCommon_default_instance_.emit_ = const_cast< ::substrait::RelCommon_Emit*>(
      ::substrait::RelCommon_Emit::internal_default_instance());
  ::substrait::_RelCommon_default_instance_._instance.get_mutable()->hint_ = const_cast< ::substrait::RelCommon_Hint*>(
      ::substrait::RelCommon_Hint::internal_default_instance());
  ::substrait::_RelCommon_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void RelCommon::set_allocated_direct(::substrait::RelCommon_Direct* direct) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_emit_kind();
  if (direct) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direct = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direct, submessage_arena);
    }
    set_has_direct();
    emit_kind_.direct_ = direct;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.RelCommon.direct)
}
void RelCommon::set_allocated_emit(::substrait::RelCommon_Emit* emit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_emit_kind();
  if (emit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      emit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, emit, submessage_arena);
    }
    set_has_emit();
    emit_kind_.emit_ = emit;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.RelCommon.emit)
}
void RelCommon::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelCommon::kDirectFieldNumber;
const int RelCommon::kEmitFieldNumber;
const int RelCommon::kHintFieldNumber;
const int RelCommon::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelCommon::RelCommon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelCommon)
}
RelCommon::RelCommon(const RelCommon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hint()) {
    hint_ = new ::substrait::RelCommon_Hint(*from.hint_);
  } else {
    hint_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  clear_has_emit_kind();
  switch (from.emit_kind_case()) {
    case kDirect: {
      mutable_direct()->::substrait::RelCommon_Direct::MergeFrom(from.direct());
      break;
    }
    case kEmit: {
      mutable_emit()->::substrait::RelCommon_Emit::MergeFrom(from.emit());
      break;
    }
    case EMIT_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.RelCommon)
}

void RelCommon::SharedCtor() {
  ::memset(&hint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&hint_)) + sizeof(advanced_extension_));
  clear_has_emit_kind();
}

RelCommon::~RelCommon() {
  // @@protoc_insertion_point(destructor:substrait.RelCommon)
  SharedDtor();
}

void RelCommon::SharedDtor() {
  if (this != internal_default_instance()) delete hint_;
  if (this != internal_default_instance()) delete advanced_extension_;
  if (has_emit_kind()) {
    clear_emit_kind();
  }
}

void RelCommon::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelCommon::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelCommon& RelCommon::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelCommon.base);
  return *internal_default_instance();
}


void RelCommon::clear_emit_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.RelCommon)
  switch (emit_kind_case()) {
    case kDirect: {
      delete emit_kind_.direct_;
      break;
    }
    case kEmit: {
      delete emit_kind_.emit_;
      break;
    }
    case EMIT_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EMIT_KIND_NOT_SET;
}


void RelCommon::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hint_ != NULL) {
    delete hint_;
  }
  hint_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  clear_emit_kind();
  _internal_metadata_.Clear();
}

bool RelCommon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelCommon)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon.Direct direct = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.RelCommon.Emit emit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_emit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.RelCommon.Hint hint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelCommon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelCommon)
  return false;
#undef DO_
}

void RelCommon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon.Direct direct = 1;
  if (has_direct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_direct(), output);
  }

  // .substrait.RelCommon.Emit emit = 2;
  if (has_emit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_emit(), output);
  }

  // .substrait.RelCommon.Hint hint = 3;
  if (this->has_hint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_hint(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 4;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelCommon)
}

::google::protobuf::uint8* RelCommon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon.Direct direct = 1;
  if (has_direct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_direct(), deterministic, target);
  }

  // .substrait.RelCommon.Emit emit = 2;
  if (has_emit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_emit(), deterministic, target);
  }

  // .substrait.RelCommon.Hint hint = 3;
  if (this->has_hint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_hint(), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 4;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelCommon)
  return target;
}

size_t RelCommon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelCommon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon.Hint hint = 3;
  if (this->has_hint()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hint_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 4;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  switch (emit_kind_case()) {
    // .substrait.RelCommon.Direct direct = 1;
    case kDirect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *emit_kind_.direct_);
      break;
    }
    // .substrait.RelCommon.Emit emit = 2;
    case kEmit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *emit_kind_.emit_);
      break;
    }
    case EMIT_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelCommon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelCommon)
  GOOGLE_DCHECK_NE(&from, this);
  const RelCommon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelCommon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelCommon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelCommon)
    MergeFrom(*source);
  }
}

void RelCommon::MergeFrom(const RelCommon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelCommon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hint()) {
    mutable_hint()->::substrait::RelCommon_Hint::MergeFrom(from.hint());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  switch (from.emit_kind_case()) {
    case kDirect: {
      mutable_direct()->::substrait::RelCommon_Direct::MergeFrom(from.direct());
      break;
    }
    case kEmit: {
      mutable_emit()->::substrait::RelCommon_Emit::MergeFrom(from.emit());
      break;
    }
    case EMIT_KIND_NOT_SET: {
      break;
    }
  }
}

void RelCommon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelCommon::CopyFrom(const RelCommon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelCommon::IsInitialized() const {
  return true;
}

void RelCommon::Swap(RelCommon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelCommon::InternalSwap(RelCommon* other) {
  using std::swap;
  swap(hint_, other->hint_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(emit_kind_, other->emit_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelCommon::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_NamedTable::InitAsDefaultInstance() {
  ::substrait::_ReadRel_NamedTable_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void ReadRel_NamedTable::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRel_NamedTable::kNamesFieldNumber;
const int ReadRel_NamedTable::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_NamedTable::ReadRel_NamedTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_NamedTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.NamedTable)
}
ReadRel_NamedTable::ReadRel_NamedTable(const ReadRel_NamedTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.NamedTable)
}

void ReadRel_NamedTable::SharedCtor() {
  advanced_extension_ = NULL;
}

ReadRel_NamedTable::~ReadRel_NamedTable() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.NamedTable)
  SharedDtor();
}

void ReadRel_NamedTable::SharedDtor() {
  if (this != internal_default_instance()) delete advanced_extension_;
}

void ReadRel_NamedTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_NamedTable::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_NamedTable& ReadRel_NamedTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_NamedTable.base);
  return *internal_default_instance();
}


void ReadRel_NamedTable::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.NamedTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadRel_NamedTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.NamedTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.ReadRel.NamedTable.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.NamedTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.NamedTable)
  return false;
#undef DO_
}

void ReadRel_NamedTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.NamedTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.NamedTable.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.NamedTable)
}

::google::protobuf::uint8* ReadRel_NamedTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.NamedTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.NamedTable.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.NamedTable)
  return target;
}

size_t ReadRel_NamedTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.NamedTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_NamedTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.NamedTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_NamedTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_NamedTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.NamedTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.NamedTable)
    MergeFrom(*source);
  }
}

void ReadRel_NamedTable::MergeFrom(const ReadRel_NamedTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.NamedTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void ReadRel_NamedTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.NamedTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_NamedTable::CopyFrom(const ReadRel_NamedTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.NamedTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_NamedTable::IsInitialized() const {
  return true;
}

void ReadRel_NamedTable::Swap(ReadRel_NamedTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_NamedTable::InternalSwap(ReadRel_NamedTable* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_NamedTable::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_VirtualTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRel_VirtualTable::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_VirtualTable::ReadRel_VirtualTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_VirtualTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.VirtualTable)
}
ReadRel_VirtualTable::ReadRel_VirtualTable(const ReadRel_VirtualTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.VirtualTable)
}

void ReadRel_VirtualTable::SharedCtor() {
}

ReadRel_VirtualTable::~ReadRel_VirtualTable() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.VirtualTable)
  SharedDtor();
}

void ReadRel_VirtualTable::SharedDtor() {
}

void ReadRel_VirtualTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_VirtualTable::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_VirtualTable& ReadRel_VirtualTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_VirtualTable.base);
  return *internal_default_instance();
}


void ReadRel_VirtualTable::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.VirtualTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool ReadRel_VirtualTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.VirtualTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.Literal.Struct values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.VirtualTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.VirtualTable)
  return false;
#undef DO_
}

void ReadRel_VirtualTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.VirtualTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal.Struct values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.VirtualTable)
}

::google::protobuf::uint8* ReadRel_VirtualTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.VirtualTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal.Struct values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.VirtualTable)
  return target;
}

size_t ReadRel_VirtualTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.VirtualTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.Literal.Struct values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_VirtualTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.VirtualTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_VirtualTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_VirtualTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.VirtualTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.VirtualTable)
    MergeFrom(*source);
  }
}

void ReadRel_VirtualTable::MergeFrom(const ReadRel_VirtualTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.VirtualTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void ReadRel_VirtualTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.VirtualTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_VirtualTable::CopyFrom(const ReadRel_VirtualTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.VirtualTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_VirtualTable::IsInitialized() const {
  return true;
}

void ReadRel_VirtualTable::Swap(ReadRel_VirtualTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_VirtualTable::InternalSwap(ReadRel_VirtualTable* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_VirtualTable::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_ExtensionTable::InitAsDefaultInstance() {
  ::substrait::_ReadRel_ExtensionTable_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ReadRel_ExtensionTable::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRel_ExtensionTable::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_ExtensionTable::ReadRel_ExtensionTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_ExtensionTable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.ExtensionTable)
}
ReadRel_ExtensionTable::ReadRel_ExtensionTable(const ReadRel_ExtensionTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detail()) {
    detail_ = new ::google::protobuf::Any(*from.detail_);
  } else {
    detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.ExtensionTable)
}

void ReadRel_ExtensionTable::SharedCtor() {
  detail_ = NULL;
}

ReadRel_ExtensionTable::~ReadRel_ExtensionTable() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.ExtensionTable)
  SharedDtor();
}

void ReadRel_ExtensionTable::SharedDtor() {
  if (this != internal_default_instance()) delete detail_;
}

void ReadRel_ExtensionTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_ExtensionTable::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_ExtensionTable& ReadRel_ExtensionTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_ExtensionTable.base);
  return *internal_default_instance();
}


void ReadRel_ExtensionTable::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.ExtensionTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadRel_ExtensionTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.ExtensionTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any detail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.ExtensionTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.ExtensionTable)
  return false;
#undef DO_
}

void ReadRel_ExtensionTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.ExtensionTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any detail = 1;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.ExtensionTable)
}

::google::protobuf::uint8* ReadRel_ExtensionTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.ExtensionTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any detail = 1;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.ExtensionTable)
  return target;
}

size_t ReadRel_ExtensionTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.ExtensionTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any detail = 1;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_ExtensionTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.ExtensionTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_ExtensionTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_ExtensionTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.ExtensionTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.ExtensionTable)
    MergeFrom(*source);
  }
}

void ReadRel_ExtensionTable::MergeFrom(const ReadRel_ExtensionTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.ExtensionTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
}

void ReadRel_ExtensionTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.ExtensionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_ExtensionTable::CopyFrom(const ReadRel_ExtensionTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.ExtensionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_ExtensionTable::IsInitialized() const {
  return true;
}

void ReadRel_ExtensionTable::Swap(ReadRel_ExtensionTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_ExtensionTable::InternalSwap(ReadRel_ExtensionTable* other) {
  using std::swap;
  swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_ExtensionTable::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
}
ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions(const ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::SharedCtor() {
}

ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::~ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  SharedDtor();
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::SharedDtor() {
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions& ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions.base);
  return *internal_default_instance();
}


void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  return false;
#undef DO_
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
}

::google::protobuf::uint8* ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  return target;
}

size_t ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
    MergeFrom(*source);
  }
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::MergeFrom(const ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::CopyFrom(const ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::IsInitialized() const {
  return true;
}

void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::Swap(ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::InternalSwap(ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
}
ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions(const ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::SharedCtor() {
}

ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::~ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  SharedDtor();
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::SharedDtor() {
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions& ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions.base);
  return *internal_default_instance();
}


void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  return false;
#undef DO_
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
}

::google::protobuf::uint8* ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  return target;
}

size_t ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
    MergeFrom(*source);
  }
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::MergeFrom(const ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::CopyFrom(const ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::IsInitialized() const {
  return true;
}

void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::Swap(ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::InternalSwap(ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
}
ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions(const ReadRel_LocalFiles_FileOrFiles_OrcReadOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::SharedCtor() {
}

ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::~ReadRel_LocalFiles_FileOrFiles_OrcReadOptions() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  SharedDtor();
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::SharedDtor() {
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_LocalFiles_FileOrFiles_OrcReadOptions& ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions.base);
  return *internal_default_instance();
}


void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  return false;
#undef DO_
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
}

::google::protobuf::uint8* ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  return target;
}

size_t ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_LocalFiles_FileOrFiles_OrcReadOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_LocalFiles_FileOrFiles_OrcReadOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
    MergeFrom(*source);
  }
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::MergeFrom(const ReadRel_LocalFiles_FileOrFiles_OrcReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::CopyFrom(const ReadRel_LocalFiles_FileOrFiles_OrcReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::IsInitialized() const {
  return true;
}

void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::Swap(ReadRel_LocalFiles_FileOrFiles_OrcReadOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::InternalSwap(ReadRel_LocalFiles_FileOrFiles_OrcReadOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
}
ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions(const ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::SharedCtor() {
}

ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::~ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  SharedDtor();
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::SharedDtor() {
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions& ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions.base);
  return *internal_default_instance();
}


void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  return false;
#undef DO_
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
}

::google::protobuf::uint8* ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  return target;
}

size_t ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
    MergeFrom(*source);
  }
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::MergeFrom(const ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::CopyFrom(const ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::IsInitialized() const {
  return true;
}

void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::Swap(ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::InternalSwap(ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_LocalFiles_FileOrFiles::InitAsDefaultInstance() {
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.uri_path_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.uri_path_glob_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.uri_file_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.uri_folder_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.parquet_ = const_cast< ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions*>(
      ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::internal_default_instance());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.arrow_ = const_cast< ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions*>(
      ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::internal_default_instance());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.orc_ = const_cast< ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions*>(
      ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::internal_default_instance());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.extension_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  ::substrait::_ReadRel_LocalFiles_FileOrFiles_default_instance_.dwrf_ = const_cast< ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions*>(
      ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::internal_default_instance());
}
void ReadRel_LocalFiles_FileOrFiles::set_allocated_parquet(::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions* parquet) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_file_format();
  if (parquet) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parquet = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parquet, submessage_arena);
    }
    set_has_parquet();
    file_format_.parquet_ = parquet;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.LocalFiles.FileOrFiles.parquet)
}
void ReadRel_LocalFiles_FileOrFiles::set_allocated_arrow(::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions* arrow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_file_format();
  if (arrow) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arrow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arrow, submessage_arena);
    }
    set_has_arrow();
    file_format_.arrow_ = arrow;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.LocalFiles.FileOrFiles.arrow)
}
void ReadRel_LocalFiles_FileOrFiles::set_allocated_orc(::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions* orc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_file_format();
  if (orc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      orc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, orc, submessage_arena);
    }
    set_has_orc();
    file_format_.orc_ = orc;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.LocalFiles.FileOrFiles.orc)
}
void ReadRel_LocalFiles_FileOrFiles::set_allocated_extension(::google::protobuf::Any* extension) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_file_format();
  if (extension) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension, submessage_arena);
    }
    set_has_extension();
    file_format_.extension_ = extension;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.LocalFiles.FileOrFiles.extension)
}
void ReadRel_LocalFiles_FileOrFiles::clear_extension() {
  if (has_extension()) {
    delete file_format_.extension_;
    clear_has_file_format();
  }
}
void ReadRel_LocalFiles_FileOrFiles::set_allocated_dwrf(::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions* dwrf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_file_format();
  if (dwrf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dwrf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dwrf, submessage_arena);
    }
    set_has_dwrf();
    file_format_.dwrf_ = dwrf;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.LocalFiles.FileOrFiles.dwrf)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRel_LocalFiles_FileOrFiles::kUriPathFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kUriPathGlobFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kUriFileFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kUriFolderFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kPartitionIndexFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kStartFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kLengthFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kParquetFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kArrowFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kOrcFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kExtensionFieldNumber;
const int ReadRel_LocalFiles_FileOrFiles::kDwrfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_LocalFiles_FileOrFiles::ReadRel_LocalFiles_FileOrFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.LocalFiles.FileOrFiles)
}
ReadRel_LocalFiles_FileOrFiles::ReadRel_LocalFiles_FileOrFiles(const ReadRel_LocalFiles_FileOrFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&partition_index_, &from.partition_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&partition_index_)) + sizeof(length_));
  clear_has_path_type();
  switch (from.path_type_case()) {
    case kUriPath: {
      set_uri_path(from.uri_path());
      break;
    }
    case kUriPathGlob: {
      set_uri_path_glob(from.uri_path_glob());
      break;
    }
    case kUriFile: {
      set_uri_file(from.uri_file());
      break;
    }
    case kUriFolder: {
      set_uri_folder(from.uri_folder());
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  clear_has_file_format();
  switch (from.file_format_case()) {
    case kParquet: {
      mutable_parquet()->::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::MergeFrom(from.parquet());
      break;
    }
    case kArrow: {
      mutable_arrow()->::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::MergeFrom(from.arrow());
      break;
    }
    case kOrc: {
      mutable_orc()->::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::MergeFrom(from.orc());
      break;
    }
    case kExtension: {
      mutable_extension()->::google::protobuf::Any::MergeFrom(from.extension());
      break;
    }
    case kDwrf: {
      mutable_dwrf()->::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::MergeFrom(from.dwrf());
      break;
    }
    case FILE_FORMAT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.LocalFiles.FileOrFiles)
}

void ReadRel_LocalFiles_FileOrFiles::SharedCtor() {
  ::memset(&partition_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&partition_index_)) + sizeof(length_));
  clear_has_path_type();
  clear_has_file_format();
}

ReadRel_LocalFiles_FileOrFiles::~ReadRel_LocalFiles_FileOrFiles() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.LocalFiles.FileOrFiles)
  SharedDtor();
}

void ReadRel_LocalFiles_FileOrFiles::SharedDtor() {
  if (has_path_type()) {
    clear_path_type();
  }
  if (has_file_format()) {
    clear_file_format();
  }
}

void ReadRel_LocalFiles_FileOrFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_LocalFiles_FileOrFiles::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_LocalFiles_FileOrFiles& ReadRel_LocalFiles_FileOrFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles_FileOrFiles.base);
  return *internal_default_instance();
}


void ReadRel_LocalFiles_FileOrFiles::clear_path_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  switch (path_type_case()) {
    case kUriPath: {
      path_type_.uri_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kUriPathGlob: {
      path_type_.uri_path_glob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kUriFile: {
      path_type_.uri_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kUriFolder: {
      path_type_.uri_folder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATH_TYPE_NOT_SET;
}

void ReadRel_LocalFiles_FileOrFiles::clear_file_format() {
// @@protoc_insertion_point(one_of_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  switch (file_format_case()) {
    case kParquet: {
      delete file_format_.parquet_;
      break;
    }
    case kArrow: {
      delete file_format_.arrow_;
      break;
    }
    case kOrc: {
      delete file_format_.orc_;
      break;
    }
    case kExtension: {
      delete file_format_.extension_;
      break;
    }
    case kDwrf: {
      delete file_format_.dwrf_;
      break;
    }
    case FILE_FORMAT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = FILE_FORMAT_NOT_SET;
}


void ReadRel_LocalFiles_FileOrFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&partition_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&partition_index_)) + sizeof(length_));
  clear_path_type();
  clear_file_format();
  _internal_metadata_.Clear();
}

bool ReadRel_LocalFiles_FileOrFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri_path().data(), static_cast<int>(this->uri_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.ReadRel.LocalFiles.FileOrFiles.uri_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri_path_glob = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri_path_glob()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri_path_glob().data(), static_cast<int>(this->uri_path_glob().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.ReadRel.LocalFiles.FileOrFiles.uri_path_glob"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri_file().data(), static_cast<int>(this->uri_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.ReadRel.LocalFiles.FileOrFiles.uri_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri_folder = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri_folder()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri_folder().data(), static_cast<int>(this->uri_folder().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.ReadRel.LocalFiles.FileOrFiles.uri_folder"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 partition_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partition_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 length = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions parquet = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parquet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions arrow = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arrow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions orc = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any extension = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions dwrf = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dwrf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.LocalFiles.FileOrFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.LocalFiles.FileOrFiles)
  return false;
#undef DO_
}

void ReadRel_LocalFiles_FileOrFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri_path = 1;
  if (has_uri_path()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_path().data(), static_cast<int>(this->uri_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri_path(), output);
  }

  // string uri_path_glob = 2;
  if (has_uri_path_glob()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_path_glob().data(), static_cast<int>(this->uri_path_glob().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_path_glob");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri_path_glob(), output);
  }

  // string uri_file = 3;
  if (has_uri_file()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_file().data(), static_cast<int>(this->uri_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uri_file(), output);
  }

  // string uri_folder = 4;
  if (has_uri_folder()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_folder().data(), static_cast<int>(this->uri_folder().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_folder");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uri_folder(), output);
  }

  // uint64 partition_index = 6;
  if (this->partition_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->partition_index(), output);
  }

  // uint64 start = 7;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->start(), output);
  }

  // uint64 length = 8;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->length(), output);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions parquet = 9;
  if (has_parquet()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_parquet(), output);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions arrow = 10;
  if (has_arrow()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_arrow(), output);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions orc = 11;
  if (has_orc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_orc(), output);
  }

  // .google.protobuf.Any extension = 12;
  if (has_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_extension(), output);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions dwrf = 13;
  if (has_dwrf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_dwrf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.LocalFiles.FileOrFiles)
}

::google::protobuf::uint8* ReadRel_LocalFiles_FileOrFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri_path = 1;
  if (has_uri_path()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_path().data(), static_cast<int>(this->uri_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri_path(), target);
  }

  // string uri_path_glob = 2;
  if (has_uri_path_glob()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_path_glob().data(), static_cast<int>(this->uri_path_glob().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_path_glob");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri_path_glob(), target);
  }

  // string uri_file = 3;
  if (has_uri_file()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_file().data(), static_cast<int>(this->uri_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uri_file(), target);
  }

  // string uri_folder = 4;
  if (has_uri_folder()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_folder().data(), static_cast<int>(this->uri_folder().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ReadRel.LocalFiles.FileOrFiles.uri_folder");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uri_folder(), target);
  }

  // uint64 partition_index = 6;
  if (this->partition_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->partition_index(), target);
  }

  // uint64 start = 7;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->start(), target);
  }

  // uint64 length = 8;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->length(), target);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions parquet = 9;
  if (has_parquet()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_parquet(), deterministic, target);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions arrow = 10;
  if (has_arrow()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_arrow(), deterministic, target);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions orc = 11;
  if (has_orc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_orc(), deterministic, target);
  }

  // .google.protobuf.Any extension = 12;
  if (has_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_extension(), deterministic, target);
  }

  // .substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions dwrf = 13;
  if (has_dwrf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_dwrf(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.LocalFiles.FileOrFiles)
  return target;
}

size_t ReadRel_LocalFiles_FileOrFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 partition_index = 6;
  if (this->partition_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->partition_index());
  }

  // uint64 start = 7;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start());
  }

  // uint64 length = 8;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  switch (path_type_case()) {
    // string uri_path = 1;
    case kUriPath: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri_path());
      break;
    }
    // string uri_path_glob = 2;
    case kUriPathGlob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri_path_glob());
      break;
    }
    // string uri_file = 3;
    case kUriFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri_file());
      break;
    }
    // string uri_folder = 4;
    case kUriFolder: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri_folder());
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  switch (file_format_case()) {
    // .substrait.ReadRel.LocalFiles.FileOrFiles.ParquetReadOptions parquet = 9;
    case kParquet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_format_.parquet_);
      break;
    }
    // .substrait.ReadRel.LocalFiles.FileOrFiles.ArrowReadOptions arrow = 10;
    case kArrow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_format_.arrow_);
      break;
    }
    // .substrait.ReadRel.LocalFiles.FileOrFiles.OrcReadOptions orc = 11;
    case kOrc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_format_.orc_);
      break;
    }
    // .google.protobuf.Any extension = 12;
    case kExtension: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_format_.extension_);
      break;
    }
    // .substrait.ReadRel.LocalFiles.FileOrFiles.DwrfReadOptions dwrf = 13;
    case kDwrf: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_format_.dwrf_);
      break;
    }
    case FILE_FORMAT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_LocalFiles_FileOrFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_LocalFiles_FileOrFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_LocalFiles_FileOrFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.LocalFiles.FileOrFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.LocalFiles.FileOrFiles)
    MergeFrom(*source);
  }
}

void ReadRel_LocalFiles_FileOrFiles::MergeFrom(const ReadRel_LocalFiles_FileOrFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.partition_index() != 0) {
    set_partition_index(from.partition_index());
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  switch (from.path_type_case()) {
    case kUriPath: {
      set_uri_path(from.uri_path());
      break;
    }
    case kUriPathGlob: {
      set_uri_path_glob(from.uri_path_glob());
      break;
    }
    case kUriFile: {
      set_uri_file(from.uri_file());
      break;
    }
    case kUriFolder: {
      set_uri_folder(from.uri_folder());
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  switch (from.file_format_case()) {
    case kParquet: {
      mutable_parquet()->::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions::MergeFrom(from.parquet());
      break;
    }
    case kArrow: {
      mutable_arrow()->::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions::MergeFrom(from.arrow());
      break;
    }
    case kOrc: {
      mutable_orc()->::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions::MergeFrom(from.orc());
      break;
    }
    case kExtension: {
      mutable_extension()->::google::protobuf::Any::MergeFrom(from.extension());
      break;
    }
    case kDwrf: {
      mutable_dwrf()->::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions::MergeFrom(from.dwrf());
      break;
    }
    case FILE_FORMAT_NOT_SET: {
      break;
    }
  }
}

void ReadRel_LocalFiles_FileOrFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_LocalFiles_FileOrFiles::CopyFrom(const ReadRel_LocalFiles_FileOrFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.LocalFiles.FileOrFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_LocalFiles_FileOrFiles::IsInitialized() const {
  return true;
}

void ReadRel_LocalFiles_FileOrFiles::Swap(ReadRel_LocalFiles_FileOrFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_LocalFiles_FileOrFiles::InternalSwap(ReadRel_LocalFiles_FileOrFiles* other) {
  using std::swap;
  swap(partition_index_, other->partition_index_);
  swap(start_, other->start_);
  swap(length_, other->length_);
  swap(path_type_, other->path_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(file_format_, other->file_format_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_LocalFiles_FileOrFiles::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel_LocalFiles::InitAsDefaultInstance() {
  ::substrait::_ReadRel_LocalFiles_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void ReadRel_LocalFiles::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRel_LocalFiles::kItemsFieldNumber;
const int ReadRel_LocalFiles::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel_LocalFiles::ReadRel_LocalFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel.LocalFiles)
}
ReadRel_LocalFiles::ReadRel_LocalFiles(const ReadRel_LocalFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel.LocalFiles)
}

void ReadRel_LocalFiles::SharedCtor() {
  advanced_extension_ = NULL;
}

ReadRel_LocalFiles::~ReadRel_LocalFiles() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel.LocalFiles)
  SharedDtor();
}

void ReadRel_LocalFiles::SharedDtor() {
  if (this != internal_default_instance()) delete advanced_extension_;
}

void ReadRel_LocalFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel_LocalFiles::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel_LocalFiles& ReadRel_LocalFiles::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ReadRel_LocalFiles.base);
  return *internal_default_instance();
}


void ReadRel_LocalFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel.LocalFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadRel_LocalFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel.LocalFiles)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.ReadRel.LocalFiles.FileOrFiles items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel.LocalFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel.LocalFiles)
  return false;
#undef DO_
}

void ReadRel_LocalFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel.LocalFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.ReadRel.LocalFiles.FileOrFiles items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->items(static_cast<int>(i)),
      output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel.LocalFiles)
}

::google::protobuf::uint8* ReadRel_LocalFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel.LocalFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.ReadRel.LocalFiles.FileOrFiles items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel.LocalFiles)
  return target;
}

size_t ReadRel_LocalFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel.LocalFiles)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.ReadRel.LocalFiles.FileOrFiles items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel_LocalFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel.LocalFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel_LocalFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel_LocalFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel.LocalFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel.LocalFiles)
    MergeFrom(*source);
  }
}

void ReadRel_LocalFiles::MergeFrom(const ReadRel_LocalFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel.LocalFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void ReadRel_LocalFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel.LocalFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel_LocalFiles::CopyFrom(const ReadRel_LocalFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel.LocalFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel_LocalFiles::IsInitialized() const {
  return true;
}

void ReadRel_LocalFiles::Swap(ReadRel_LocalFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel_LocalFiles::InternalSwap(ReadRel_LocalFiles* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel_LocalFiles::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadRel::InitAsDefaultInstance() {
  ::substrait::_ReadRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_ReadRel_default_instance_._instance.get_mutable()->base_schema_ = const_cast< ::substrait::NamedStruct*>(
      ::substrait::NamedStruct::internal_default_instance());
  ::substrait::_ReadRel_default_instance_._instance.get_mutable()->filter_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_ReadRel_default_instance_._instance.get_mutable()->best_effort_filter_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_ReadRel_default_instance_._instance.get_mutable()->projection_ = const_cast< ::substrait::Expression_MaskExpression*>(
      ::substrait::Expression_MaskExpression::internal_default_instance());
  ::substrait::_ReadRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
  ::substrait::_ReadRel_default_instance_.virtual_table_ = const_cast< ::substrait::ReadRel_VirtualTable*>(
      ::substrait::ReadRel_VirtualTable::internal_default_instance());
  ::substrait::_ReadRel_default_instance_.local_files_ = const_cast< ::substrait::ReadRel_LocalFiles*>(
      ::substrait::ReadRel_LocalFiles::internal_default_instance());
  ::substrait::_ReadRel_default_instance_.named_table_ = const_cast< ::substrait::ReadRel_NamedTable*>(
      ::substrait::ReadRel_NamedTable::internal_default_instance());
  ::substrait::_ReadRel_default_instance_.extension_table_ = const_cast< ::substrait::ReadRel_ExtensionTable*>(
      ::substrait::ReadRel_ExtensionTable::internal_default_instance());
}
void ReadRel::clear_base_schema() {
  if (GetArenaNoVirtual() == NULL && base_schema_ != NULL) {
    delete base_schema_;
  }
  base_schema_ = NULL;
}
void ReadRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
void ReadRel::set_allocated_virtual_table(::substrait::ReadRel_VirtualTable* virtual_table) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_read_type();
  if (virtual_table) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      virtual_table = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, virtual_table, submessage_arena);
    }
    set_has_virtual_table();
    read_type_.virtual_table_ = virtual_table;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.virtual_table)
}
void ReadRel::set_allocated_local_files(::substrait::ReadRel_LocalFiles* local_files) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_read_type();
  if (local_files) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      local_files = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, local_files, submessage_arena);
    }
    set_has_local_files();
    read_type_.local_files_ = local_files;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.local_files)
}
void ReadRel::set_allocated_named_table(::substrait::ReadRel_NamedTable* named_table) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_read_type();
  if (named_table) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      named_table = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, named_table, submessage_arena);
    }
    set_has_named_table();
    read_type_.named_table_ = named_table;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.named_table)
}
void ReadRel::set_allocated_extension_table(::substrait::ReadRel_ExtensionTable* extension_table) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_read_type();
  if (extension_table) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension_table = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension_table, submessage_arena);
    }
    set_has_extension_table();
    read_type_.extension_table_ = extension_table;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ReadRel.extension_table)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRel::kCommonFieldNumber;
const int ReadRel::kBaseSchemaFieldNumber;
const int ReadRel::kFilterFieldNumber;
const int ReadRel::kBestEffortFilterFieldNumber;
const int ReadRel::kProjectionFieldNumber;
const int ReadRel::kAdvancedExtensionFieldNumber;
const int ReadRel::kVirtualTableFieldNumber;
const int ReadRel::kLocalFilesFieldNumber;
const int ReadRel::kNamedTableFieldNumber;
const int ReadRel::kExtensionTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRel::ReadRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ReadRel)
}
ReadRel::ReadRel(const ReadRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_base_schema()) {
    base_schema_ = new ::substrait::NamedStruct(*from.base_schema_);
  } else {
    base_schema_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::substrait::Expression(*from.filter_);
  } else {
    filter_ = NULL;
  }
  if (from.has_projection()) {
    projection_ = new ::substrait::Expression_MaskExpression(*from.projection_);
  } else {
    projection_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  if (from.has_best_effort_filter()) {
    best_effort_filter_ = new ::substrait::Expression(*from.best_effort_filter_);
  } else {
    best_effort_filter_ = NULL;
  }
  clear_has_read_type();
  switch (from.read_type_case()) {
    case kVirtualTable: {
      mutable_virtual_table()->::substrait::ReadRel_VirtualTable::MergeFrom(from.virtual_table());
      break;
    }
    case kLocalFiles: {
      mutable_local_files()->::substrait::ReadRel_LocalFiles::MergeFrom(from.local_files());
      break;
    }
    case kNamedTable: {
      mutable_named_table()->::substrait::ReadRel_NamedTable::MergeFrom(from.named_table());
      break;
    }
    case kExtensionTable: {
      mutable_extension_table()->::substrait::ReadRel_ExtensionTable::MergeFrom(from.extension_table());
      break;
    }
    case READ_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ReadRel)
}

void ReadRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_effort_filter_) -
      reinterpret_cast<char*>(&common_)) + sizeof(best_effort_filter_));
  clear_has_read_type();
}

ReadRel::~ReadRel() {
  // @@protoc_insertion_point(destructor:substrait.ReadRel)
  SharedDtor();
}

void ReadRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete base_schema_;
  if (this != internal_default_instance()) delete filter_;
  if (this != internal_default_instance()) delete projection_;
  if (this != internal_default_instance()) delete advanced_extension_;
  if (this != internal_default_instance()) delete best_effort_filter_;
  if (has_read_type()) {
    clear_read_type();
  }
}

void ReadRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadRel& ReadRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void ReadRel::clear_read_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.ReadRel)
  switch (read_type_case()) {
    case kVirtualTable: {
      delete read_type_.virtual_table_;
      break;
    }
    case kLocalFiles: {
      delete read_type_.local_files_;
      break;
    }
    case kNamedTable: {
      delete read_type_.named_table_;
      break;
    }
    case kExtensionTable: {
      delete read_type_.extension_table_;
      break;
    }
    case READ_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = READ_TYPE_NOT_SET;
}


void ReadRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ReadRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && base_schema_ != NULL) {
    delete base_schema_;
  }
  base_schema_ = NULL;
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && projection_ != NULL) {
    delete projection_;
  }
  projection_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  if (GetArenaNoVirtual() == NULL && best_effort_filter_ != NULL) {
    delete best_effort_filter_;
  }
  best_effort_filter_ = NULL;
  clear_read_type();
  _internal_metadata_.Clear();
}

bool ReadRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ReadRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.NamedStruct base_schema = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_base_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression filter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression projection = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_projection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.VirtualTable virtual_table = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_virtual_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.LocalFiles local_files = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.NamedTable named_table = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_named_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ReadRel.ExtensionTable extension_table = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression best_effort_filter = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_best_effort_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ReadRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ReadRel)
  return false;
#undef DO_
}

void ReadRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ReadRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.NamedStruct base_schema = 2;
  if (this->has_base_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_base_schema(), output);
  }

  // .substrait.Expression filter = 3;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_filter(), output);
  }

  // .substrait.Expression.MaskExpression projection = 4;
  if (this->has_projection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_projection(), output);
  }

  // .substrait.ReadRel.VirtualTable virtual_table = 5;
  if (has_virtual_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_virtual_table(), output);
  }

  // .substrait.ReadRel.LocalFiles local_files = 6;
  if (has_local_files()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_local_files(), output);
  }

  // .substrait.ReadRel.NamedTable named_table = 7;
  if (has_named_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_named_table(), output);
  }

  // .substrait.ReadRel.ExtensionTable extension_table = 8;
  if (has_extension_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_extension_table(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  // .substrait.Expression best_effort_filter = 11;
  if (this->has_best_effort_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_best_effort_filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ReadRel)
}

::google::protobuf::uint8* ReadRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ReadRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.NamedStruct base_schema = 2;
  if (this->has_base_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_base_schema(), deterministic, target);
  }

  // .substrait.Expression filter = 3;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_filter(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression projection = 4;
  if (this->has_projection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_projection(), deterministic, target);
  }

  // .substrait.ReadRel.VirtualTable virtual_table = 5;
  if (has_virtual_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_virtual_table(), deterministic, target);
  }

  // .substrait.ReadRel.LocalFiles local_files = 6;
  if (has_local_files()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_local_files(), deterministic, target);
  }

  // .substrait.ReadRel.NamedTable named_table = 7;
  if (has_named_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_named_table(), deterministic, target);
  }

  // .substrait.ReadRel.ExtensionTable extension_table = 8;
  if (has_extension_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_extension_table(), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  // .substrait.Expression best_effort_filter = 11;
  if (this->has_best_effort_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_best_effort_filter(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ReadRel)
  return target;
}

size_t ReadRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ReadRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.NamedStruct base_schema = 2;
  if (this->has_base_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *base_schema_);
  }

  // .substrait.Expression filter = 3;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *filter_);
  }

  // .substrait.Expression.MaskExpression projection = 4;
  if (this->has_projection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *projection_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // .substrait.Expression best_effort_filter = 11;
  if (this->has_best_effort_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *best_effort_filter_);
  }

  switch (read_type_case()) {
    // .substrait.ReadRel.VirtualTable virtual_table = 5;
    case kVirtualTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *read_type_.virtual_table_);
      break;
    }
    // .substrait.ReadRel.LocalFiles local_files = 6;
    case kLocalFiles: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *read_type_.local_files_);
      break;
    }
    // .substrait.ReadRel.NamedTable named_table = 7;
    case kNamedTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *read_type_.named_table_);
      break;
    }
    // .substrait.ReadRel.ExtensionTable extension_table = 8;
    case kExtensionTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *read_type_.extension_table_);
      break;
    }
    case READ_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ReadRel)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ReadRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ReadRel)
    MergeFrom(*source);
  }
}

void ReadRel::MergeFrom(const ReadRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ReadRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_base_schema()) {
    mutable_base_schema()->::substrait::NamedStruct::MergeFrom(from.base_schema());
  }
  if (from.has_filter()) {
    mutable_filter()->::substrait::Expression::MergeFrom(from.filter());
  }
  if (from.has_projection()) {
    mutable_projection()->::substrait::Expression_MaskExpression::MergeFrom(from.projection());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.has_best_effort_filter()) {
    mutable_best_effort_filter()->::substrait::Expression::MergeFrom(from.best_effort_filter());
  }
  switch (from.read_type_case()) {
    case kVirtualTable: {
      mutable_virtual_table()->::substrait::ReadRel_VirtualTable::MergeFrom(from.virtual_table());
      break;
    }
    case kLocalFiles: {
      mutable_local_files()->::substrait::ReadRel_LocalFiles::MergeFrom(from.local_files());
      break;
    }
    case kNamedTable: {
      mutable_named_table()->::substrait::ReadRel_NamedTable::MergeFrom(from.named_table());
      break;
    }
    case kExtensionTable: {
      mutable_extension_table()->::substrait::ReadRel_ExtensionTable::MergeFrom(from.extension_table());
      break;
    }
    case READ_TYPE_NOT_SET: {
      break;
    }
  }
}

void ReadRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ReadRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRel::CopyFrom(const ReadRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ReadRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadRel::IsInitialized() const {
  return true;
}

void ReadRel::Swap(ReadRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRel::InternalSwap(ReadRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(base_schema_, other->base_schema_);
  swap(filter_, other->filter_);
  swap(projection_, other->projection_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(best_effort_filter_, other->best_effort_filter_);
  swap(read_type_, other->read_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProjectRel::InitAsDefaultInstance() {
  ::substrait::_ProjectRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_ProjectRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_ProjectRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void ProjectRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectRel::kCommonFieldNumber;
const int ProjectRel::kInputFieldNumber;
const int ProjectRel::kExpressionsFieldNumber;
const int ProjectRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectRel::ProjectRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ProjectRel)
}
ProjectRel::ProjectRel(const ProjectRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      expressions_(from.expressions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ProjectRel)
}

void ProjectRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&common_)) + sizeof(advanced_extension_));
}

ProjectRel::~ProjectRel() {
  // @@protoc_insertion_point(destructor:substrait.ProjectRel)
  SharedDtor();
}

void ProjectRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void ProjectRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProjectRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjectRel& ProjectRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void ProjectRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ProjectRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expressions_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool ProjectRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ProjectRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression expressions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_expressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ProjectRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ProjectRel)
  return false;
#undef DO_
}

void ProjectRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ProjectRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // repeated .substrait.Expression expressions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->expressions(static_cast<int>(i)),
      output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ProjectRel)
}

::google::protobuf::uint8* ProjectRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ProjectRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // repeated .substrait.Expression expressions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expressions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->expressions(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ProjectRel)
  return target;
}

size_t ProjectRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ProjectRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression expressions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->expressions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->expressions(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProjectRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ProjectRel)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjectRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ProjectRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ProjectRel)
    MergeFrom(*source);
  }
}

void ProjectRel::MergeFrom(const ProjectRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ProjectRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expressions_.MergeFrom(from.expressions_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void ProjectRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ProjectRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectRel::CopyFrom(const ProjectRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ProjectRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectRel::IsInitialized() const {
  return true;
}

void ProjectRel::Swap(ProjectRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectRel::InternalSwap(ProjectRel* other) {
  using std::swap;
  CastToBase(&expressions_)->InternalSwap(CastToBase(&other->expressions_));
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProjectRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinRel::InitAsDefaultInstance() {
  ::substrait::_JoinRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_JoinRel_default_instance_._instance.get_mutable()->left_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_JoinRel_default_instance_._instance.get_mutable()->right_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_JoinRel_default_instance_._instance.get_mutable()->expression_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_JoinRel_default_instance_._instance.get_mutable()->post_join_filter_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_JoinRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void JoinRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRel::kCommonFieldNumber;
const int JoinRel::kLeftFieldNumber;
const int JoinRel::kRightFieldNumber;
const int JoinRel::kExpressionFieldNumber;
const int JoinRel::kPostJoinFilterFieldNumber;
const int JoinRel::kTypeFieldNumber;
const int JoinRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRel::JoinRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.JoinRel)
}
JoinRel::JoinRel(const JoinRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_left()) {
    left_ = new ::substrait::Rel(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::substrait::Rel(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_expression()) {
    expression_ = new ::substrait::Expression(*from.expression_);
  } else {
    expression_ = NULL;
  }
  if (from.has_post_join_filter()) {
    post_join_filter_ = new ::substrait::Expression(*from.post_join_filter_);
  } else {
    post_join_filter_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:substrait.JoinRel)
}

void JoinRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&common_)) + sizeof(type_));
}

JoinRel::~JoinRel() {
  // @@protoc_insertion_point(destructor:substrait.JoinRel)
  SharedDtor();
}

void JoinRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete expression_;
  if (this != internal_default_instance()) delete post_join_filter_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void JoinRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JoinRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRel& JoinRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void JoinRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.JoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  if (GetArenaNoVirtual() == NULL && expression_ != NULL) {
    delete expression_;
  }
  expression_ = NULL;
  if (GetArenaNoVirtual() == NULL && post_join_filter_ != NULL) {
    delete post_join_filter_;
  }
  post_join_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool JoinRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.JoinRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression expression = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression post_join_filter = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_post_join_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.JoinRel.JoinType type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::substrait::JoinRel_JoinType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.JoinRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.JoinRel)
  return false;
#undef DO_
}

void JoinRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.JoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_left(), output);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right(), output);
  }

  // .substrait.Expression expression = 4;
  if (this->has_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_expression(), output);
  }

  // .substrait.Expression post_join_filter = 5;
  if (this->has_post_join_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_post_join_filter(), output);
  }

  // .substrait.JoinRel.JoinType type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.JoinRel)
}

::google::protobuf::uint8* JoinRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.JoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_left(), deterministic, target);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right(), deterministic, target);
  }

  // .substrait.Expression expression = 4;
  if (this->has_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_expression(), deterministic, target);
  }

  // .substrait.Expression post_join_filter = 5;
  if (this->has_post_join_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_post_join_filter(), deterministic, target);
  }

  // .substrait.JoinRel.JoinType type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.JoinRel)
  return target;
}

size_t JoinRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.JoinRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .substrait.Expression expression = 4;
  if (this->has_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expression_);
  }

  // .substrait.Expression post_join_filter = 5;
  if (this->has_post_join_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *post_join_filter_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // .substrait.JoinRel.JoinType type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.JoinRel)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.JoinRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.JoinRel)
    MergeFrom(*source);
  }
}

void JoinRel::MergeFrom(const JoinRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.JoinRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_left()) {
    mutable_left()->::substrait::Rel::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::substrait::Rel::MergeFrom(from.right());
  }
  if (from.has_expression()) {
    mutable_expression()->::substrait::Expression::MergeFrom(from.expression());
  }
  if (from.has_post_join_filter()) {
    mutable_post_join_filter()->::substrait::Expression::MergeFrom(from.post_join_filter());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void JoinRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.JoinRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRel::CopyFrom(const JoinRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.JoinRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRel::IsInitialized() const {
  return true;
}

void JoinRel::Swap(JoinRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRel::InternalSwap(JoinRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(expression_, other->expression_);
  swap(post_join_filter_, other->post_join_filter_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JoinRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CrossRel::InitAsDefaultInstance() {
  ::substrait::_CrossRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_CrossRel_default_instance_._instance.get_mutable()->left_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_CrossRel_default_instance_._instance.get_mutable()->right_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_CrossRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void CrossRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CrossRel::kCommonFieldNumber;
const int CrossRel::kLeftFieldNumber;
const int CrossRel::kRightFieldNumber;
const int CrossRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CrossRel::CrossRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.CrossRel)
}
CrossRel::CrossRel(const CrossRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_left()) {
    left_ = new ::substrait::Rel(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::substrait::Rel(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.CrossRel)
}

void CrossRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&common_)) + sizeof(advanced_extension_));
}

CrossRel::~CrossRel() {
  // @@protoc_insertion_point(destructor:substrait.CrossRel)
  SharedDtor();
}

void CrossRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void CrossRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CrossRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CrossRel& CrossRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void CrossRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.CrossRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool CrossRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.CrossRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.CrossRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.CrossRel)
  return false;
#undef DO_
}

void CrossRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.CrossRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_left(), output);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.CrossRel)
}

::google::protobuf::uint8* CrossRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.CrossRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_left(), deterministic, target);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right(), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.CrossRel)
  return target;
}

size_t CrossRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.CrossRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CrossRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.CrossRel)
  GOOGLE_DCHECK_NE(&from, this);
  const CrossRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CrossRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.CrossRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.CrossRel)
    MergeFrom(*source);
  }
}

void CrossRel::MergeFrom(const CrossRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.CrossRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_left()) {
    mutable_left()->::substrait::Rel::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::substrait::Rel::MergeFrom(from.right());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void CrossRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.CrossRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrossRel::CopyFrom(const CrossRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.CrossRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrossRel::IsInitialized() const {
  return true;
}

void CrossRel::Swap(CrossRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrossRel::InternalSwap(CrossRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CrossRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FetchRel::InitAsDefaultInstance() {
  ::substrait::_FetchRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_FetchRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_FetchRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void FetchRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FetchRel::kCommonFieldNumber;
const int FetchRel::kInputFieldNumber;
const int FetchRel::kOffsetFieldNumber;
const int FetchRel::kCountFieldNumber;
const int FetchRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FetchRel::FetchRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.FetchRel)
}
FetchRel::FetchRel(const FetchRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:substrait.FetchRel)
}

void FetchRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&common_)) + sizeof(count_));
}

FetchRel::~FetchRel() {
  // @@protoc_insertion_point(destructor:substrait.FetchRel)
  SharedDtor();
}

void FetchRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void FetchRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FetchRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FetchRel& FetchRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void FetchRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FetchRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool FetchRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.FetchRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.FetchRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.FetchRel)
  return false;
#undef DO_
}

void FetchRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.FetchRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // int64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->offset(), output);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->count(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.FetchRel)
}

::google::protobuf::uint8* FetchRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FetchRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // int64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->offset(), target);
  }

  // int64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->count(), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FetchRel)
  return target;
}

size_t FetchRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FetchRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // int64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  // int64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.FetchRel)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FetchRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.FetchRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.FetchRel)
    MergeFrom(*source);
  }
}

void FetchRel::MergeFrom(const FetchRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.FetchRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void FetchRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.FetchRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchRel::CopyFrom(const FetchRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FetchRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchRel::IsInitialized() const {
  return true;
}

void FetchRel::Swap(FetchRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FetchRel::InternalSwap(FetchRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FetchRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggregateRel_Grouping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggregateRel_Grouping::kGroupingExpressionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregateRel_Grouping::AggregateRel_Grouping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.AggregateRel.Grouping)
}
AggregateRel_Grouping::AggregateRel_Grouping(const AggregateRel_Grouping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grouping_expressions_(from.grouping_expressions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.AggregateRel.Grouping)
}

void AggregateRel_Grouping::SharedCtor() {
}

AggregateRel_Grouping::~AggregateRel_Grouping() {
  // @@protoc_insertion_point(destructor:substrait.AggregateRel.Grouping)
  SharedDtor();
}

void AggregateRel_Grouping::SharedDtor() {
}

void AggregateRel_Grouping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggregateRel_Grouping::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregateRel_Grouping& AggregateRel_Grouping::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void AggregateRel_Grouping::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.AggregateRel.Grouping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grouping_expressions_.Clear();
  _internal_metadata_.Clear();
}

bool AggregateRel_Grouping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.AggregateRel.Grouping)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression grouping_expressions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_grouping_expressions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.AggregateRel.Grouping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.AggregateRel.Grouping)
  return false;
#undef DO_
}

void AggregateRel_Grouping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.AggregateRel.Grouping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression grouping_expressions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grouping_expressions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->grouping_expressions(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.AggregateRel.Grouping)
}

::google::protobuf::uint8* AggregateRel_Grouping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.AggregateRel.Grouping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression grouping_expressions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grouping_expressions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->grouping_expressions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.AggregateRel.Grouping)
  return target;
}

size_t AggregateRel_Grouping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.AggregateRel.Grouping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression grouping_expressions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->grouping_expressions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->grouping_expressions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregateRel_Grouping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.AggregateRel.Grouping)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregateRel_Grouping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregateRel_Grouping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.AggregateRel.Grouping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.AggregateRel.Grouping)
    MergeFrom(*source);
  }
}

void AggregateRel_Grouping::MergeFrom(const AggregateRel_Grouping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.AggregateRel.Grouping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grouping_expressions_.MergeFrom(from.grouping_expressions_);
}

void AggregateRel_Grouping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.AggregateRel.Grouping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregateRel_Grouping::CopyFrom(const AggregateRel_Grouping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.AggregateRel.Grouping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregateRel_Grouping::IsInitialized() const {
  return true;
}

void AggregateRel_Grouping::Swap(AggregateRel_Grouping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregateRel_Grouping::InternalSwap(AggregateRel_Grouping* other) {
  using std::swap;
  CastToBase(&grouping_expressions_)->InternalSwap(CastToBase(&other->grouping_expressions_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggregateRel_Grouping::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggregateRel_Measure::InitAsDefaultInstance() {
  ::substrait::_AggregateRel_Measure_default_instance_._instance.get_mutable()->measure_ = const_cast< ::substrait::AggregateFunction*>(
      ::substrait::AggregateFunction::internal_default_instance());
  ::substrait::_AggregateRel_Measure_default_instance_._instance.get_mutable()->filter_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggregateRel_Measure::kMeasureFieldNumber;
const int AggregateRel_Measure::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregateRel_Measure::AggregateRel_Measure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.AggregateRel.Measure)
}
AggregateRel_Measure::AggregateRel_Measure(const AggregateRel_Measure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_measure()) {
    measure_ = new ::substrait::AggregateFunction(*from.measure_);
  } else {
    measure_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::substrait::Expression(*from.filter_);
  } else {
    filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.AggregateRel.Measure)
}

void AggregateRel_Measure::SharedCtor() {
  ::memset(&measure_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&filter_) -
      reinterpret_cast<char*>(&measure_)) + sizeof(filter_));
}

AggregateRel_Measure::~AggregateRel_Measure() {
  // @@protoc_insertion_point(destructor:substrait.AggregateRel.Measure)
  SharedDtor();
}

void AggregateRel_Measure::SharedDtor() {
  if (this != internal_default_instance()) delete measure_;
  if (this != internal_default_instance()) delete filter_;
}

void AggregateRel_Measure::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggregateRel_Measure::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregateRel_Measure& AggregateRel_Measure::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void AggregateRel_Measure::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.AggregateRel.Measure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && measure_ != NULL) {
    delete measure_;
  }
  measure_ = NULL;
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  _internal_metadata_.Clear();
}

bool AggregateRel_Measure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.AggregateRel.Measure)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.AggregateFunction measure = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_measure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.AggregateRel.Measure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.AggregateRel.Measure)
  return false;
#undef DO_
}

void AggregateRel_Measure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.AggregateRel.Measure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.AggregateFunction measure = 1;
  if (this->has_measure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_measure(), output);
  }

  // .substrait.Expression filter = 2;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_filter(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.AggregateRel.Measure)
}

::google::protobuf::uint8* AggregateRel_Measure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.AggregateRel.Measure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.AggregateFunction measure = 1;
  if (this->has_measure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_measure(), deterministic, target);
  }

  // .substrait.Expression filter = 2;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_filter(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.AggregateRel.Measure)
  return target;
}

size_t AggregateRel_Measure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.AggregateRel.Measure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.AggregateFunction measure = 1;
  if (this->has_measure()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *measure_);
  }

  // .substrait.Expression filter = 2;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregateRel_Measure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.AggregateRel.Measure)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregateRel_Measure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregateRel_Measure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.AggregateRel.Measure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.AggregateRel.Measure)
    MergeFrom(*source);
  }
}

void AggregateRel_Measure::MergeFrom(const AggregateRel_Measure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.AggregateRel.Measure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_measure()) {
    mutable_measure()->::substrait::AggregateFunction::MergeFrom(from.measure());
  }
  if (from.has_filter()) {
    mutable_filter()->::substrait::Expression::MergeFrom(from.filter());
  }
}

void AggregateRel_Measure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.AggregateRel.Measure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregateRel_Measure::CopyFrom(const AggregateRel_Measure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.AggregateRel.Measure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregateRel_Measure::IsInitialized() const {
  return true;
}

void AggregateRel_Measure::Swap(AggregateRel_Measure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregateRel_Measure::InternalSwap(AggregateRel_Measure* other) {
  using std::swap;
  swap(measure_, other->measure_);
  swap(filter_, other->filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggregateRel_Measure::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggregateRel::InitAsDefaultInstance() {
  ::substrait::_AggregateRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_AggregateRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_AggregateRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void AggregateRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggregateRel::kCommonFieldNumber;
const int AggregateRel::kInputFieldNumber;
const int AggregateRel::kGroupingsFieldNumber;
const int AggregateRel::kMeasuresFieldNumber;
const int AggregateRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregateRel::AggregateRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.AggregateRel)
}
AggregateRel::AggregateRel(const AggregateRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      groupings_(from.groupings_),
      measures_(from.measures_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.AggregateRel)
}

void AggregateRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&common_)) + sizeof(advanced_extension_));
}

AggregateRel::~AggregateRel() {
  // @@protoc_insertion_point(destructor:substrait.AggregateRel)
  SharedDtor();
}

void AggregateRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void AggregateRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggregateRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregateRel& AggregateRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void AggregateRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.AggregateRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  groupings_.Clear();
  measures_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool AggregateRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.AggregateRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.AggregateRel.Grouping groupings = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_groupings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.AggregateRel.Measure measures = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_measures()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.AggregateRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.AggregateRel)
  return false;
#undef DO_
}

void AggregateRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.AggregateRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // repeated .substrait.AggregateRel.Grouping groupings = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groupings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->groupings(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.AggregateRel.Measure measures = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->measures_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->measures(static_cast<int>(i)),
      output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.AggregateRel)
}

::google::protobuf::uint8* AggregateRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.AggregateRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // repeated .substrait.AggregateRel.Grouping groupings = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->groupings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->groupings(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.AggregateRel.Measure measures = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->measures_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->measures(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.AggregateRel)
  return target;
}

size_t AggregateRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.AggregateRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.AggregateRel.Grouping groupings = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->groupings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->groupings(static_cast<int>(i)));
    }
  }

  // repeated .substrait.AggregateRel.Measure measures = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->measures_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->measures(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregateRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.AggregateRel)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregateRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregateRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.AggregateRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.AggregateRel)
    MergeFrom(*source);
  }
}

void AggregateRel::MergeFrom(const AggregateRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.AggregateRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groupings_.MergeFrom(from.groupings_);
  measures_.MergeFrom(from.measures_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void AggregateRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.AggregateRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregateRel::CopyFrom(const AggregateRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.AggregateRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregateRel::IsInitialized() const {
  return true;
}

void AggregateRel::Swap(AggregateRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregateRel::InternalSwap(AggregateRel* other) {
  using std::swap;
  CastToBase(&groupings_)->InternalSwap(CastToBase(&other->groupings_));
  CastToBase(&measures_)->InternalSwap(CastToBase(&other->measures_));
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggregateRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SortRel::InitAsDefaultInstance() {
  ::substrait::_SortRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_SortRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_SortRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void SortRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SortRel::kCommonFieldNumber;
const int SortRel::kInputFieldNumber;
const int SortRel::kSortsFieldNumber;
const int SortRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SortRel::SortRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.SortRel)
}
SortRel::SortRel(const SortRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sorts_(from.sorts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.SortRel)
}

void SortRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&common_)) + sizeof(advanced_extension_));
}

SortRel::~SortRel() {
  // @@protoc_insertion_point(destructor:substrait.SortRel)
  SharedDtor();
}

void SortRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void SortRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SortRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SortRel& SortRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void SortRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.SortRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sorts_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool SortRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.SortRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.SortField sorts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sorts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.SortRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.SortRel)
  return false;
#undef DO_
}

void SortRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.SortRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // repeated .substrait.SortField sorts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sorts(static_cast<int>(i)),
      output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.SortRel)
}

::google::protobuf::uint8* SortRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.SortRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // repeated .substrait.SortField sorts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sorts(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.SortRel)
  return target;
}

size_t SortRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.SortRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.SortField sorts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sorts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sorts(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SortRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.SortRel)
  GOOGLE_DCHECK_NE(&from, this);
  const SortRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SortRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.SortRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.SortRel)
    MergeFrom(*source);
  }
}

void SortRel::MergeFrom(const SortRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.SortRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sorts_.MergeFrom(from.sorts_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void SortRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.SortRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SortRel::CopyFrom(const SortRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.SortRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SortRel::IsInitialized() const {
  return true;
}

void SortRel::Swap(SortRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SortRel::InternalSwap(SortRel* other) {
  using std::swap;
  CastToBase(&sorts_)->InternalSwap(CastToBase(&other->sorts_));
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SortRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FilterRel::InitAsDefaultInstance() {
  ::substrait::_FilterRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_FilterRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_FilterRel_default_instance_._instance.get_mutable()->condition_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_FilterRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void FilterRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilterRel::kCommonFieldNumber;
const int FilterRel::kInputFieldNumber;
const int FilterRel::kConditionFieldNumber;
const int FilterRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilterRel::FilterRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.FilterRel)
}
FilterRel::FilterRel(const FilterRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_condition()) {
    condition_ = new ::substrait::Expression(*from.condition_);
  } else {
    condition_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FilterRel)
}

void FilterRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&advanced_extension_) -
      reinterpret_cast<char*>(&common_)) + sizeof(advanced_extension_));
}

FilterRel::~FilterRel() {
  // @@protoc_insertion_point(destructor:substrait.FilterRel)
  SharedDtor();
}

void FilterRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete condition_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void FilterRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FilterRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FilterRel& FilterRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void FilterRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FilterRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && condition_ != NULL) {
    delete condition_;
  }
  condition_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool FilterRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.FilterRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression condition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.FilterRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.FilterRel)
  return false;
#undef DO_
}

void FilterRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.FilterRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // .substrait.Expression condition = 3;
  if (this->has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_condition(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.FilterRel)
}

::google::protobuf::uint8* FilterRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FilterRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // .substrait.Expression condition = 3;
  if (this->has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_condition(), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FilterRel)
  return target;
}

size_t FilterRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FilterRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.Expression condition = 3;
  if (this->has_condition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *condition_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FilterRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.FilterRel)
  GOOGLE_DCHECK_NE(&from, this);
  const FilterRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilterRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.FilterRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.FilterRel)
    MergeFrom(*source);
  }
}

void FilterRel::MergeFrom(const FilterRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.FilterRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_condition()) {
    mutable_condition()->::substrait::Expression::MergeFrom(from.condition());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void FilterRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.FilterRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterRel::CopyFrom(const FilterRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FilterRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterRel::IsInitialized() const {
  return true;
}

void FilterRel::Swap(FilterRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilterRel::InternalSwap(FilterRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(condition_, other->condition_);
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FilterRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetRel::InitAsDefaultInstance() {
  ::substrait::_SetRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_SetRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void SetRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRel::kCommonFieldNumber;
const int SetRel::kInputsFieldNumber;
const int SetRel::kOpFieldNumber;
const int SetRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRel::SetRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.SetRel)
}
SetRel::SetRel(const SetRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:substrait.SetRel)
}

void SetRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&common_)) + sizeof(op_));
}

SetRel::~SetRel() {
  // @@protoc_insertion_point(destructor:substrait.SetRel)
  SharedDtor();
}

void SetRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void SetRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetRel& SetRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void SetRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.SetRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  op_ = 0;
  _internal_metadata_.Clear();
}

bool SetRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.SetRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Rel inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.SetRel.SetOp op = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::substrait::SetRel_SetOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.SetRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.SetRel)
  return false;
#undef DO_
}

void SetRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.SetRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // repeated .substrait.Rel inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // .substrait.SetRel.SetOp op = 3;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.SetRel)
}

::google::protobuf::uint8* SetRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.SetRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // repeated .substrait.Rel inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.SetRel.SetOp op = 3;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op(), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.SetRel)
  return target;
}

size_t SetRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.SetRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Rel inputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // .substrait.SetRel.SetOp op = 3;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.SetRel)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.SetRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.SetRel)
    MergeFrom(*source);
  }
}

void SetRel::MergeFrom(const SetRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.SetRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void SetRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.SetRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRel::CopyFrom(const SetRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.SetRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRel::IsInitialized() const {
  return true;
}

void SetRel::Swap(SetRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRel::InternalSwap(SetRel* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  swap(common_, other->common_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtensionSingleRel::InitAsDefaultInstance() {
  ::substrait::_ExtensionSingleRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_ExtensionSingleRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_ExtensionSingleRel_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ExtensionSingleRel::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionSingleRel::kCommonFieldNumber;
const int ExtensionSingleRel::kInputFieldNumber;
const int ExtensionSingleRel::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionSingleRel::ExtensionSingleRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExtensionSingleRel)
}
ExtensionSingleRel::ExtensionSingleRel(const ExtensionSingleRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::google::protobuf::Any(*from.detail_);
  } else {
    detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExtensionSingleRel)
}

void ExtensionSingleRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detail_) -
      reinterpret_cast<char*>(&common_)) + sizeof(detail_));
}

ExtensionSingleRel::~ExtensionSingleRel() {
  // @@protoc_insertion_point(destructor:substrait.ExtensionSingleRel)
  SharedDtor();
}

void ExtensionSingleRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete detail_;
}

void ExtensionSingleRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtensionSingleRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtensionSingleRel& ExtensionSingleRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void ExtensionSingleRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExtensionSingleRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  _internal_metadata_.Clear();
}

bool ExtensionSingleRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExtensionSingleRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any detail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExtensionSingleRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExtensionSingleRel)
  return false;
#undef DO_
}

void ExtensionSingleRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExtensionSingleRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // .google.protobuf.Any detail = 3;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExtensionSingleRel)
}

::google::protobuf::uint8* ExtensionSingleRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExtensionSingleRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // .google.protobuf.Any detail = 3;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExtensionSingleRel)
  return target;
}

size_t ExtensionSingleRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExtensionSingleRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .google.protobuf.Any detail = 3;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionSingleRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExtensionSingleRel)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionSingleRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtensionSingleRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExtensionSingleRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExtensionSingleRel)
    MergeFrom(*source);
  }
}

void ExtensionSingleRel::MergeFrom(const ExtensionSingleRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExtensionSingleRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
}

void ExtensionSingleRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExtensionSingleRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionSingleRel::CopyFrom(const ExtensionSingleRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExtensionSingleRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionSingleRel::IsInitialized() const {
  return true;
}

void ExtensionSingleRel::Swap(ExtensionSingleRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionSingleRel::InternalSwap(ExtensionSingleRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtensionSingleRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtensionLeafRel::InitAsDefaultInstance() {
  ::substrait::_ExtensionLeafRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_ExtensionLeafRel_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ExtensionLeafRel::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionLeafRel::kCommonFieldNumber;
const int ExtensionLeafRel::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionLeafRel::ExtensionLeafRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionLeafRel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExtensionLeafRel)
}
ExtensionLeafRel::ExtensionLeafRel(const ExtensionLeafRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::google::protobuf::Any(*from.detail_);
  } else {
    detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExtensionLeafRel)
}

void ExtensionLeafRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detail_) -
      reinterpret_cast<char*>(&common_)) + sizeof(detail_));
}

ExtensionLeafRel::~ExtensionLeafRel() {
  // @@protoc_insertion_point(destructor:substrait.ExtensionLeafRel)
  SharedDtor();
}

void ExtensionLeafRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete detail_;
}

void ExtensionLeafRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtensionLeafRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtensionLeafRel& ExtensionLeafRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionLeafRel.base);
  return *internal_default_instance();
}


void ExtensionLeafRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExtensionLeafRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  _internal_metadata_.Clear();
}

bool ExtensionLeafRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExtensionLeafRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExtensionLeafRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExtensionLeafRel)
  return false;
#undef DO_
}

void ExtensionLeafRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExtensionLeafRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .google.protobuf.Any detail = 2;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExtensionLeafRel)
}

::google::protobuf::uint8* ExtensionLeafRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExtensionLeafRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .google.protobuf.Any detail = 2;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExtensionLeafRel)
  return target;
}

size_t ExtensionLeafRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExtensionLeafRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .google.protobuf.Any detail = 2;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionLeafRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExtensionLeafRel)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionLeafRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtensionLeafRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExtensionLeafRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExtensionLeafRel)
    MergeFrom(*source);
  }
}

void ExtensionLeafRel::MergeFrom(const ExtensionLeafRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExtensionLeafRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
}

void ExtensionLeafRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExtensionLeafRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionLeafRel::CopyFrom(const ExtensionLeafRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExtensionLeafRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionLeafRel::IsInitialized() const {
  return true;
}

void ExtensionLeafRel::Swap(ExtensionLeafRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionLeafRel::InternalSwap(ExtensionLeafRel* other) {
  using std::swap;
  swap(common_, other->common_);
  swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtensionLeafRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtensionMultiRel::InitAsDefaultInstance() {
  ::substrait::_ExtensionMultiRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_ExtensionMultiRel_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ExtensionMultiRel::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionMultiRel::kCommonFieldNumber;
const int ExtensionMultiRel::kInputsFieldNumber;
const int ExtensionMultiRel::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionMultiRel::ExtensionMultiRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExtensionMultiRel)
}
ExtensionMultiRel::ExtensionMultiRel(const ExtensionMultiRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::google::protobuf::Any(*from.detail_);
  } else {
    detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExtensionMultiRel)
}

void ExtensionMultiRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detail_) -
      reinterpret_cast<char*>(&common_)) + sizeof(detail_));
}

ExtensionMultiRel::~ExtensionMultiRel() {
  // @@protoc_insertion_point(destructor:substrait.ExtensionMultiRel)
  SharedDtor();
}

void ExtensionMultiRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete detail_;
}

void ExtensionMultiRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtensionMultiRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtensionMultiRel& ExtensionMultiRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void ExtensionMultiRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExtensionMultiRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  _internal_metadata_.Clear();
}

bool ExtensionMultiRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExtensionMultiRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Rel inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any detail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExtensionMultiRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExtensionMultiRel)
  return false;
#undef DO_
}

void ExtensionMultiRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExtensionMultiRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // repeated .substrait.Rel inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Any detail = 3;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExtensionMultiRel)
}

::google::protobuf::uint8* ExtensionMultiRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExtensionMultiRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // repeated .substrait.Rel inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Any detail = 3;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExtensionMultiRel)
  return target;
}

size_t ExtensionMultiRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExtensionMultiRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Rel inputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .google.protobuf.Any detail = 3;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionMultiRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExtensionMultiRel)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionMultiRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtensionMultiRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExtensionMultiRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExtensionMultiRel)
    MergeFrom(*source);
  }
}

void ExtensionMultiRel::MergeFrom(const ExtensionMultiRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExtensionMultiRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
}

void ExtensionMultiRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExtensionMultiRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionMultiRel::CopyFrom(const ExtensionMultiRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExtensionMultiRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionMultiRel::IsInitialized() const {
  return true;
}

void ExtensionMultiRel::Swap(ExtensionMultiRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionMultiRel::InternalSwap(ExtensionMultiRel* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  swap(common_, other->common_);
  swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtensionMultiRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel_ScatterFields::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeRel_ScatterFields::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel_ScatterFields::ExchangeRel_ScatterFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_ScatterFields.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel.ScatterFields)
}
ExchangeRel_ScatterFields::ExchangeRel_ScatterFields(const ExchangeRel_ScatterFields& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel.ScatterFields)
}

void ExchangeRel_ScatterFields::SharedCtor() {
}

ExchangeRel_ScatterFields::~ExchangeRel_ScatterFields() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel.ScatterFields)
  SharedDtor();
}

void ExchangeRel_ScatterFields::SharedDtor() {
}

void ExchangeRel_ScatterFields::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel_ScatterFields::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel_ScatterFields& ExchangeRel_ScatterFields::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_ScatterFields.base);
  return *internal_default_instance();
}


void ExchangeRel_ScatterFields::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel.ScatterFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  _internal_metadata_.Clear();
}

bool ExchangeRel_ScatterFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel.ScatterFields)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.FieldReference fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel.ScatterFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel.ScatterFields)
  return false;
#undef DO_
}

void ExchangeRel_ScatterFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel.ScatterFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.FieldReference fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->fields(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel.ScatterFields)
}

::google::protobuf::uint8* ExchangeRel_ScatterFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel.ScatterFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.FieldReference fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel.ScatterFields)
  return target;
}

size_t ExchangeRel_ScatterFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel.ScatterFields)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.FieldReference fields = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel_ScatterFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel.ScatterFields)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel_ScatterFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel_ScatterFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel.ScatterFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel.ScatterFields)
    MergeFrom(*source);
  }
}

void ExchangeRel_ScatterFields::MergeFrom(const ExchangeRel_ScatterFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel.ScatterFields)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void ExchangeRel_ScatterFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel.ScatterFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel_ScatterFields::CopyFrom(const ExchangeRel_ScatterFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel.ScatterFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel_ScatterFields::IsInitialized() const {
  return true;
}

void ExchangeRel_ScatterFields::Swap(ExchangeRel_ScatterFields* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel_ScatterFields::InternalSwap(ExchangeRel_ScatterFields* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel_ScatterFields::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel_SingleBucketExpression::InitAsDefaultInstance() {
  ::substrait::_ExchangeRel_SingleBucketExpression_default_instance_._instance.get_mutable()->expression_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeRel_SingleBucketExpression::kExpressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel_SingleBucketExpression::ExchangeRel_SingleBucketExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_SingleBucketExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel.SingleBucketExpression)
}
ExchangeRel_SingleBucketExpression::ExchangeRel_SingleBucketExpression(const ExchangeRel_SingleBucketExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expression()) {
    expression_ = new ::substrait::Expression(*from.expression_);
  } else {
    expression_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel.SingleBucketExpression)
}

void ExchangeRel_SingleBucketExpression::SharedCtor() {
  expression_ = NULL;
}

ExchangeRel_SingleBucketExpression::~ExchangeRel_SingleBucketExpression() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel.SingleBucketExpression)
  SharedDtor();
}

void ExchangeRel_SingleBucketExpression::SharedDtor() {
  if (this != internal_default_instance()) delete expression_;
}

void ExchangeRel_SingleBucketExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel_SingleBucketExpression::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel_SingleBucketExpression& ExchangeRel_SingleBucketExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_SingleBucketExpression.base);
  return *internal_default_instance();
}


void ExchangeRel_SingleBucketExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel.SingleBucketExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && expression_ != NULL) {
    delete expression_;
  }
  expression_ = NULL;
  _internal_metadata_.Clear();
}

bool ExchangeRel_SingleBucketExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel.SingleBucketExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression expression = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel.SingleBucketExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel.SingleBucketExpression)
  return false;
#undef DO_
}

void ExchangeRel_SingleBucketExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel.SingleBucketExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression expression = 1;
  if (this->has_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_expression(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel.SingleBucketExpression)
}

::google::protobuf::uint8* ExchangeRel_SingleBucketExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel.SingleBucketExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression expression = 1;
  if (this->has_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_expression(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel.SingleBucketExpression)
  return target;
}

size_t ExchangeRel_SingleBucketExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel.SingleBucketExpression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression expression = 1;
  if (this->has_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expression_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel_SingleBucketExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel.SingleBucketExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel_SingleBucketExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel_SingleBucketExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel.SingleBucketExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel.SingleBucketExpression)
    MergeFrom(*source);
  }
}

void ExchangeRel_SingleBucketExpression::MergeFrom(const ExchangeRel_SingleBucketExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel.SingleBucketExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expression()) {
    mutable_expression()->::substrait::Expression::MergeFrom(from.expression());
  }
}

void ExchangeRel_SingleBucketExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel.SingleBucketExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel_SingleBucketExpression::CopyFrom(const ExchangeRel_SingleBucketExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel.SingleBucketExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel_SingleBucketExpression::IsInitialized() const {
  return true;
}

void ExchangeRel_SingleBucketExpression::Swap(ExchangeRel_SingleBucketExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel_SingleBucketExpression::InternalSwap(ExchangeRel_SingleBucketExpression* other) {
  using std::swap;
  swap(expression_, other->expression_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel_SingleBucketExpression::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel_MultiBucketExpression::InitAsDefaultInstance() {
  ::substrait::_ExchangeRel_MultiBucketExpression_default_instance_._instance.get_mutable()->expression_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeRel_MultiBucketExpression::kExpressionFieldNumber;
const int ExchangeRel_MultiBucketExpression::kConstrainedToCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel_MultiBucketExpression::ExchangeRel_MultiBucketExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_MultiBucketExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel.MultiBucketExpression)
}
ExchangeRel_MultiBucketExpression::ExchangeRel_MultiBucketExpression(const ExchangeRel_MultiBucketExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expression()) {
    expression_ = new ::substrait::Expression(*from.expression_);
  } else {
    expression_ = NULL;
  }
  constrained_to_count_ = from.constrained_to_count_;
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel.MultiBucketExpression)
}

void ExchangeRel_MultiBucketExpression::SharedCtor() {
  ::memset(&expression_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constrained_to_count_) -
      reinterpret_cast<char*>(&expression_)) + sizeof(constrained_to_count_));
}

ExchangeRel_MultiBucketExpression::~ExchangeRel_MultiBucketExpression() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel.MultiBucketExpression)
  SharedDtor();
}

void ExchangeRel_MultiBucketExpression::SharedDtor() {
  if (this != internal_default_instance()) delete expression_;
}

void ExchangeRel_MultiBucketExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel_MultiBucketExpression::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel_MultiBucketExpression& ExchangeRel_MultiBucketExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_MultiBucketExpression.base);
  return *internal_default_instance();
}


void ExchangeRel_MultiBucketExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel.MultiBucketExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && expression_ != NULL) {
    delete expression_;
  }
  expression_ = NULL;
  constrained_to_count_ = false;
  _internal_metadata_.Clear();
}

bool ExchangeRel_MultiBucketExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel.MultiBucketExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression expression = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool constrained_to_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &constrained_to_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel.MultiBucketExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel.MultiBucketExpression)
  return false;
#undef DO_
}

void ExchangeRel_MultiBucketExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel.MultiBucketExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression expression = 1;
  if (this->has_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_expression(), output);
  }

  // bool constrained_to_count = 2;
  if (this->constrained_to_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->constrained_to_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel.MultiBucketExpression)
}

::google::protobuf::uint8* ExchangeRel_MultiBucketExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel.MultiBucketExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression expression = 1;
  if (this->has_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_expression(), deterministic, target);
  }

  // bool constrained_to_count = 2;
  if (this->constrained_to_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->constrained_to_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel.MultiBucketExpression)
  return target;
}

size_t ExchangeRel_MultiBucketExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel.MultiBucketExpression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression expression = 1;
  if (this->has_expression()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expression_);
  }

  // bool constrained_to_count = 2;
  if (this->constrained_to_count() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel_MultiBucketExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel.MultiBucketExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel_MultiBucketExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel_MultiBucketExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel.MultiBucketExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel.MultiBucketExpression)
    MergeFrom(*source);
  }
}

void ExchangeRel_MultiBucketExpression::MergeFrom(const ExchangeRel_MultiBucketExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel.MultiBucketExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expression()) {
    mutable_expression()->::substrait::Expression::MergeFrom(from.expression());
  }
  if (from.constrained_to_count() != 0) {
    set_constrained_to_count(from.constrained_to_count());
  }
}

void ExchangeRel_MultiBucketExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel.MultiBucketExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel_MultiBucketExpression::CopyFrom(const ExchangeRel_MultiBucketExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel.MultiBucketExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel_MultiBucketExpression::IsInitialized() const {
  return true;
}

void ExchangeRel_MultiBucketExpression::Swap(ExchangeRel_MultiBucketExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel_MultiBucketExpression::InternalSwap(ExchangeRel_MultiBucketExpression* other) {
  using std::swap;
  swap(expression_, other->expression_);
  swap(constrained_to_count_, other->constrained_to_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel_MultiBucketExpression::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel_Broadcast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel_Broadcast::ExchangeRel_Broadcast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_Broadcast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel.Broadcast)
}
ExchangeRel_Broadcast::ExchangeRel_Broadcast(const ExchangeRel_Broadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel.Broadcast)
}

void ExchangeRel_Broadcast::SharedCtor() {
}

ExchangeRel_Broadcast::~ExchangeRel_Broadcast() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel.Broadcast)
  SharedDtor();
}

void ExchangeRel_Broadcast::SharedDtor() {
}

void ExchangeRel_Broadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel_Broadcast::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel_Broadcast& ExchangeRel_Broadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_Broadcast.base);
  return *internal_default_instance();
}


void ExchangeRel_Broadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel.Broadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ExchangeRel_Broadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel.Broadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel.Broadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel.Broadcast)
  return false;
#undef DO_
}

void ExchangeRel_Broadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel.Broadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel.Broadcast)
}

::google::protobuf::uint8* ExchangeRel_Broadcast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel.Broadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel.Broadcast)
  return target;
}

size_t ExchangeRel_Broadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel.Broadcast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel_Broadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel.Broadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel_Broadcast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel_Broadcast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel.Broadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel.Broadcast)
    MergeFrom(*source);
  }
}

void ExchangeRel_Broadcast::MergeFrom(const ExchangeRel_Broadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel.Broadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExchangeRel_Broadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel.Broadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel_Broadcast::CopyFrom(const ExchangeRel_Broadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel.Broadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel_Broadcast::IsInitialized() const {
  return true;
}

void ExchangeRel_Broadcast::Swap(ExchangeRel_Broadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel_Broadcast::InternalSwap(ExchangeRel_Broadcast* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel_Broadcast::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel_RoundRobin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeRel_RoundRobin::kExactFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel_RoundRobin::ExchangeRel_RoundRobin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_RoundRobin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel.RoundRobin)
}
ExchangeRel_RoundRobin::ExchangeRel_RoundRobin(const ExchangeRel_RoundRobin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exact_ = from.exact_;
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel.RoundRobin)
}

void ExchangeRel_RoundRobin::SharedCtor() {
  exact_ = false;
}

ExchangeRel_RoundRobin::~ExchangeRel_RoundRobin() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel.RoundRobin)
  SharedDtor();
}

void ExchangeRel_RoundRobin::SharedDtor() {
}

void ExchangeRel_RoundRobin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel_RoundRobin::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel_RoundRobin& ExchangeRel_RoundRobin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_RoundRobin.base);
  return *internal_default_instance();
}


void ExchangeRel_RoundRobin::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel.RoundRobin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exact_ = false;
  _internal_metadata_.Clear();
}

bool ExchangeRel_RoundRobin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel.RoundRobin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool exact = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &exact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel.RoundRobin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel.RoundRobin)
  return false;
#undef DO_
}

void ExchangeRel_RoundRobin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel.RoundRobin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool exact = 1;
  if (this->exact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->exact(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel.RoundRobin)
}

::google::protobuf::uint8* ExchangeRel_RoundRobin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel.RoundRobin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool exact = 1;
  if (this->exact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->exact(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel.RoundRobin)
  return target;
}

size_t ExchangeRel_RoundRobin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel.RoundRobin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool exact = 1;
  if (this->exact() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel_RoundRobin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel.RoundRobin)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel_RoundRobin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel_RoundRobin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel.RoundRobin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel.RoundRobin)
    MergeFrom(*source);
  }
}

void ExchangeRel_RoundRobin::MergeFrom(const ExchangeRel_RoundRobin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel.RoundRobin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exact() != 0) {
    set_exact(from.exact());
  }
}

void ExchangeRel_RoundRobin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel.RoundRobin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel_RoundRobin::CopyFrom(const ExchangeRel_RoundRobin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel.RoundRobin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel_RoundRobin::IsInitialized() const {
  return true;
}

void ExchangeRel_RoundRobin::Swap(ExchangeRel_RoundRobin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel_RoundRobin::InternalSwap(ExchangeRel_RoundRobin* other) {
  using std::swap;
  swap(exact_, other->exact_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel_RoundRobin::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel_ExchangeTarget::InitAsDefaultInstance() {
  ::substrait::_ExchangeRel_ExchangeTarget_default_instance_.uri_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_ExchangeRel_ExchangeTarget_default_instance_.extended_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ExchangeRel_ExchangeTarget::set_allocated_extended(::google::protobuf::Any* extended) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_target_type();
  if (extended) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extended = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extended, submessage_arena);
    }
    set_has_extended();
    target_type_.extended_ = extended;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExchangeRel.ExchangeTarget.extended)
}
void ExchangeRel_ExchangeTarget::clear_extended() {
  if (has_extended()) {
    delete target_type_.extended_;
    clear_has_target_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeRel_ExchangeTarget::kPartitionIdFieldNumber;
const int ExchangeRel_ExchangeTarget::kUriFieldNumber;
const int ExchangeRel_ExchangeTarget::kExtendedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel_ExchangeTarget::ExchangeRel_ExchangeTarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_ExchangeTarget.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel.ExchangeTarget)
}
ExchangeRel_ExchangeTarget::ExchangeRel_ExchangeTarget(const ExchangeRel_ExchangeTarget& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      partition_id_(from.partition_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_target_type();
  switch (from.target_type_case()) {
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case kExtended: {
      mutable_extended()->::google::protobuf::Any::MergeFrom(from.extended());
      break;
    }
    case TARGET_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel.ExchangeTarget)
}

void ExchangeRel_ExchangeTarget::SharedCtor() {
  clear_has_target_type();
}

ExchangeRel_ExchangeTarget::~ExchangeRel_ExchangeTarget() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel.ExchangeTarget)
  SharedDtor();
}

void ExchangeRel_ExchangeTarget::SharedDtor() {
  if (has_target_type()) {
    clear_target_type();
  }
}

void ExchangeRel_ExchangeTarget::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel_ExchangeTarget::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel_ExchangeTarget& ExchangeRel_ExchangeTarget::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel_ExchangeTarget.base);
  return *internal_default_instance();
}


void ExchangeRel_ExchangeTarget::clear_target_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.ExchangeRel.ExchangeTarget)
  switch (target_type_case()) {
    case kUri: {
      target_type_.uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kExtended: {
      delete target_type_.extended_;
      break;
    }
    case TARGET_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TARGET_TYPE_NOT_SET;
}


void ExchangeRel_ExchangeTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel.ExchangeTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_id_.Clear();
  clear_target_type();
  _internal_metadata_.Clear();
}

bool ExchangeRel_ExchangeTarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel.ExchangeTarget)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 partition_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_partition_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_partition_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.ExchangeRel.ExchangeTarget.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any extended = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extended()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel.ExchangeTarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel.ExchangeTarget)
  return false;
#undef DO_
}

void ExchangeRel_ExchangeTarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel.ExchangeTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 partition_id = 1;
  if (this->partition_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _partition_id_cached_byte_size_));
  }
  for (int i = 0, n = this->partition_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->partition_id(i), output);
  }

  // string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ExchangeRel.ExchangeTarget.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  // .google.protobuf.Any extended = 3;
  if (has_extended()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_extended(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel.ExchangeTarget)
}

::google::protobuf::uint8* ExchangeRel_ExchangeTarget::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel.ExchangeTarget)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 partition_id = 1;
  if (this->partition_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _partition_id_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->partition_id_, target);
  }

  // string uri = 2;
  if (has_uri()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.ExchangeRel.ExchangeTarget.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  // .google.protobuf.Any extended = 3;
  if (has_extended()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_extended(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel.ExchangeTarget)
  return target;
}

size_t ExchangeRel_ExchangeTarget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel.ExchangeTarget)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 partition_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->partition_id_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _partition_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  switch (target_type_case()) {
    // string uri = 2;
    case kUri: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
      break;
    }
    // .google.protobuf.Any extended = 3;
    case kExtended: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *target_type_.extended_);
      break;
    }
    case TARGET_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel_ExchangeTarget::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel.ExchangeTarget)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel_ExchangeTarget* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel_ExchangeTarget>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel.ExchangeTarget)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel.ExchangeTarget)
    MergeFrom(*source);
  }
}

void ExchangeRel_ExchangeTarget::MergeFrom(const ExchangeRel_ExchangeTarget& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel.ExchangeTarget)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partition_id_.MergeFrom(from.partition_id_);
  switch (from.target_type_case()) {
    case kUri: {
      set_uri(from.uri());
      break;
    }
    case kExtended: {
      mutable_extended()->::google::protobuf::Any::MergeFrom(from.extended());
      break;
    }
    case TARGET_TYPE_NOT_SET: {
      break;
    }
  }
}

void ExchangeRel_ExchangeTarget::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel.ExchangeTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel_ExchangeTarget::CopyFrom(const ExchangeRel_ExchangeTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel.ExchangeTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel_ExchangeTarget::IsInitialized() const {
  return true;
}

void ExchangeRel_ExchangeTarget::Swap(ExchangeRel_ExchangeTarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel_ExchangeTarget::InternalSwap(ExchangeRel_ExchangeTarget* other) {
  using std::swap;
  partition_id_.InternalSwap(&other->partition_id_);
  swap(target_type_, other->target_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel_ExchangeTarget::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExchangeRel::InitAsDefaultInstance() {
  ::substrait::_ExchangeRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_.scatter_by_fields_ = const_cast< ::substrait::ExchangeRel_ScatterFields*>(
      ::substrait::ExchangeRel_ScatterFields::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_.single_target_ = const_cast< ::substrait::ExchangeRel_SingleBucketExpression*>(
      ::substrait::ExchangeRel_SingleBucketExpression::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_.multi_target_ = const_cast< ::substrait::ExchangeRel_MultiBucketExpression*>(
      ::substrait::ExchangeRel_MultiBucketExpression::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_.round_robin_ = const_cast< ::substrait::ExchangeRel_RoundRobin*>(
      ::substrait::ExchangeRel_RoundRobin::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_.broadcast_ = const_cast< ::substrait::ExchangeRel_Broadcast*>(
      ::substrait::ExchangeRel_Broadcast::internal_default_instance());
  ::substrait::_ExchangeRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void ExchangeRel::set_allocated_scatter_by_fields(::substrait::ExchangeRel_ScatterFields* scatter_by_fields) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exchange_kind();
  if (scatter_by_fields) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scatter_by_fields = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scatter_by_fields, submessage_arena);
    }
    set_has_scatter_by_fields();
    exchange_kind_.scatter_by_fields_ = scatter_by_fields;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExchangeRel.scatter_by_fields)
}
void ExchangeRel::set_allocated_single_target(::substrait::ExchangeRel_SingleBucketExpression* single_target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exchange_kind();
  if (single_target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      single_target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, single_target, submessage_arena);
    }
    set_has_single_target();
    exchange_kind_.single_target_ = single_target;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExchangeRel.single_target)
}
void ExchangeRel::set_allocated_multi_target(::substrait::ExchangeRel_MultiBucketExpression* multi_target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exchange_kind();
  if (multi_target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multi_target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multi_target, submessage_arena);
    }
    set_has_multi_target();
    exchange_kind_.multi_target_ = multi_target;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExchangeRel.multi_target)
}
void ExchangeRel::set_allocated_round_robin(::substrait::ExchangeRel_RoundRobin* round_robin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exchange_kind();
  if (round_robin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      round_robin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, round_robin, submessage_arena);
    }
    set_has_round_robin();
    exchange_kind_.round_robin_ = round_robin;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExchangeRel.round_robin)
}
void ExchangeRel::set_allocated_broadcast(::substrait::ExchangeRel_Broadcast* broadcast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_exchange_kind();
  if (broadcast) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      broadcast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, broadcast, submessage_arena);
    }
    set_has_broadcast();
    exchange_kind_.broadcast_ = broadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.ExchangeRel.broadcast)
}
void ExchangeRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExchangeRel::kCommonFieldNumber;
const int ExchangeRel::kInputFieldNumber;
const int ExchangeRel::kPartitionCountFieldNumber;
const int ExchangeRel::kTargetsFieldNumber;
const int ExchangeRel::kScatterByFieldsFieldNumber;
const int ExchangeRel::kSingleTargetFieldNumber;
const int ExchangeRel::kMultiTargetFieldNumber;
const int ExchangeRel::kRoundRobinFieldNumber;
const int ExchangeRel::kBroadcastFieldNumber;
const int ExchangeRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExchangeRel::ExchangeRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExchangeRel)
}
ExchangeRel::ExchangeRel(const ExchangeRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      targets_(from.targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  partition_count_ = from.partition_count_;
  clear_has_exchange_kind();
  switch (from.exchange_kind_case()) {
    case kScatterByFields: {
      mutable_scatter_by_fields()->::substrait::ExchangeRel_ScatterFields::MergeFrom(from.scatter_by_fields());
      break;
    }
    case kSingleTarget: {
      mutable_single_target()->::substrait::ExchangeRel_SingleBucketExpression::MergeFrom(from.single_target());
      break;
    }
    case kMultiTarget: {
      mutable_multi_target()->::substrait::ExchangeRel_MultiBucketExpression::MergeFrom(from.multi_target());
      break;
    }
    case kRoundRobin: {
      mutable_round_robin()->::substrait::ExchangeRel_RoundRobin::MergeFrom(from.round_robin());
      break;
    }
    case kBroadcast: {
      mutable_broadcast()->::substrait::ExchangeRel_Broadcast::MergeFrom(from.broadcast());
      break;
    }
    case EXCHANGE_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExchangeRel)
}

void ExchangeRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&partition_count_) -
      reinterpret_cast<char*>(&common_)) + sizeof(partition_count_));
  clear_has_exchange_kind();
}

ExchangeRel::~ExchangeRel() {
  // @@protoc_insertion_point(destructor:substrait.ExchangeRel)
  SharedDtor();
}

void ExchangeRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete input_;
  if (this != internal_default_instance()) delete advanced_extension_;
  if (has_exchange_kind()) {
    clear_exchange_kind();
  }
}

void ExchangeRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExchangeRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExchangeRel& ExchangeRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExchangeRel.base);
  return *internal_default_instance();
}


void ExchangeRel::clear_exchange_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.ExchangeRel)
  switch (exchange_kind_case()) {
    case kScatterByFields: {
      delete exchange_kind_.scatter_by_fields_;
      break;
    }
    case kSingleTarget: {
      delete exchange_kind_.single_target_;
      break;
    }
    case kMultiTarget: {
      delete exchange_kind_.multi_target_;
      break;
    }
    case kRoundRobin: {
      delete exchange_kind_.round_robin_;
      break;
    }
    case kBroadcast: {
      delete exchange_kind_.broadcast_;
      break;
    }
    case EXCHANGE_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXCHANGE_KIND_NOT_SET;
}


void ExchangeRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExchangeRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  partition_count_ = 0;
  clear_exchange_kind();
  _internal_metadata_.Clear();
}

bool ExchangeRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExchangeRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 partition_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partition_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.ExchangeRel.ExchangeTarget targets = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_targets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExchangeRel.ScatterFields scatter_by_fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scatter_by_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExchangeRel.SingleBucketExpression single_target = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_single_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExchangeRel.MultiBucketExpression multi_target = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multi_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExchangeRel.RoundRobin round_robin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_round_robin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExchangeRel.Broadcast broadcast = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_broadcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExchangeRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExchangeRel)
  return false;
#undef DO_
}

void ExchangeRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExchangeRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // int32 partition_count = 3;
  if (this->partition_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partition_count(), output);
  }

  // repeated .substrait.ExchangeRel.ExchangeTarget targets = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->targets(static_cast<int>(i)),
      output);
  }

  // .substrait.ExchangeRel.ScatterFields scatter_by_fields = 5;
  if (has_scatter_by_fields()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_scatter_by_fields(), output);
  }

  // .substrait.ExchangeRel.SingleBucketExpression single_target = 6;
  if (has_single_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_single_target(), output);
  }

  // .substrait.ExchangeRel.MultiBucketExpression multi_target = 7;
  if (has_multi_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_multi_target(), output);
  }

  // .substrait.ExchangeRel.RoundRobin round_robin = 8;
  if (has_round_robin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_round_robin(), output);
  }

  // .substrait.ExchangeRel.Broadcast broadcast = 9;
  if (has_broadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_broadcast(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExchangeRel)
}

::google::protobuf::uint8* ExchangeRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExchangeRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // int32 partition_count = 3;
  if (this->partition_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partition_count(), target);
  }

  // repeated .substrait.ExchangeRel.ExchangeTarget targets = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->targets(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.ExchangeRel.ScatterFields scatter_by_fields = 5;
  if (has_scatter_by_fields()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_scatter_by_fields(), deterministic, target);
  }

  // .substrait.ExchangeRel.SingleBucketExpression single_target = 6;
  if (has_single_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_single_target(), deterministic, target);
  }

  // .substrait.ExchangeRel.MultiBucketExpression multi_target = 7;
  if (has_multi_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_multi_target(), deterministic, target);
  }

  // .substrait.ExchangeRel.RoundRobin round_robin = 8;
  if (has_round_robin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_round_robin(), deterministic, target);
  }

  // .substrait.ExchangeRel.Broadcast broadcast = 9;
  if (has_broadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_broadcast(), deterministic, target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExchangeRel)
  return target;
}

size_t ExchangeRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExchangeRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.ExchangeRel.ExchangeTarget targets = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->targets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // int32 partition_count = 3;
  if (this->partition_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partition_count());
  }

  switch (exchange_kind_case()) {
    // .substrait.ExchangeRel.ScatterFields scatter_by_fields = 5;
    case kScatterByFields: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchange_kind_.scatter_by_fields_);
      break;
    }
    // .substrait.ExchangeRel.SingleBucketExpression single_target = 6;
    case kSingleTarget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchange_kind_.single_target_);
      break;
    }
    // .substrait.ExchangeRel.MultiBucketExpression multi_target = 7;
    case kMultiTarget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchange_kind_.multi_target_);
      break;
    }
    // .substrait.ExchangeRel.RoundRobin round_robin = 8;
    case kRoundRobin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchange_kind_.round_robin_);
      break;
    }
    // .substrait.ExchangeRel.Broadcast broadcast = 9;
    case kBroadcast: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *exchange_kind_.broadcast_);
      break;
    }
    case EXCHANGE_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExchangeRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExchangeRel)
  GOOGLE_DCHECK_NE(&from, this);
  const ExchangeRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExchangeRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExchangeRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExchangeRel)
    MergeFrom(*source);
  }
}

void ExchangeRel::MergeFrom(const ExchangeRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExchangeRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets_.MergeFrom(from.targets_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.partition_count() != 0) {
    set_partition_count(from.partition_count());
  }
  switch (from.exchange_kind_case()) {
    case kScatterByFields: {
      mutable_scatter_by_fields()->::substrait::ExchangeRel_ScatterFields::MergeFrom(from.scatter_by_fields());
      break;
    }
    case kSingleTarget: {
      mutable_single_target()->::substrait::ExchangeRel_SingleBucketExpression::MergeFrom(from.single_target());
      break;
    }
    case kMultiTarget: {
      mutable_multi_target()->::substrait::ExchangeRel_MultiBucketExpression::MergeFrom(from.multi_target());
      break;
    }
    case kRoundRobin: {
      mutable_round_robin()->::substrait::ExchangeRel_RoundRobin::MergeFrom(from.round_robin());
      break;
    }
    case kBroadcast: {
      mutable_broadcast()->::substrait::ExchangeRel_Broadcast::MergeFrom(from.broadcast());
      break;
    }
    case EXCHANGE_KIND_NOT_SET: {
      break;
    }
  }
}

void ExchangeRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExchangeRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExchangeRel::CopyFrom(const ExchangeRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExchangeRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExchangeRel::IsInitialized() const {
  return true;
}

void ExchangeRel::Swap(ExchangeRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExchangeRel::InternalSwap(ExchangeRel* other) {
  using std::swap;
  CastToBase(&targets_)->InternalSwap(CastToBase(&other->targets_));
  swap(common_, other->common_);
  swap(input_, other->input_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(partition_count_, other->partition_count_);
  swap(exchange_kind_, other->exchange_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExchangeRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RelRoot::InitAsDefaultInstance() {
  ::substrait::_RelRoot_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RelRoot::kInputFieldNumber;
const int RelRoot::kNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RelRoot::RelRoot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_RelRoot.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.RelRoot)
}
RelRoot::RelRoot(const RelRoot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.RelRoot)
}

void RelRoot::SharedCtor() {
  input_ = NULL;
}

RelRoot::~RelRoot() {
  // @@protoc_insertion_point(destructor:substrait.RelRoot)
  SharedDtor();
}

void RelRoot::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
}

void RelRoot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RelRoot::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RelRoot& RelRoot::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_RelRoot.base);
  return *internal_default_instance();
}


void RelRoot::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.RelRoot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  _internal_metadata_.Clear();
}

bool RelRoot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.RelRoot)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Rel input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string names = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.RelRoot.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.RelRoot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.RelRoot)
  return false;
#undef DO_
}

void RelRoot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.RelRoot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Rel input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_input(), output);
  }

  // repeated string names = 2;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.RelRoot.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->names(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.RelRoot)
}

::google::protobuf::uint8* RelRoot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.RelRoot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Rel input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_input(), deterministic, target);
  }

  // repeated string names = 2;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.RelRoot.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->names(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.RelRoot)
  return target;
}

size_t RelRoot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.RelRoot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // .substrait.Rel input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RelRoot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.RelRoot)
  GOOGLE_DCHECK_NE(&from, this);
  const RelRoot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RelRoot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.RelRoot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.RelRoot)
    MergeFrom(*source);
  }
}

void RelRoot::MergeFrom(const RelRoot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.RelRoot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
}

void RelRoot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.RelRoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RelRoot::CopyFrom(const RelRoot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.RelRoot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RelRoot::IsInitialized() const {
  return true;
}

void RelRoot::Swap(RelRoot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RelRoot::InternalSwap(RelRoot* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  swap(input_, other->input_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RelRoot::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rel::InitAsDefaultInstance() {
  ::substrait::_Rel_default_instance_.read_ = const_cast< ::substrait::ReadRel*>(
      ::substrait::ReadRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.filter_ = const_cast< ::substrait::FilterRel*>(
      ::substrait::FilterRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.fetch_ = const_cast< ::substrait::FetchRel*>(
      ::substrait::FetchRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.aggregate_ = const_cast< ::substrait::AggregateRel*>(
      ::substrait::AggregateRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.sort_ = const_cast< ::substrait::SortRel*>(
      ::substrait::SortRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.join_ = const_cast< ::substrait::JoinRel*>(
      ::substrait::JoinRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.project_ = const_cast< ::substrait::ProjectRel*>(
      ::substrait::ProjectRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.set_ = const_cast< ::substrait::SetRel*>(
      ::substrait::SetRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.extension_single_ = const_cast< ::substrait::ExtensionSingleRel*>(
      ::substrait::ExtensionSingleRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.extension_multi_ = const_cast< ::substrait::ExtensionMultiRel*>(
      ::substrait::ExtensionMultiRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.extension_leaf_ = const_cast< ::substrait::ExtensionLeafRel*>(
      ::substrait::ExtensionLeafRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.cross_ = const_cast< ::substrait::CrossRel*>(
      ::substrait::CrossRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.hash_join_ = const_cast< ::substrait::HashJoinRel*>(
      ::substrait::HashJoinRel::internal_default_instance());
  ::substrait::_Rel_default_instance_.merge_join_ = const_cast< ::substrait::MergeJoinRel*>(
      ::substrait::MergeJoinRel::internal_default_instance());
}
void Rel::set_allocated_read(::substrait::ReadRel* read) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (read) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      read = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, read, submessage_arena);
    }
    set_has_read();
    rel_type_.read_ = read;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.read)
}
void Rel::set_allocated_filter(::substrait::FilterRel* filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, filter, submessage_arena);
    }
    set_has_filter();
    rel_type_.filter_ = filter;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.filter)
}
void Rel::set_allocated_fetch(::substrait::FetchRel* fetch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (fetch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fetch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fetch, submessage_arena);
    }
    set_has_fetch();
    rel_type_.fetch_ = fetch;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.fetch)
}
void Rel::set_allocated_aggregate(::substrait::AggregateRel* aggregate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (aggregate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aggregate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aggregate, submessage_arena);
    }
    set_has_aggregate();
    rel_type_.aggregate_ = aggregate;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.aggregate)
}
void Rel::set_allocated_sort(::substrait::SortRel* sort) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (sort) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sort = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sort, submessage_arena);
    }
    set_has_sort();
    rel_type_.sort_ = sort;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.sort)
}
void Rel::set_allocated_join(::substrait::JoinRel* join) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (join) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      join = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, join, submessage_arena);
    }
    set_has_join();
    rel_type_.join_ = join;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.join)
}
void Rel::set_allocated_project(::substrait::ProjectRel* project) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (project) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      project = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, project, submessage_arena);
    }
    set_has_project();
    rel_type_.project_ = project;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.project)
}
void Rel::set_allocated_set(::substrait::SetRel* set) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (set) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set, submessage_arena);
    }
    set_has_set();
    rel_type_.set_ = set;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.set)
}
void Rel::set_allocated_extension_single(::substrait::ExtensionSingleRel* extension_single) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (extension_single) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension_single = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension_single, submessage_arena);
    }
    set_has_extension_single();
    rel_type_.extension_single_ = extension_single;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.extension_single)
}
void Rel::set_allocated_extension_multi(::substrait::ExtensionMultiRel* extension_multi) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (extension_multi) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension_multi = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension_multi, submessage_arena);
    }
    set_has_extension_multi();
    rel_type_.extension_multi_ = extension_multi;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.extension_multi)
}
void Rel::set_allocated_extension_leaf(::substrait::ExtensionLeafRel* extension_leaf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (extension_leaf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension_leaf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension_leaf, submessage_arena);
    }
    set_has_extension_leaf();
    rel_type_.extension_leaf_ = extension_leaf;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.extension_leaf)
}
void Rel::set_allocated_cross(::substrait::CrossRel* cross) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (cross) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cross = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cross, submessage_arena);
    }
    set_has_cross();
    rel_type_.cross_ = cross;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.cross)
}
void Rel::set_allocated_hash_join(::substrait::HashJoinRel* hash_join) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (hash_join) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hash_join = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hash_join, submessage_arena);
    }
    set_has_hash_join();
    rel_type_.hash_join_ = hash_join;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.hash_join)
}
void Rel::set_allocated_merge_join(::substrait::MergeJoinRel* merge_join) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rel_type();
  if (merge_join) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      merge_join = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, merge_join, submessage_arena);
    }
    set_has_merge_join();
    rel_type_.merge_join_ = merge_join;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Rel.merge_join)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rel::kReadFieldNumber;
const int Rel::kFilterFieldNumber;
const int Rel::kFetchFieldNumber;
const int Rel::kAggregateFieldNumber;
const int Rel::kSortFieldNumber;
const int Rel::kJoinFieldNumber;
const int Rel::kProjectFieldNumber;
const int Rel::kSetFieldNumber;
const int Rel::kExtensionSingleFieldNumber;
const int Rel::kExtensionMultiFieldNumber;
const int Rel::kExtensionLeafFieldNumber;
const int Rel::kCrossFieldNumber;
const int Rel::kHashJoinFieldNumber;
const int Rel::kMergeJoinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rel::Rel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Rel)
}
Rel::Rel(const Rel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_rel_type();
  switch (from.rel_type_case()) {
    case kRead: {
      mutable_read()->::substrait::ReadRel::MergeFrom(from.read());
      break;
    }
    case kFilter: {
      mutable_filter()->::substrait::FilterRel::MergeFrom(from.filter());
      break;
    }
    case kFetch: {
      mutable_fetch()->::substrait::FetchRel::MergeFrom(from.fetch());
      break;
    }
    case kAggregate: {
      mutable_aggregate()->::substrait::AggregateRel::MergeFrom(from.aggregate());
      break;
    }
    case kSort: {
      mutable_sort()->::substrait::SortRel::MergeFrom(from.sort());
      break;
    }
    case kJoin: {
      mutable_join()->::substrait::JoinRel::MergeFrom(from.join());
      break;
    }
    case kProject: {
      mutable_project()->::substrait::ProjectRel::MergeFrom(from.project());
      break;
    }
    case kSet: {
      mutable_set()->::substrait::SetRel::MergeFrom(from.set());
      break;
    }
    case kExtensionSingle: {
      mutable_extension_single()->::substrait::ExtensionSingleRel::MergeFrom(from.extension_single());
      break;
    }
    case kExtensionMulti: {
      mutable_extension_multi()->::substrait::ExtensionMultiRel::MergeFrom(from.extension_multi());
      break;
    }
    case kExtensionLeaf: {
      mutable_extension_leaf()->::substrait::ExtensionLeafRel::MergeFrom(from.extension_leaf());
      break;
    }
    case kCross: {
      mutable_cross()->::substrait::CrossRel::MergeFrom(from.cross());
      break;
    }
    case kHashJoin: {
      mutable_hash_join()->::substrait::HashJoinRel::MergeFrom(from.hash_join());
      break;
    }
    case kMergeJoin: {
      mutable_merge_join()->::substrait::MergeJoinRel::MergeFrom(from.merge_join());
      break;
    }
    case REL_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Rel)
}

void Rel::SharedCtor() {
  clear_has_rel_type();
}

Rel::~Rel() {
  // @@protoc_insertion_point(destructor:substrait.Rel)
  SharedDtor();
}

void Rel::SharedDtor() {
  if (has_rel_type()) {
    clear_rel_type();
  }
}

void Rel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Rel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rel& Rel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Rel::clear_rel_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Rel)
  switch (rel_type_case()) {
    case kRead: {
      delete rel_type_.read_;
      break;
    }
    case kFilter: {
      delete rel_type_.filter_;
      break;
    }
    case kFetch: {
      delete rel_type_.fetch_;
      break;
    }
    case kAggregate: {
      delete rel_type_.aggregate_;
      break;
    }
    case kSort: {
      delete rel_type_.sort_;
      break;
    }
    case kJoin: {
      delete rel_type_.join_;
      break;
    }
    case kProject: {
      delete rel_type_.project_;
      break;
    }
    case kSet: {
      delete rel_type_.set_;
      break;
    }
    case kExtensionSingle: {
      delete rel_type_.extension_single_;
      break;
    }
    case kExtensionMulti: {
      delete rel_type_.extension_multi_;
      break;
    }
    case kExtensionLeaf: {
      delete rel_type_.extension_leaf_;
      break;
    }
    case kCross: {
      delete rel_type_.cross_;
      break;
    }
    case kHashJoin: {
      delete rel_type_.hash_join_;
      break;
    }
    case kMergeJoin: {
      delete rel_type_.merge_join_;
      break;
    }
    case REL_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REL_TYPE_NOT_SET;
}


void Rel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Rel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_rel_type();
  _internal_metadata_.Clear();
}

bool Rel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Rel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.ReadRel read = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_read()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.FilterRel filter = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.FetchRel fetch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fetch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.AggregateRel aggregate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aggregate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.SortRel sort = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sort()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.JoinRel join = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_join()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ProjectRel project = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_project()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.SetRel set = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExtensionSingleRel extension_single = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension_single()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExtensionMultiRel extension_multi = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension_multi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExtensionLeafRel extension_leaf = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension_leaf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.CrossRel cross = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cross()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.HashJoinRel hash_join = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hash_join()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.MergeJoinRel merge_join = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_merge_join()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Rel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Rel)
  return false;
#undef DO_
}

void Rel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Rel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.ReadRel read = 1;
  if (has_read()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_read(), output);
  }

  // .substrait.FilterRel filter = 2;
  if (has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_filter(), output);
  }

  // .substrait.FetchRel fetch = 3;
  if (has_fetch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fetch(), output);
  }

  // .substrait.AggregateRel aggregate = 4;
  if (has_aggregate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_aggregate(), output);
  }

  // .substrait.SortRel sort = 5;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_sort(), output);
  }

  // .substrait.JoinRel join = 6;
  if (has_join()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_join(), output);
  }

  // .substrait.ProjectRel project = 7;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_project(), output);
  }

  // .substrait.SetRel set = 8;
  if (has_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_set(), output);
  }

  // .substrait.ExtensionSingleRel extension_single = 9;
  if (has_extension_single()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_extension_single(), output);
  }

  // .substrait.ExtensionMultiRel extension_multi = 10;
  if (has_extension_multi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_extension_multi(), output);
  }

  // .substrait.ExtensionLeafRel extension_leaf = 11;
  if (has_extension_leaf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_extension_leaf(), output);
  }

  // .substrait.CrossRel cross = 12;
  if (has_cross()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_cross(), output);
  }

  // .substrait.HashJoinRel hash_join = 13;
  if (has_hash_join()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_hash_join(), output);
  }

  // .substrait.MergeJoinRel merge_join = 14;
  if (has_merge_join()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_merge_join(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Rel)
}

::google::protobuf::uint8* Rel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Rel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.ReadRel read = 1;
  if (has_read()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_read(), deterministic, target);
  }

  // .substrait.FilterRel filter = 2;
  if (has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_filter(), deterministic, target);
  }

  // .substrait.FetchRel fetch = 3;
  if (has_fetch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fetch(), deterministic, target);
  }

  // .substrait.AggregateRel aggregate = 4;
  if (has_aggregate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_aggregate(), deterministic, target);
  }

  // .substrait.SortRel sort = 5;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_sort(), deterministic, target);
  }

  // .substrait.JoinRel join = 6;
  if (has_join()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_join(), deterministic, target);
  }

  // .substrait.ProjectRel project = 7;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_project(), deterministic, target);
  }

  // .substrait.SetRel set = 8;
  if (has_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_set(), deterministic, target);
  }

  // .substrait.ExtensionSingleRel extension_single = 9;
  if (has_extension_single()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_extension_single(), deterministic, target);
  }

  // .substrait.ExtensionMultiRel extension_multi = 10;
  if (has_extension_multi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_extension_multi(), deterministic, target);
  }

  // .substrait.ExtensionLeafRel extension_leaf = 11;
  if (has_extension_leaf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_extension_leaf(), deterministic, target);
  }

  // .substrait.CrossRel cross = 12;
  if (has_cross()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_cross(), deterministic, target);
  }

  // .substrait.HashJoinRel hash_join = 13;
  if (has_hash_join()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_hash_join(), deterministic, target);
  }

  // .substrait.MergeJoinRel merge_join = 14;
  if (has_merge_join()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_merge_join(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Rel)
  return target;
}

size_t Rel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Rel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (rel_type_case()) {
    // .substrait.ReadRel read = 1;
    case kRead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.read_);
      break;
    }
    // .substrait.FilterRel filter = 2;
    case kFilter: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.filter_);
      break;
    }
    // .substrait.FetchRel fetch = 3;
    case kFetch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.fetch_);
      break;
    }
    // .substrait.AggregateRel aggregate = 4;
    case kAggregate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.aggregate_);
      break;
    }
    // .substrait.SortRel sort = 5;
    case kSort: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.sort_);
      break;
    }
    // .substrait.JoinRel join = 6;
    case kJoin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.join_);
      break;
    }
    // .substrait.ProjectRel project = 7;
    case kProject: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.project_);
      break;
    }
    // .substrait.SetRel set = 8;
    case kSet: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.set_);
      break;
    }
    // .substrait.ExtensionSingleRel extension_single = 9;
    case kExtensionSingle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.extension_single_);
      break;
    }
    // .substrait.ExtensionMultiRel extension_multi = 10;
    case kExtensionMulti: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.extension_multi_);
      break;
    }
    // .substrait.ExtensionLeafRel extension_leaf = 11;
    case kExtensionLeaf: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.extension_leaf_);
      break;
    }
    // .substrait.CrossRel cross = 12;
    case kCross: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.cross_);
      break;
    }
    // .substrait.HashJoinRel hash_join = 13;
    case kHashJoin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.hash_join_);
      break;
    }
    // .substrait.MergeJoinRel merge_join = 14;
    case kMergeJoin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rel_type_.merge_join_);
      break;
    }
    case REL_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Rel)
  GOOGLE_DCHECK_NE(&from, this);
  const Rel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Rel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Rel)
    MergeFrom(*source);
  }
}

void Rel::MergeFrom(const Rel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Rel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.rel_type_case()) {
    case kRead: {
      mutable_read()->::substrait::ReadRel::MergeFrom(from.read());
      break;
    }
    case kFilter: {
      mutable_filter()->::substrait::FilterRel::MergeFrom(from.filter());
      break;
    }
    case kFetch: {
      mutable_fetch()->::substrait::FetchRel::MergeFrom(from.fetch());
      break;
    }
    case kAggregate: {
      mutable_aggregate()->::substrait::AggregateRel::MergeFrom(from.aggregate());
      break;
    }
    case kSort: {
      mutable_sort()->::substrait::SortRel::MergeFrom(from.sort());
      break;
    }
    case kJoin: {
      mutable_join()->::substrait::JoinRel::MergeFrom(from.join());
      break;
    }
    case kProject: {
      mutable_project()->::substrait::ProjectRel::MergeFrom(from.project());
      break;
    }
    case kSet: {
      mutable_set()->::substrait::SetRel::MergeFrom(from.set());
      break;
    }
    case kExtensionSingle: {
      mutable_extension_single()->::substrait::ExtensionSingleRel::MergeFrom(from.extension_single());
      break;
    }
    case kExtensionMulti: {
      mutable_extension_multi()->::substrait::ExtensionMultiRel::MergeFrom(from.extension_multi());
      break;
    }
    case kExtensionLeaf: {
      mutable_extension_leaf()->::substrait::ExtensionLeafRel::MergeFrom(from.extension_leaf());
      break;
    }
    case kCross: {
      mutable_cross()->::substrait::CrossRel::MergeFrom(from.cross());
      break;
    }
    case kHashJoin: {
      mutable_hash_join()->::substrait::HashJoinRel::MergeFrom(from.hash_join());
      break;
    }
    case kMergeJoin: {
      mutable_merge_join()->::substrait::MergeJoinRel::MergeFrom(from.merge_join());
      break;
    }
    case REL_TYPE_NOT_SET: {
      break;
    }
  }
}

void Rel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Rel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rel::CopyFrom(const Rel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Rel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rel::IsInitialized() const {
  return true;
}

void Rel::Swap(Rel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rel::InternalSwap(Rel* other) {
  using std::swap;
  swap(rel_type_, other->rel_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Rel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NamedObjectWrite::InitAsDefaultInstance() {
  ::substrait::_NamedObjectWrite_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void NamedObjectWrite::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NamedObjectWrite::kNamesFieldNumber;
const int NamedObjectWrite::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NamedObjectWrite::NamedObjectWrite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_NamedObjectWrite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.NamedObjectWrite)
}
NamedObjectWrite::NamedObjectWrite(const NamedObjectWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.NamedObjectWrite)
}

void NamedObjectWrite::SharedCtor() {
  advanced_extension_ = NULL;
}

NamedObjectWrite::~NamedObjectWrite() {
  // @@protoc_insertion_point(destructor:substrait.NamedObjectWrite)
  SharedDtor();
}

void NamedObjectWrite::SharedDtor() {
  if (this != internal_default_instance()) delete advanced_extension_;
}

void NamedObjectWrite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NamedObjectWrite::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NamedObjectWrite& NamedObjectWrite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_NamedObjectWrite.base);
  return *internal_default_instance();
}


void NamedObjectWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.NamedObjectWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  _internal_metadata_.Clear();
}

bool NamedObjectWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.NamedObjectWrite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.NamedObjectWrite.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.NamedObjectWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.NamedObjectWrite)
  return false;
#undef DO_
}

void NamedObjectWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.NamedObjectWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.NamedObjectWrite.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.NamedObjectWrite)
}

::google::protobuf::uint8* NamedObjectWrite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.NamedObjectWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.NamedObjectWrite.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.NamedObjectWrite)
  return target;
}

size_t NamedObjectWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.NamedObjectWrite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NamedObjectWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.NamedObjectWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const NamedObjectWrite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NamedObjectWrite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.NamedObjectWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.NamedObjectWrite)
    MergeFrom(*source);
  }
}

void NamedObjectWrite::MergeFrom(const NamedObjectWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.NamedObjectWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
}

void NamedObjectWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.NamedObjectWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamedObjectWrite::CopyFrom(const NamedObjectWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.NamedObjectWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamedObjectWrite::IsInitialized() const {
  return true;
}

void NamedObjectWrite::Swap(NamedObjectWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NamedObjectWrite::InternalSwap(NamedObjectWrite* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  swap(advanced_extension_, other->advanced_extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NamedObjectWrite::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExtensionObject::InitAsDefaultInstance() {
  ::substrait::_ExtensionObject_default_instance_._instance.get_mutable()->detail_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ExtensionObject::clear_detail() {
  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExtensionObject::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExtensionObject::ExtensionObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.ExtensionObject)
}
ExtensionObject::ExtensionObject(const ExtensionObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detail()) {
    detail_ = new ::google::protobuf::Any(*from.detail_);
  } else {
    detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.ExtensionObject)
}

void ExtensionObject::SharedCtor() {
  detail_ = NULL;
}

ExtensionObject::~ExtensionObject() {
  // @@protoc_insertion_point(destructor:substrait.ExtensionObject)
  SharedDtor();
}

void ExtensionObject::SharedDtor() {
  if (this != internal_default_instance()) delete detail_;
}

void ExtensionObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExtensionObject::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExtensionObject& ExtensionObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_ExtensionObject.base);
  return *internal_default_instance();
}


void ExtensionObject::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.ExtensionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && detail_ != NULL) {
    delete detail_;
  }
  detail_ = NULL;
  _internal_metadata_.Clear();
}

bool ExtensionObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.ExtensionObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any detail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.ExtensionObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.ExtensionObject)
  return false;
#undef DO_
}

void ExtensionObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.ExtensionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any detail = 1;
  if (this->has_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.ExtensionObject)
}

::google::protobuf::uint8* ExtensionObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.ExtensionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any detail = 1;
  if (this->has_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.ExtensionObject)
  return target;
}

size_t ExtensionObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.ExtensionObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Any detail = 1;
  if (this->has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtensionObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.ExtensionObject)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtensionObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtensionObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.ExtensionObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.ExtensionObject)
    MergeFrom(*source);
  }
}

void ExtensionObject::MergeFrom(const ExtensionObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.ExtensionObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_detail()) {
    mutable_detail()->::google::protobuf::Any::MergeFrom(from.detail());
  }
}

void ExtensionObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.ExtensionObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtensionObject::CopyFrom(const ExtensionObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.ExtensionObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtensionObject::IsInitialized() const {
  return true;
}

void ExtensionObject::Swap(ExtensionObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtensionObject::InternalSwap(ExtensionObject* other) {
  using std::swap;
  swap(detail_, other->detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExtensionObject::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DdlRel::InitAsDefaultInstance() {
  ::substrait::_DdlRel_default_instance_.named_object_ = const_cast< ::substrait::NamedObjectWrite*>(
      ::substrait::NamedObjectWrite::internal_default_instance());
  ::substrait::_DdlRel_default_instance_.extension_object_ = const_cast< ::substrait::ExtensionObject*>(
      ::substrait::ExtensionObject::internal_default_instance());
  ::substrait::_DdlRel_default_instance_._instance.get_mutable()->table_schema_ = const_cast< ::substrait::NamedStruct*>(
      ::substrait::NamedStruct::internal_default_instance());
  ::substrait::_DdlRel_default_instance_._instance.get_mutable()->table_defaults_ = const_cast< ::substrait::Expression_Literal_Struct*>(
      ::substrait::Expression_Literal_Struct::internal_default_instance());
  ::substrait::_DdlRel_default_instance_._instance.get_mutable()->view_definition_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
void DdlRel::set_allocated_named_object(::substrait::NamedObjectWrite* named_object) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_write_type();
  if (named_object) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      named_object = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, named_object, submessage_arena);
    }
    set_has_named_object();
    write_type_.named_object_ = named_object;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.DdlRel.named_object)
}
void DdlRel::set_allocated_extension_object(::substrait::ExtensionObject* extension_object) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_write_type();
  if (extension_object) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension_object = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension_object, submessage_arena);
    }
    set_has_extension_object();
    write_type_.extension_object_ = extension_object;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.DdlRel.extension_object)
}
void DdlRel::clear_table_schema() {
  if (GetArenaNoVirtual() == NULL && table_schema_ != NULL) {
    delete table_schema_;
  }
  table_schema_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DdlRel::kNamedObjectFieldNumber;
const int DdlRel::kExtensionObjectFieldNumber;
const int DdlRel::kTableSchemaFieldNumber;
const int DdlRel::kTableDefaultsFieldNumber;
const int DdlRel::kObjectFieldNumber;
const int DdlRel::kOpFieldNumber;
const int DdlRel::kViewDefinitionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DdlRel::DdlRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_DdlRel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.DdlRel)
}
DdlRel::DdlRel(const DdlRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_schema()) {
    table_schema_ = new ::substrait::NamedStruct(*from.table_schema_);
  } else {
    table_schema_ = NULL;
  }
  if (from.has_table_defaults()) {
    table_defaults_ = new ::substrait::Expression_Literal_Struct(*from.table_defaults_);
  } else {
    table_defaults_ = NULL;
  }
  if (from.has_view_definition()) {
    view_definition_ = new ::substrait::Rel(*from.view_definition_);
  } else {
    view_definition_ = NULL;
  }
  ::memcpy(&object_, &from.object_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&object_)) + sizeof(op_));
  clear_has_write_type();
  switch (from.write_type_case()) {
    case kNamedObject: {
      mutable_named_object()->::substrait::NamedObjectWrite::MergeFrom(from.named_object());
      break;
    }
    case kExtensionObject: {
      mutable_extension_object()->::substrait::ExtensionObject::MergeFrom(from.extension_object());
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.DdlRel)
}

void DdlRel::SharedCtor() {
  ::memset(&table_schema_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&table_schema_)) + sizeof(op_));
  clear_has_write_type();
}

DdlRel::~DdlRel() {
  // @@protoc_insertion_point(destructor:substrait.DdlRel)
  SharedDtor();
}

void DdlRel::SharedDtor() {
  if (this != internal_default_instance()) delete table_schema_;
  if (this != internal_default_instance()) delete table_defaults_;
  if (this != internal_default_instance()) delete view_definition_;
  if (has_write_type()) {
    clear_write_type();
  }
}

void DdlRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DdlRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DdlRel& DdlRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_DdlRel.base);
  return *internal_default_instance();
}


void DdlRel::clear_write_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.DdlRel)
  switch (write_type_case()) {
    case kNamedObject: {
      delete write_type_.named_object_;
      break;
    }
    case kExtensionObject: {
      delete write_type_.extension_object_;
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = WRITE_TYPE_NOT_SET;
}


void DdlRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.DdlRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && table_schema_ != NULL) {
    delete table_schema_;
  }
  table_schema_ = NULL;
  if (GetArenaNoVirtual() == NULL && table_defaults_ != NULL) {
    delete table_defaults_;
  }
  table_defaults_ = NULL;
  if (GetArenaNoVirtual() == NULL && view_definition_ != NULL) {
    delete view_definition_;
  }
  view_definition_ = NULL;
  ::memset(&object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&object_)) + sizeof(op_));
  clear_write_type();
  _internal_metadata_.Clear();
}

bool DdlRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.DdlRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.NamedObjectWrite named_object = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_named_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExtensionObject extension_object = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.NamedStruct table_schema = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.Struct table_defaults = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_defaults()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.DdlRel.DdlObject object = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_object(static_cast< ::substrait::DdlRel_DdlObject >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.DdlRel.DdlOp op = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::substrait::DdlRel_DdlOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel view_definition = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_definition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.DdlRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.DdlRel)
  return false;
#undef DO_
}

void DdlRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.DdlRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.NamedObjectWrite named_object = 1;
  if (has_named_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_named_object(), output);
  }

  // .substrait.ExtensionObject extension_object = 2;
  if (has_extension_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_extension_object(), output);
  }

  // .substrait.NamedStruct table_schema = 3;
  if (this->has_table_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_table_schema(), output);
  }

  // .substrait.Expression.Literal.Struct table_defaults = 4;
  if (this->has_table_defaults()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_table_defaults(), output);
  }

  // .substrait.DdlRel.DdlObject object = 5;
  if (this->object() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->object(), output);
  }

  // .substrait.DdlRel.DdlOp op = 6;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->op(), output);
  }

  // .substrait.Rel view_definition = 7;
  if (this->has_view_definition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_view_definition(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.DdlRel)
}

::google::protobuf::uint8* DdlRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.DdlRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.NamedObjectWrite named_object = 1;
  if (has_named_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_named_object(), deterministic, target);
  }

  // .substrait.ExtensionObject extension_object = 2;
  if (has_extension_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_extension_object(), deterministic, target);
  }

  // .substrait.NamedStruct table_schema = 3;
  if (this->has_table_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_table_schema(), deterministic, target);
  }

  // .substrait.Expression.Literal.Struct table_defaults = 4;
  if (this->has_table_defaults()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_table_defaults(), deterministic, target);
  }

  // .substrait.DdlRel.DdlObject object = 5;
  if (this->object() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->object(), target);
  }

  // .substrait.DdlRel.DdlOp op = 6;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->op(), target);
  }

  // .substrait.Rel view_definition = 7;
  if (this->has_view_definition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_view_definition(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.DdlRel)
  return target;
}

size_t DdlRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.DdlRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.NamedStruct table_schema = 3;
  if (this->has_table_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_schema_);
  }

  // .substrait.Expression.Literal.Struct table_defaults = 4;
  if (this->has_table_defaults()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_defaults_);
  }

  // .substrait.Rel view_definition = 7;
  if (this->has_view_definition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *view_definition_);
  }

  // .substrait.DdlRel.DdlObject object = 5;
  if (this->object() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->object());
  }

  // .substrait.DdlRel.DdlOp op = 6;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  switch (write_type_case()) {
    // .substrait.NamedObjectWrite named_object = 1;
    case kNamedObject: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *write_type_.named_object_);
      break;
    }
    // .substrait.ExtensionObject extension_object = 2;
    case kExtensionObject: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *write_type_.extension_object_);
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DdlRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.DdlRel)
  GOOGLE_DCHECK_NE(&from, this);
  const DdlRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DdlRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.DdlRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.DdlRel)
    MergeFrom(*source);
  }
}

void DdlRel::MergeFrom(const DdlRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.DdlRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_table_schema()) {
    mutable_table_schema()->::substrait::NamedStruct::MergeFrom(from.table_schema());
  }
  if (from.has_table_defaults()) {
    mutable_table_defaults()->::substrait::Expression_Literal_Struct::MergeFrom(from.table_defaults());
  }
  if (from.has_view_definition()) {
    mutable_view_definition()->::substrait::Rel::MergeFrom(from.view_definition());
  }
  if (from.object() != 0) {
    set_object(from.object());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  switch (from.write_type_case()) {
    case kNamedObject: {
      mutable_named_object()->::substrait::NamedObjectWrite::MergeFrom(from.named_object());
      break;
    }
    case kExtensionObject: {
      mutable_extension_object()->::substrait::ExtensionObject::MergeFrom(from.extension_object());
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
}

void DdlRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.DdlRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DdlRel::CopyFrom(const DdlRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.DdlRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DdlRel::IsInitialized() const {
  return true;
}

void DdlRel::Swap(DdlRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DdlRel::InternalSwap(DdlRel* other) {
  using std::swap;
  swap(table_schema_, other->table_schema_);
  swap(table_defaults_, other->table_defaults_);
  swap(view_definition_, other->view_definition_);
  swap(object_, other->object_);
  swap(op_, other->op_);
  swap(write_type_, other->write_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DdlRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteRel::InitAsDefaultInstance() {
  ::substrait::_WriteRel_default_instance_.named_table_ = const_cast< ::substrait::NamedObjectWrite*>(
      ::substrait::NamedObjectWrite::internal_default_instance());
  ::substrait::_WriteRel_default_instance_.extension_table_ = const_cast< ::substrait::ExtensionObject*>(
      ::substrait::ExtensionObject::internal_default_instance());
  ::substrait::_WriteRel_default_instance_._instance.get_mutable()->table_schema_ = const_cast< ::substrait::NamedStruct*>(
      ::substrait::NamedStruct::internal_default_instance());
  ::substrait::_WriteRel_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
void WriteRel::set_allocated_named_table(::substrait::NamedObjectWrite* named_table) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_write_type();
  if (named_table) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      named_table = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, named_table, submessage_arena);
    }
    set_has_named_table();
    write_type_.named_table_ = named_table;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.WriteRel.named_table)
}
void WriteRel::set_allocated_extension_table(::substrait::ExtensionObject* extension_table) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_write_type();
  if (extension_table) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extension_table = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extension_table, submessage_arena);
    }
    set_has_extension_table();
    write_type_.extension_table_ = extension_table;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.WriteRel.extension_table)
}
void WriteRel::clear_table_schema() {
  if (GetArenaNoVirtual() == NULL && table_schema_ != NULL) {
    delete table_schema_;
  }
  table_schema_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteRel::kNamedTableFieldNumber;
const int WriteRel::kExtensionTableFieldNumber;
const int WriteRel::kTableSchemaFieldNumber;
const int WriteRel::kOpFieldNumber;
const int WriteRel::kInputFieldNumber;
const int WriteRel::kOutputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteRel::WriteRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_WriteRel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.WriteRel)
}
WriteRel::WriteRel(const WriteRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_table_schema()) {
    table_schema_ = new ::substrait::NamedStruct(*from.table_schema_);
  } else {
    table_schema_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  ::memcpy(&op_, &from.op_,
    static_cast<size_t>(reinterpret_cast<char*>(&output_) -
    reinterpret_cast<char*>(&op_)) + sizeof(output_));
  clear_has_write_type();
  switch (from.write_type_case()) {
    case kNamedTable: {
      mutable_named_table()->::substrait::NamedObjectWrite::MergeFrom(from.named_table());
      break;
    }
    case kExtensionTable: {
      mutable_extension_table()->::substrait::ExtensionObject::MergeFrom(from.extension_table());
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.WriteRel)
}

void WriteRel::SharedCtor() {
  ::memset(&table_schema_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_) -
      reinterpret_cast<char*>(&table_schema_)) + sizeof(output_));
  clear_has_write_type();
}

WriteRel::~WriteRel() {
  // @@protoc_insertion_point(destructor:substrait.WriteRel)
  SharedDtor();
}

void WriteRel::SharedDtor() {
  if (this != internal_default_instance()) delete table_schema_;
  if (this != internal_default_instance()) delete input_;
  if (has_write_type()) {
    clear_write_type();
  }
}

void WriteRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteRel& WriteRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_WriteRel.base);
  return *internal_default_instance();
}


void WriteRel::clear_write_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.WriteRel)
  switch (write_type_case()) {
    case kNamedTable: {
      delete write_type_.named_table_;
      break;
    }
    case kExtensionTable: {
      delete write_type_.extension_table_;
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = WRITE_TYPE_NOT_SET;
}


void WriteRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.WriteRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && table_schema_ != NULL) {
    delete table_schema_;
  }
  table_schema_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  ::memset(&op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_) -
      reinterpret_cast<char*>(&op_)) + sizeof(output_));
  clear_write_type();
  _internal_metadata_.Clear();
}

bool WriteRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.WriteRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.NamedObjectWrite named_table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_named_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.ExtensionObject extension_table = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_extension_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.NamedStruct table_schema = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_table_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.WriteRel.WriteOp op = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::substrait::WriteRel_WriteOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel input = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.WriteRel.OutputMode output = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_output(static_cast< ::substrait::WriteRel_OutputMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.WriteRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.WriteRel)
  return false;
#undef DO_
}

void WriteRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.WriteRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.NamedObjectWrite named_table = 1;
  if (has_named_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_named_table(), output);
  }

  // .substrait.ExtensionObject extension_table = 2;
  if (has_extension_table()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_extension_table(), output);
  }

  // .substrait.NamedStruct table_schema = 3;
  if (this->has_table_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_table_schema(), output);
  }

  // .substrait.WriteRel.WriteOp op = 4;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op(), output);
  }

  // .substrait.Rel input = 5;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_input(), output);
  }

  // .substrait.WriteRel.OutputMode output = 6;
  if (this->output() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->output(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.WriteRel)
}

::google::protobuf::uint8* WriteRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.WriteRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.NamedObjectWrite named_table = 1;
  if (has_named_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_named_table(), deterministic, target);
  }

  // .substrait.ExtensionObject extension_table = 2;
  if (has_extension_table()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_extension_table(), deterministic, target);
  }

  // .substrait.NamedStruct table_schema = 3;
  if (this->has_table_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_table_schema(), deterministic, target);
  }

  // .substrait.WriteRel.WriteOp op = 4;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op(), target);
  }

  // .substrait.Rel input = 5;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_input(), deterministic, target);
  }

  // .substrait.WriteRel.OutputMode output = 6;
  if (this->output() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->output(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.WriteRel)
  return target;
}

size_t WriteRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.WriteRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.NamedStruct table_schema = 3;
  if (this->has_table_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *table_schema_);
  }

  // .substrait.Rel input = 5;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.WriteRel.WriteOp op = 4;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  // .substrait.WriteRel.OutputMode output = 6;
  if (this->output() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->output());
  }

  switch (write_type_case()) {
    // .substrait.NamedObjectWrite named_table = 1;
    case kNamedTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *write_type_.named_table_);
      break;
    }
    // .substrait.ExtensionObject extension_table = 2;
    case kExtensionTable: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *write_type_.extension_table_);
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.WriteRel)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.WriteRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.WriteRel)
    MergeFrom(*source);
  }
}

void WriteRel::MergeFrom(const WriteRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.WriteRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_table_schema()) {
    mutable_table_schema()->::substrait::NamedStruct::MergeFrom(from.table_schema());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
  if (from.output() != 0) {
    set_output(from.output());
  }
  switch (from.write_type_case()) {
    case kNamedTable: {
      mutable_named_table()->::substrait::NamedObjectWrite::MergeFrom(from.named_table());
      break;
    }
    case kExtensionTable: {
      mutable_extension_table()->::substrait::ExtensionObject::MergeFrom(from.extension_table());
      break;
    }
    case WRITE_TYPE_NOT_SET: {
      break;
    }
  }
}

void WriteRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.WriteRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteRel::CopyFrom(const WriteRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.WriteRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteRel::IsInitialized() const {
  return true;
}

void WriteRel::Swap(WriteRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteRel::InternalSwap(WriteRel* other) {
  using std::swap;
  swap(table_schema_, other->table_schema_);
  swap(input_, other->input_);
  swap(op_, other->op_);
  swap(output_, other->output_);
  swap(write_type_, other->write_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HashJoinRel::InitAsDefaultInstance() {
  ::substrait::_HashJoinRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_HashJoinRel_default_instance_._instance.get_mutable()->left_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_HashJoinRel_default_instance_._instance.get_mutable()->right_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_HashJoinRel_default_instance_._instance.get_mutable()->post_join_filter_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_HashJoinRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void HashJoinRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HashJoinRel::kCommonFieldNumber;
const int HashJoinRel::kLeftFieldNumber;
const int HashJoinRel::kRightFieldNumber;
const int HashJoinRel::kLeftKeysFieldNumber;
const int HashJoinRel::kRightKeysFieldNumber;
const int HashJoinRel::kPostJoinFilterFieldNumber;
const int HashJoinRel::kTypeFieldNumber;
const int HashJoinRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HashJoinRel::HashJoinRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.HashJoinRel)
}
HashJoinRel::HashJoinRel(const HashJoinRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      left_keys_(from.left_keys_),
      right_keys_(from.right_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_left()) {
    left_ = new ::substrait::Rel(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::substrait::Rel(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_post_join_filter()) {
    post_join_filter_ = new ::substrait::Expression(*from.post_join_filter_);
  } else {
    post_join_filter_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:substrait.HashJoinRel)
}

void HashJoinRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&common_)) + sizeof(type_));
}

HashJoinRel::~HashJoinRel() {
  // @@protoc_insertion_point(destructor:substrait.HashJoinRel)
  SharedDtor();
}

void HashJoinRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete post_join_filter_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void HashJoinRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HashJoinRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HashJoinRel& HashJoinRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void HashJoinRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.HashJoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  left_keys_.Clear();
  right_keys_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  if (GetArenaNoVirtual() == NULL && post_join_filter_ != NULL) {
    delete post_join_filter_;
  }
  post_join_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool HashJoinRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.HashJoinRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression.FieldReference left_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_left_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression.FieldReference right_keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_right_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression post_join_filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_post_join_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.HashJoinRel.JoinType type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::substrait::HashJoinRel_JoinType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.HashJoinRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.HashJoinRel)
  return false;
#undef DO_
}

void HashJoinRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.HashJoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_left(), output);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right(), output);
  }

  // repeated .substrait.Expression.FieldReference left_keys = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->left_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->left_keys(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.Expression.FieldReference right_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->right_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->right_keys(static_cast<int>(i)),
      output);
  }

  // .substrait.Expression post_join_filter = 6;
  if (this->has_post_join_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_post_join_filter(), output);
  }

  // .substrait.HashJoinRel.JoinType type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->type(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.HashJoinRel)
}

::google::protobuf::uint8* HashJoinRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.HashJoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_left(), deterministic, target);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right(), deterministic, target);
  }

  // repeated .substrait.Expression.FieldReference left_keys = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->left_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->left_keys(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.Expression.FieldReference right_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->right_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->right_keys(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Expression post_join_filter = 6;
  if (this->has_post_join_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_post_join_filter(), deterministic, target);
  }

  // .substrait.HashJoinRel.JoinType type = 7;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->type(), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.HashJoinRel)
  return target;
}

size_t HashJoinRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.HashJoinRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.FieldReference left_keys = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->left_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->left_keys(static_cast<int>(i)));
    }
  }

  // repeated .substrait.Expression.FieldReference right_keys = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->right_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->right_keys(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .substrait.Expression post_join_filter = 6;
  if (this->has_post_join_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *post_join_filter_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // .substrait.HashJoinRel.JoinType type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HashJoinRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.HashJoinRel)
  GOOGLE_DCHECK_NE(&from, this);
  const HashJoinRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HashJoinRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.HashJoinRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.HashJoinRel)
    MergeFrom(*source);
  }
}

void HashJoinRel::MergeFrom(const HashJoinRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.HashJoinRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  left_keys_.MergeFrom(from.left_keys_);
  right_keys_.MergeFrom(from.right_keys_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_left()) {
    mutable_left()->::substrait::Rel::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::substrait::Rel::MergeFrom(from.right());
  }
  if (from.has_post_join_filter()) {
    mutable_post_join_filter()->::substrait::Expression::MergeFrom(from.post_join_filter());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void HashJoinRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.HashJoinRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HashJoinRel::CopyFrom(const HashJoinRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.HashJoinRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashJoinRel::IsInitialized() const {
  return true;
}

void HashJoinRel::Swap(HashJoinRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HashJoinRel::InternalSwap(HashJoinRel* other) {
  using std::swap;
  CastToBase(&left_keys_)->InternalSwap(CastToBase(&other->left_keys_));
  CastToBase(&right_keys_)->InternalSwap(CastToBase(&other->right_keys_));
  swap(common_, other->common_);
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(post_join_filter_, other->post_join_filter_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HashJoinRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MergeJoinRel::InitAsDefaultInstance() {
  ::substrait::_MergeJoinRel_default_instance_._instance.get_mutable()->common_ = const_cast< ::substrait::RelCommon*>(
      ::substrait::RelCommon::internal_default_instance());
  ::substrait::_MergeJoinRel_default_instance_._instance.get_mutable()->left_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_MergeJoinRel_default_instance_._instance.get_mutable()->right_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
  ::substrait::_MergeJoinRel_default_instance_._instance.get_mutable()->post_join_filter_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_MergeJoinRel_default_instance_._instance.get_mutable()->advanced_extension_ = const_cast< ::substrait::extensions::AdvancedExtension*>(
      ::substrait::extensions::AdvancedExtension::internal_default_instance());
}
void MergeJoinRel::clear_advanced_extension() {
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MergeJoinRel::kCommonFieldNumber;
const int MergeJoinRel::kLeftFieldNumber;
const int MergeJoinRel::kRightFieldNumber;
const int MergeJoinRel::kLeftKeysFieldNumber;
const int MergeJoinRel::kRightKeysFieldNumber;
const int MergeJoinRel::kPostJoinFilterFieldNumber;
const int MergeJoinRel::kTypeFieldNumber;
const int MergeJoinRel::kAdvancedExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MergeJoinRel::MergeJoinRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.MergeJoinRel)
}
MergeJoinRel::MergeJoinRel(const MergeJoinRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      left_keys_(from.left_keys_),
      right_keys_(from.right_keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_common()) {
    common_ = new ::substrait::RelCommon(*from.common_);
  } else {
    common_ = NULL;
  }
  if (from.has_left()) {
    left_ = new ::substrait::Rel(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::substrait::Rel(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_post_join_filter()) {
    post_join_filter_ = new ::substrait::Expression(*from.post_join_filter_);
  } else {
    post_join_filter_ = NULL;
  }
  if (from.has_advanced_extension()) {
    advanced_extension_ = new ::substrait::extensions::AdvancedExtension(*from.advanced_extension_);
  } else {
    advanced_extension_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:substrait.MergeJoinRel)
}

void MergeJoinRel::SharedCtor() {
  ::memset(&common_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&common_)) + sizeof(type_));
}

MergeJoinRel::~MergeJoinRel() {
  // @@protoc_insertion_point(destructor:substrait.MergeJoinRel)
  SharedDtor();
}

void MergeJoinRel::SharedDtor() {
  if (this != internal_default_instance()) delete common_;
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete post_join_filter_;
  if (this != internal_default_instance()) delete advanced_extension_;
}

void MergeJoinRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MergeJoinRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MergeJoinRel& MergeJoinRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void MergeJoinRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.MergeJoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  left_keys_.Clear();
  right_keys_.Clear();
  if (GetArenaNoVirtual() == NULL && common_ != NULL) {
    delete common_;
  }
  common_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  if (GetArenaNoVirtual() == NULL && post_join_filter_ != NULL) {
    delete post_join_filter_;
  }
  post_join_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && advanced_extension_ != NULL) {
    delete advanced_extension_;
  }
  advanced_extension_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool MergeJoinRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.MergeJoinRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.RelCommon common = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_common()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression.FieldReference left_keys = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_left_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression.FieldReference right_keys = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_right_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression post_join_filter = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_post_join_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.MergeJoinRel.JoinType type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::substrait::MergeJoinRel_JoinType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.extensions.AdvancedExtension advanced_extension = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_advanced_extension()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.MergeJoinRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.MergeJoinRel)
  return false;
#undef DO_
}

void MergeJoinRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.MergeJoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_common(), output);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_left(), output);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right(), output);
  }

  // repeated .substrait.Expression.FieldReference left_keys = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->left_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->left_keys(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.Expression.FieldReference right_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->right_keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->right_keys(static_cast<int>(i)),
      output);
  }

  // .substrait.Expression post_join_filter = 6;
  if (this->has_post_join_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_post_join_filter(), output);
  }

  // .substrait.MergeJoinRel.JoinType type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->type(), output);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_advanced_extension(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.MergeJoinRel)
}

::google::protobuf::uint8* MergeJoinRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.MergeJoinRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_common(), deterministic, target);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_left(), deterministic, target);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right(), deterministic, target);
  }

  // repeated .substrait.Expression.FieldReference left_keys = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->left_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->left_keys(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.Expression.FieldReference right_keys = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->right_keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->right_keys(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Expression post_join_filter = 6;
  if (this->has_post_join_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_post_join_filter(), deterministic, target);
  }

  // .substrait.MergeJoinRel.JoinType type = 7;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->type(), target);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_advanced_extension(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.MergeJoinRel)
  return target;
}

size_t MergeJoinRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.MergeJoinRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.FieldReference left_keys = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->left_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->left_keys(static_cast<int>(i)));
    }
  }

  // repeated .substrait.Expression.FieldReference right_keys = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->right_keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->right_keys(static_cast<int>(i)));
    }
  }

  // .substrait.RelCommon common = 1;
  if (this->has_common()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *common_);
  }

  // .substrait.Rel left = 2;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .substrait.Rel right = 3;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .substrait.Expression post_join_filter = 6;
  if (this->has_post_join_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *post_join_filter_);
  }

  // .substrait.extensions.AdvancedExtension advanced_extension = 10;
  if (this->has_advanced_extension()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *advanced_extension_);
  }

  // .substrait.MergeJoinRel.JoinType type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MergeJoinRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.MergeJoinRel)
  GOOGLE_DCHECK_NE(&from, this);
  const MergeJoinRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MergeJoinRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.MergeJoinRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.MergeJoinRel)
    MergeFrom(*source);
  }
}

void MergeJoinRel::MergeFrom(const MergeJoinRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.MergeJoinRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  left_keys_.MergeFrom(from.left_keys_);
  right_keys_.MergeFrom(from.right_keys_);
  if (from.has_common()) {
    mutable_common()->::substrait::RelCommon::MergeFrom(from.common());
  }
  if (from.has_left()) {
    mutable_left()->::substrait::Rel::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::substrait::Rel::MergeFrom(from.right());
  }
  if (from.has_post_join_filter()) {
    mutable_post_join_filter()->::substrait::Expression::MergeFrom(from.post_join_filter());
  }
  if (from.has_advanced_extension()) {
    mutable_advanced_extension()->::substrait::extensions::AdvancedExtension::MergeFrom(from.advanced_extension());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MergeJoinRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.MergeJoinRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MergeJoinRel::CopyFrom(const MergeJoinRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.MergeJoinRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MergeJoinRel::IsInitialized() const {
  return true;
}

void MergeJoinRel::Swap(MergeJoinRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MergeJoinRel::InternalSwap(MergeJoinRel* other) {
  using std::swap;
  CastToBase(&left_keys_)->InternalSwap(CastToBase(&other->left_keys_));
  CastToBase(&right_keys_)->InternalSwap(CastToBase(&other->right_keys_));
  swap(common_, other->common_);
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(post_join_filter_, other->post_join_filter_);
  swap(advanced_extension_, other->advanced_extension_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MergeJoinRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionArgument::InitAsDefaultInstance() {
  ::substrait::_FunctionArgument_default_instance_.enum__.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_FunctionArgument_default_instance_.type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_FunctionArgument_default_instance_.value_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
void FunctionArgument::set_allocated_type(::substrait::Type* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_arg_type();
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    set_has_type();
    arg_type_.type_ = type;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionArgument.type)
}
void FunctionArgument::clear_type() {
  if (has_type()) {
    delete arg_type_.type_;
    clear_has_arg_type();
  }
}
void FunctionArgument::set_allocated_value(::substrait::Expression* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_arg_type();
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    set_has_value();
    arg_type_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.FunctionArgument.value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionArgument::kEnumFieldNumber;
const int FunctionArgument::kTypeFieldNumber;
const int FunctionArgument::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionArgument::FunctionArgument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.FunctionArgument)
}
FunctionArgument::FunctionArgument(const FunctionArgument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_arg_type();
  switch (from.arg_type_case()) {
    case kEnum: {
      set_enum_(from.enum_());
      break;
    }
    case kType: {
      mutable_type()->::substrait::Type::MergeFrom(from.type());
      break;
    }
    case kValue: {
      mutable_value()->::substrait::Expression::MergeFrom(from.value());
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionArgument)
}

void FunctionArgument::SharedCtor() {
  clear_has_arg_type();
}

FunctionArgument::~FunctionArgument() {
  // @@protoc_insertion_point(destructor:substrait.FunctionArgument)
  SharedDtor();
}

void FunctionArgument::SharedDtor() {
  if (has_arg_type()) {
    clear_arg_type();
  }
}

void FunctionArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FunctionArgument::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionArgument& FunctionArgument::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void FunctionArgument::clear_arg_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.FunctionArgument)
  switch (arg_type_case()) {
    case kEnum: {
      arg_type_.enum__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kType: {
      delete arg_type_.type_;
      break;
    }
    case kValue: {
      delete arg_type_.value_;
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ARG_TYPE_NOT_SET;
}


void FunctionArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_arg_type();
  _internal_metadata_.Clear();
}

bool FunctionArgument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.FunctionArgument)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string enum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enum_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enum_().data(), static_cast<int>(this->enum_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.FunctionArgument.enum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.FunctionArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.FunctionArgument)
  return false;
#undef DO_
}

void FunctionArgument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.FunctionArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string enum = 1;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enum_().data(), static_cast<int>(this->enum_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionArgument.enum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->enum_(), output);
  }

  // .substrait.Type type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  // .substrait.Expression value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.FunctionArgument)
}

::google::protobuf::uint8* FunctionArgument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string enum = 1;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enum_().data(), static_cast<int>(this->enum_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionArgument.enum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->enum_(), target);
  }

  // .substrait.Type type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  // .substrait.Expression value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionArgument)
  return target;
}

size_t FunctionArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionArgument)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (arg_type_case()) {
    // string enum = 1;
    case kEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enum_());
      break;
    }
    // .substrait.Type type = 2;
    case kType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *arg_type_.type_);
      break;
    }
    // .substrait.Expression value = 3;
    case kValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *arg_type_.value_);
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionArgument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.FunctionArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionArgument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionArgument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.FunctionArgument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.FunctionArgument)
    MergeFrom(*source);
  }
}

void FunctionArgument::MergeFrom(const FunctionArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.arg_type_case()) {
    case kEnum: {
      set_enum_(from.enum_());
      break;
    }
    case kType: {
      mutable_type()->::substrait::Type::MergeFrom(from.type());
      break;
    }
    case kValue: {
      mutable_value()->::substrait::Expression::MergeFrom(from.value());
      break;
    }
    case ARG_TYPE_NOT_SET: {
      break;
    }
  }
}

void FunctionArgument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.FunctionArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionArgument::CopyFrom(const FunctionArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionArgument::IsInitialized() const {
  return true;
}

void FunctionArgument::Swap(FunctionArgument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionArgument::InternalSwap(FunctionArgument* other) {
  using std::swap;
  swap(arg_type_, other->arg_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FunctionArgument::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionOption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionOption::kNameFieldNumber;
const int FunctionOption::kPreferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionOption::FunctionOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_FunctionOption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.FunctionOption)
}
FunctionOption::FunctionOption(const FunctionOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      preference_(from.preference_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:substrait.FunctionOption)
}

void FunctionOption::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FunctionOption::~FunctionOption() {
  // @@protoc_insertion_point(destructor:substrait.FunctionOption)
  SharedDtor();
}

void FunctionOption::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FunctionOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FunctionOption::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionOption& FunctionOption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_FunctionOption.base);
  return *internal_default_instance();
}


void FunctionOption::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.FunctionOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  preference_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FunctionOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.FunctionOption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.FunctionOption.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string preference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_preference()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->preference(this->preference_size() - 1).data(),
            static_cast<int>(this->preference(this->preference_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.FunctionOption.preference"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.FunctionOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.FunctionOption)
  return false;
#undef DO_
}

void FunctionOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.FunctionOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionOption.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string preference = 2;
  for (int i = 0, n = this->preference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->preference(i).data(), static_cast<int>(this->preference(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionOption.preference");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->preference(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.FunctionOption)
}

::google::protobuf::uint8* FunctionOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.FunctionOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionOption.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string preference = 2;
  for (int i = 0, n = this->preference_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->preference(i).data(), static_cast<int>(this->preference(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.FunctionOption.preference");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->preference(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.FunctionOption)
  return target;
}

size_t FunctionOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.FunctionOption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string preference = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->preference_size());
  for (int i = 0, n = this->preference_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->preference(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.FunctionOption)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.FunctionOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.FunctionOption)
    MergeFrom(*source);
  }
}

void FunctionOption::MergeFrom(const FunctionOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.FunctionOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  preference_.MergeFrom(from.preference_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void FunctionOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.FunctionOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionOption::CopyFrom(const FunctionOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.FunctionOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionOption::IsInitialized() const {
  return true;
}

void FunctionOption::Swap(FunctionOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionOption::InternalSwap(FunctionOption* other) {
  using std::swap;
  preference_.InternalSwap(CastToBase(&other->preference_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FunctionOption::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Enum_Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Enum_Empty::Expression_Enum_Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Enum_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Enum.Empty)
}
Expression_Enum_Empty::Expression_Enum_Empty(const Expression_Enum_Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Enum.Empty)
}

void Expression_Enum_Empty::SharedCtor() {
}

Expression_Enum_Empty::~Expression_Enum_Empty() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Enum.Empty)
  SharedDtor();
}

void Expression_Enum_Empty::SharedDtor() {
}

void Expression_Enum_Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Enum_Empty::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Enum_Empty& Expression_Enum_Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Enum_Empty.base);
  return *internal_default_instance();
}


void Expression_Enum_Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Enum.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Expression_Enum_Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Enum.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Enum.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Enum.Empty)
  return false;
#undef DO_
}

void Expression_Enum_Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Enum.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Enum.Empty)
}

::google::protobuf::uint8* Expression_Enum_Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Enum.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Enum.Empty)
  return target;
}

size_t Expression_Enum_Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Enum.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Enum_Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Enum.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Enum_Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Enum_Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Enum.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Enum.Empty)
    MergeFrom(*source);
  }
}

void Expression_Enum_Empty::MergeFrom(const Expression_Enum_Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Enum.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Expression_Enum_Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Enum.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Enum_Empty::CopyFrom(const Expression_Enum_Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Enum.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Enum_Empty::IsInitialized() const {
  return true;
}

void Expression_Enum_Empty::Swap(Expression_Enum_Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Enum_Empty::InternalSwap(Expression_Enum_Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Enum_Empty::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Enum::InitAsDefaultInstance() {
  ::substrait::_Expression_Enum_default_instance_.specified_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Expression_Enum_default_instance_.unspecified_ = const_cast< ::substrait::Expression_Enum_Empty*>(
      ::substrait::Expression_Enum_Empty::internal_default_instance());
}
void Expression_Enum::set_allocated_unspecified(::substrait::Expression_Enum_Empty* unspecified) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_enum_kind();
  if (unspecified) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unspecified = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unspecified, submessage_arena);
    }
    set_has_unspecified();
    enum_kind_.unspecified_ = unspecified;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Enum.unspecified)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Enum::kSpecifiedFieldNumber;
const int Expression_Enum::kUnspecifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Enum::Expression_Enum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Enum.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Enum)
}
Expression_Enum::Expression_Enum(const Expression_Enum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_enum_kind();
  switch (from.enum_kind_case()) {
    case kSpecified: {
      set_specified(from.specified());
      break;
    }
    case kUnspecified: {
      mutable_unspecified()->::substrait::Expression_Enum_Empty::MergeFrom(from.unspecified());
      break;
    }
    case ENUM_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Enum)
}

void Expression_Enum::SharedCtor() {
  clear_has_enum_kind();
}

Expression_Enum::~Expression_Enum() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Enum)
  SharedDtor();
}

void Expression_Enum::SharedDtor() {
  if (has_enum_kind()) {
    clear_enum_kind();
  }
}

void Expression_Enum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Enum::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Enum& Expression_Enum::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Enum.base);
  return *internal_default_instance();
}


void Expression_Enum::clear_enum_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.Enum)
  switch (enum_kind_case()) {
    case kSpecified: {
      enum_kind_.specified_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kUnspecified: {
      delete enum_kind_.unspecified_;
      break;
    }
    case ENUM_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENUM_KIND_NOT_SET;
}


void Expression_Enum::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Enum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_enum_kind();
  _internal_metadata_.Clear();
}

bool Expression_Enum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Enum)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string specified = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_specified()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->specified().data(), static_cast<int>(this->specified().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.Enum.specified"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Enum.Empty unspecified = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unspecified()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Enum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Enum)
  return false;
#undef DO_
}

void Expression_Enum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Enum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string specified = 1;
  if (has_specified()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->specified().data(), static_cast<int>(this->specified().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Enum.specified");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->specified(), output);
  }

  // .substrait.Expression.Enum.Empty unspecified = 2;
  if (has_unspecified()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_unspecified(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Enum)
}

::google::protobuf::uint8* Expression_Enum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Enum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string specified = 1;
  if (has_specified()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->specified().data(), static_cast<int>(this->specified().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Enum.specified");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->specified(), target);
  }

  // .substrait.Expression.Enum.Empty unspecified = 2;
  if (has_unspecified()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_unspecified(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Enum)
  return target;
}

size_t Expression_Enum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Enum)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (enum_kind_case()) {
    // string specified = 1;
    case kSpecified: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->specified());
      break;
    }
    // .substrait.Expression.Enum.Empty unspecified = 2;
    case kUnspecified: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *enum_kind_.unspecified_);
      break;
    }
    case ENUM_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Enum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Enum)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Enum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Enum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Enum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Enum)
    MergeFrom(*source);
  }
}

void Expression_Enum::MergeFrom(const Expression_Enum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Enum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.enum_kind_case()) {
    case kSpecified: {
      set_specified(from.specified());
      break;
    }
    case kUnspecified: {
      mutable_unspecified()->::substrait::Expression_Enum_Empty::MergeFrom(from.unspecified());
      break;
    }
    case ENUM_KIND_NOT_SET: {
      break;
    }
  }
}

void Expression_Enum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Enum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Enum::CopyFrom(const Expression_Enum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Enum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Enum::IsInitialized() const {
  return true;
}

void Expression_Enum::Swap(Expression_Enum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Enum::InternalSwap(Expression_Enum* other) {
  using std::swap;
  swap(enum_kind_, other->enum_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Enum::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_VarChar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_VarChar::kValueFieldNumber;
const int Expression_Literal_VarChar::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_VarChar::Expression_Literal_VarChar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_VarChar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.VarChar)
}
Expression_Literal_VarChar::Expression_Literal_VarChar(const Expression_Literal_VarChar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  length_ = from.length_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.VarChar)
}

void Expression_Literal_VarChar::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = 0u;
}

Expression_Literal_VarChar::~Expression_Literal_VarChar() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.VarChar)
  SharedDtor();
}

void Expression_Literal_VarChar::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression_Literal_VarChar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_VarChar::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_VarChar& Expression_Literal_VarChar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_VarChar.base);
  return *internal_default_instance();
}


void Expression_Literal_VarChar::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.VarChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = 0u;
  _internal_metadata_.Clear();
}

bool Expression_Literal_VarChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.VarChar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.Literal.VarChar.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.VarChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.VarChar)
  return false;
#undef DO_
}

void Expression_Literal_VarChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.VarChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Literal.VarChar.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.VarChar)
}

::google::protobuf::uint8* Expression_Literal_VarChar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.VarChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Literal.VarChar.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.VarChar)
  return target;
}

size_t Expression_Literal_VarChar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.VarChar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // uint32 length = 2;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_VarChar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.VarChar)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_VarChar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_VarChar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.VarChar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.VarChar)
    MergeFrom(*source);
  }
}

void Expression_Literal_VarChar::MergeFrom(const Expression_Literal_VarChar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.VarChar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void Expression_Literal_VarChar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.VarChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_VarChar::CopyFrom(const Expression_Literal_VarChar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.VarChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_VarChar::IsInitialized() const {
  return true;
}

void Expression_Literal_VarChar::Swap(Expression_Literal_VarChar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_VarChar::InternalSwap(Expression_Literal_VarChar* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_VarChar::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_Decimal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_Decimal::kValueFieldNumber;
const int Expression_Literal_Decimal::kPrecisionFieldNumber;
const int Expression_Literal_Decimal::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_Decimal::Expression_Literal_Decimal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_Decimal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.Decimal)
}
Expression_Literal_Decimal::Expression_Literal_Decimal(const Expression_Literal_Decimal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&precision_, &from.precision_,
    static_cast<size_t>(reinterpret_cast<char*>(&scale_) -
    reinterpret_cast<char*>(&precision_)) + sizeof(scale_));
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.Decimal)
}

void Expression_Literal_Decimal::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&precision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&precision_)) + sizeof(scale_));
}

Expression_Literal_Decimal::~Expression_Literal_Decimal() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.Decimal)
  SharedDtor();
}

void Expression_Literal_Decimal::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression_Literal_Decimal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_Decimal::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_Decimal& Expression_Literal_Decimal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_Decimal.base);
  return *internal_default_instance();
}


void Expression_Literal_Decimal::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&precision_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&precision_)) + sizeof(scale_));
  _internal_metadata_.Clear();
}

bool Expression_Literal_Decimal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.Decimal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.Decimal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.Decimal)
  return false;
#undef DO_
}

void Expression_Literal_Decimal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // int32 precision = 2;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->precision(), output);
  }

  // int32 scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.Decimal)
}

::google::protobuf::uint8* Expression_Literal_Decimal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // int32 precision = 2;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->precision(), target);
  }

  // int32 scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.Decimal)
  return target;
}

size_t Expression_Literal_Decimal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.Decimal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int32 precision = 2;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  // int32 scale = 3;
  if (this->scale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scale());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_Decimal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.Decimal)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_Decimal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_Decimal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.Decimal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.Decimal)
    MergeFrom(*source);
  }
}

void Expression_Literal_Decimal::MergeFrom(const Expression_Literal_Decimal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.Decimal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
}

void Expression_Literal_Decimal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_Decimal::CopyFrom(const Expression_Literal_Decimal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_Decimal::IsInitialized() const {
  return true;
}

void Expression_Literal_Decimal::Swap(Expression_Literal_Decimal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_Decimal::InternalSwap(Expression_Literal_Decimal* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(precision_, other->precision_);
  swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_Decimal::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_Map_KeyValue::InitAsDefaultInstance() {
  ::substrait::_Expression_Literal_Map_KeyValue_default_instance_._instance.get_mutable()->key_ = const_cast< ::substrait::Expression_Literal*>(
      ::substrait::Expression_Literal::internal_default_instance());
  ::substrait::_Expression_Literal_Map_KeyValue_default_instance_._instance.get_mutable()->value_ = const_cast< ::substrait::Expression_Literal*>(
      ::substrait::Expression_Literal::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_Map_KeyValue::kKeyFieldNumber;
const int Expression_Literal_Map_KeyValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_Map_KeyValue::Expression_Literal_Map_KeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.Map.KeyValue)
}
Expression_Literal_Map_KeyValue::Expression_Literal_Map_KeyValue(const Expression_Literal_Map_KeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::substrait::Expression_Literal(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::substrait::Expression_Literal(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.Map.KeyValue)
}

void Expression_Literal_Map_KeyValue::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

Expression_Literal_Map_KeyValue::~Expression_Literal_Map_KeyValue() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.Map.KeyValue)
  SharedDtor();
}

void Expression_Literal_Map_KeyValue::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void Expression_Literal_Map_KeyValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_Map_KeyValue::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_Map_KeyValue& Expression_Literal_Map_KeyValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  return *internal_default_instance();
}


void Expression_Literal_Map_KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.Map.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_Literal_Map_KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.Map.KeyValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Literal key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.Map.KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.Map.KeyValue)
  return false;
#undef DO_
}

void Expression_Literal_Map_KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.Map.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .substrait.Expression.Literal value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.Map.KeyValue)
}

::google::protobuf::uint8* Expression_Literal_Map_KeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.Map.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .substrait.Expression.Literal value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.Map.KeyValue)
  return target;
}

size_t Expression_Literal_Map_KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.Map.KeyValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.Literal key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .substrait.Expression.Literal value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_Map_KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.Map.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_Map_KeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_Map_KeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.Map.KeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.Map.KeyValue)
    MergeFrom(*source);
  }
}

void Expression_Literal_Map_KeyValue::MergeFrom(const Expression_Literal_Map_KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.Map.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::substrait::Expression_Literal::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::substrait::Expression_Literal::MergeFrom(from.value());
  }
}

void Expression_Literal_Map_KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.Map.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_Map_KeyValue::CopyFrom(const Expression_Literal_Map_KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.Map.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_Map_KeyValue::IsInitialized() const {
  return true;
}

void Expression_Literal_Map_KeyValue::Swap(Expression_Literal_Map_KeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_Map_KeyValue::InternalSwap(Expression_Literal_Map_KeyValue* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_Map_KeyValue::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_Map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_Map::kKeyValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_Map::Expression_Literal_Map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.Map)
}
Expression_Literal_Map::Expression_Literal_Map(const Expression_Literal_Map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_values_(from.key_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.Map)
}

void Expression_Literal_Map::SharedCtor() {
}

Expression_Literal_Map::~Expression_Literal_Map() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.Map)
  SharedDtor();
}

void Expression_Literal_Map::SharedDtor() {
}

void Expression_Literal_Map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_Map::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_Map& Expression_Literal_Map::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  return *internal_default_instance();
}


void Expression_Literal_Map::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_values_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_Literal_Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.Map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.Literal.Map.KeyValue key_values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.Map)
  return false;
#undef DO_
}

void Expression_Literal_Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal.Map.KeyValue key_values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->key_values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.Map)
}

::google::protobuf::uint8* Expression_Literal_Map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal.Map.KeyValue key_values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->key_values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.Map)
  return target;
}

size_t Expression_Literal_Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.Map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.Literal.Map.KeyValue key_values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->key_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key_values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.Map)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_Map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_Map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.Map)
    MergeFrom(*source);
  }
}

void Expression_Literal_Map::MergeFrom(const Expression_Literal_Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.Map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_values_.MergeFrom(from.key_values_);
}

void Expression_Literal_Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_Map::CopyFrom(const Expression_Literal_Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_Map::IsInitialized() const {
  return true;
}

void Expression_Literal_Map::Swap(Expression_Literal_Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_Map::InternalSwap(Expression_Literal_Map* other) {
  using std::swap;
  CastToBase(&key_values_)->InternalSwap(CastToBase(&other->key_values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_Map::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_IntervalYearToMonth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_IntervalYearToMonth::kYearsFieldNumber;
const int Expression_Literal_IntervalYearToMonth::kMonthsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_IntervalYearToMonth::Expression_Literal_IntervalYearToMonth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_IntervalYearToMonth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.IntervalYearToMonth)
}
Expression_Literal_IntervalYearToMonth::Expression_Literal_IntervalYearToMonth(const Expression_Literal_IntervalYearToMonth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&years_, &from.years_,
    static_cast<size_t>(reinterpret_cast<char*>(&months_) -
    reinterpret_cast<char*>(&years_)) + sizeof(months_));
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.IntervalYearToMonth)
}

void Expression_Literal_IntervalYearToMonth::SharedCtor() {
  ::memset(&years_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&months_) -
      reinterpret_cast<char*>(&years_)) + sizeof(months_));
}

Expression_Literal_IntervalYearToMonth::~Expression_Literal_IntervalYearToMonth() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.IntervalYearToMonth)
  SharedDtor();
}

void Expression_Literal_IntervalYearToMonth::SharedDtor() {
}

void Expression_Literal_IntervalYearToMonth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_IntervalYearToMonth::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_IntervalYearToMonth& Expression_Literal_IntervalYearToMonth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_IntervalYearToMonth.base);
  return *internal_default_instance();
}


void Expression_Literal_IntervalYearToMonth::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.IntervalYearToMonth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&years_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&months_) -
      reinterpret_cast<char*>(&years_)) + sizeof(months_));
  _internal_metadata_.Clear();
}

bool Expression_Literal_IntervalYearToMonth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.IntervalYearToMonth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 years = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &years_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 months = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &months_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.IntervalYearToMonth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.IntervalYearToMonth)
  return false;
#undef DO_
}

void Expression_Literal_IntervalYearToMonth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.IntervalYearToMonth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 years = 1;
  if (this->years() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->years(), output);
  }

  // int32 months = 2;
  if (this->months() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->months(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.IntervalYearToMonth)
}

::google::protobuf::uint8* Expression_Literal_IntervalYearToMonth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.IntervalYearToMonth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 years = 1;
  if (this->years() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->years(), target);
  }

  // int32 months = 2;
  if (this->months() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->months(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.IntervalYearToMonth)
  return target;
}

size_t Expression_Literal_IntervalYearToMonth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.IntervalYearToMonth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 years = 1;
  if (this->years() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->years());
  }

  // int32 months = 2;
  if (this->months() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->months());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_IntervalYearToMonth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.IntervalYearToMonth)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_IntervalYearToMonth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_IntervalYearToMonth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.IntervalYearToMonth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.IntervalYearToMonth)
    MergeFrom(*source);
  }
}

void Expression_Literal_IntervalYearToMonth::MergeFrom(const Expression_Literal_IntervalYearToMonth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.IntervalYearToMonth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.years() != 0) {
    set_years(from.years());
  }
  if (from.months() != 0) {
    set_months(from.months());
  }
}

void Expression_Literal_IntervalYearToMonth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.IntervalYearToMonth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_IntervalYearToMonth::CopyFrom(const Expression_Literal_IntervalYearToMonth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.IntervalYearToMonth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_IntervalYearToMonth::IsInitialized() const {
  return true;
}

void Expression_Literal_IntervalYearToMonth::Swap(Expression_Literal_IntervalYearToMonth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_IntervalYearToMonth::InternalSwap(Expression_Literal_IntervalYearToMonth* other) {
  using std::swap;
  swap(years_, other->years_);
  swap(months_, other->months_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_IntervalYearToMonth::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_IntervalDayToSecond::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_IntervalDayToSecond::kDaysFieldNumber;
const int Expression_Literal_IntervalDayToSecond::kSecondsFieldNumber;
const int Expression_Literal_IntervalDayToSecond::kMicrosecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_IntervalDayToSecond::Expression_Literal_IntervalDayToSecond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_IntervalDayToSecond.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.IntervalDayToSecond)
}
Expression_Literal_IntervalDayToSecond::Expression_Literal_IntervalDayToSecond(const Expression_Literal_IntervalDayToSecond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&days_, &from.days_,
    static_cast<size_t>(reinterpret_cast<char*>(&microseconds_) -
    reinterpret_cast<char*>(&days_)) + sizeof(microseconds_));
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.IntervalDayToSecond)
}

void Expression_Literal_IntervalDayToSecond::SharedCtor() {
  ::memset(&days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&microseconds_) -
      reinterpret_cast<char*>(&days_)) + sizeof(microseconds_));
}

Expression_Literal_IntervalDayToSecond::~Expression_Literal_IntervalDayToSecond() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.IntervalDayToSecond)
  SharedDtor();
}

void Expression_Literal_IntervalDayToSecond::SharedDtor() {
}

void Expression_Literal_IntervalDayToSecond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_IntervalDayToSecond::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_IntervalDayToSecond& Expression_Literal_IntervalDayToSecond::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_IntervalDayToSecond.base);
  return *internal_default_instance();
}


void Expression_Literal_IntervalDayToSecond::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.IntervalDayToSecond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&days_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&microseconds_) -
      reinterpret_cast<char*>(&days_)) + sizeof(microseconds_));
  _internal_metadata_.Clear();
}

bool Expression_Literal_IntervalDayToSecond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.IntervalDayToSecond)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 days = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 seconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 microseconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &microseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.IntervalDayToSecond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.IntervalDayToSecond)
  return false;
#undef DO_
}

void Expression_Literal_IntervalDayToSecond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.IntervalDayToSecond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 days = 1;
  if (this->days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->days(), output);
  }

  // int32 seconds = 2;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seconds(), output);
  }

  // int32 microseconds = 3;
  if (this->microseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->microseconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.IntervalDayToSecond)
}

::google::protobuf::uint8* Expression_Literal_IntervalDayToSecond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.IntervalDayToSecond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 days = 1;
  if (this->days() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->days(), target);
  }

  // int32 seconds = 2;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seconds(), target);
  }

  // int32 microseconds = 3;
  if (this->microseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->microseconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.IntervalDayToSecond)
  return target;
}

size_t Expression_Literal_IntervalDayToSecond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.IntervalDayToSecond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 days = 1;
  if (this->days() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->days());
  }

  // int32 seconds = 2;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds());
  }

  // int32 microseconds = 3;
  if (this->microseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->microseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_IntervalDayToSecond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.IntervalDayToSecond)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_IntervalDayToSecond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_IntervalDayToSecond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.IntervalDayToSecond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.IntervalDayToSecond)
    MergeFrom(*source);
  }
}

void Expression_Literal_IntervalDayToSecond::MergeFrom(const Expression_Literal_IntervalDayToSecond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.IntervalDayToSecond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.days() != 0) {
    set_days(from.days());
  }
  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
  if (from.microseconds() != 0) {
    set_microseconds(from.microseconds());
  }
}

void Expression_Literal_IntervalDayToSecond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.IntervalDayToSecond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_IntervalDayToSecond::CopyFrom(const Expression_Literal_IntervalDayToSecond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.IntervalDayToSecond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_IntervalDayToSecond::IsInitialized() const {
  return true;
}

void Expression_Literal_IntervalDayToSecond::Swap(Expression_Literal_IntervalDayToSecond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_IntervalDayToSecond::InternalSwap(Expression_Literal_IntervalDayToSecond* other) {
  using std::swap;
  swap(days_, other->days_);
  swap(seconds_, other->seconds_);
  swap(microseconds_, other->microseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_IntervalDayToSecond::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_Struct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_Struct::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_Struct::Expression_Literal_Struct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.Struct)
}
Expression_Literal_Struct::Expression_Literal_Struct(const Expression_Literal_Struct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.Struct)
}

void Expression_Literal_Struct::SharedCtor() {
}

Expression_Literal_Struct::~Expression_Literal_Struct() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.Struct)
  SharedDtor();
}

void Expression_Literal_Struct::SharedDtor() {
}

void Expression_Literal_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_Struct::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_Struct& Expression_Literal_Struct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  return *internal_default_instance();
}


void Expression_Literal_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_Literal_Struct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.Struct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.Literal fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.Struct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.Struct)
  return false;
#undef DO_
}

void Expression_Literal_Struct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->fields(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.Struct)
}

::google::protobuf::uint8* Expression_Literal_Struct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.Struct)
  return target;
}

size_t Expression_Literal_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.Struct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.Literal fields = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_Struct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_Struct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_Struct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.Struct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.Struct)
    MergeFrom(*source);
  }
}

void Expression_Literal_Struct::MergeFrom(const Expression_Literal_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void Expression_Literal_Struct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_Struct::CopyFrom(const Expression_Literal_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_Struct::IsInitialized() const {
  return true;
}

void Expression_Literal_Struct::Swap(Expression_Literal_Struct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_Struct::InternalSwap(Expression_Literal_Struct* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_Struct::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_List::Expression_Literal_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.List)
}
Expression_Literal_List::Expression_Literal_List(const Expression_Literal_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.List)
}

void Expression_Literal_List::SharedCtor() {
}

Expression_Literal_List::~Expression_Literal_List() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.List)
  SharedDtor();
}

void Expression_Literal_List::SharedDtor() {
}

void Expression_Literal_List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_List::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_List& Expression_Literal_List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  return *internal_default_instance();
}


void Expression_Literal_List::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_Literal_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.Literal values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.List)
  return false;
#undef DO_
}

void Expression_Literal_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.List)
}

::google::protobuf::uint8* Expression_Literal_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Literal values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.List)
  return target;
}

size_t Expression_Literal_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.Literal values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.List)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.List)
    MergeFrom(*source);
  }
}

void Expression_Literal_List::MergeFrom(const Expression_Literal_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Expression_Literal_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_List::CopyFrom(const Expression_Literal_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_List::IsInitialized() const {
  return true;
}

void Expression_Literal_List::Swap(Expression_Literal_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_List::InternalSwap(Expression_Literal_List* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_List::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal_UserDefined::InitAsDefaultInstance() {
  ::substrait::_Expression_Literal_UserDefined_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void Expression_Literal_UserDefined::clear_type_parameters() {
  type_parameters_.Clear();
}
void Expression_Literal_UserDefined::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal_UserDefined::kTypeReferenceFieldNumber;
const int Expression_Literal_UserDefined::kTypeParametersFieldNumber;
const int Expression_Literal_UserDefined::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal_UserDefined::Expression_Literal_UserDefined()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_UserDefined.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal.UserDefined)
}
Expression_Literal_UserDefined::Expression_Literal_UserDefined(const Expression_Literal_UserDefined& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_parameters_(from.type_parameters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::google::protobuf::Any(*from.value_);
  } else {
    value_ = NULL;
  }
  type_reference_ = from.type_reference_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal.UserDefined)
}

void Expression_Literal_UserDefined::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_reference_) -
      reinterpret_cast<char*>(&value_)) + sizeof(type_reference_));
}

Expression_Literal_UserDefined::~Expression_Literal_UserDefined() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal.UserDefined)
  SharedDtor();
}

void Expression_Literal_UserDefined::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Expression_Literal_UserDefined::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal_UserDefined::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal_UserDefined& Expression_Literal_UserDefined::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal_UserDefined.base);
  return *internal_default_instance();
}


void Expression_Literal_UserDefined::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_parameters_.Clear();
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  type_reference_ = 0u;
  _internal_metadata_.Clear();
}

bool Expression_Literal_UserDefined::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal.UserDefined)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Type.Parameter type_parameters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal.UserDefined)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal.UserDefined)
  return false;
#undef DO_
}

void Expression_Literal_UserDefined::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_reference = 1;
  if (this->type_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_reference(), output);
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  // repeated .substrait.Type.Parameter type_parameters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->type_parameters(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal.UserDefined)
}

::google::protobuf::uint8* Expression_Literal_UserDefined::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_reference = 1;
  if (this->type_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_reference(), target);
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  // repeated .substrait.Type.Parameter type_parameters = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->type_parameters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal.UserDefined)
  return target;
}

size_t Expression_Literal_UserDefined::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal.UserDefined)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Type.Parameter type_parameters = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->type_parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_parameters(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Any value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint32 type_reference = 1;
  if (this->type_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_reference());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal_UserDefined::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal.UserDefined)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal_UserDefined* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal_UserDefined>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal.UserDefined)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal.UserDefined)
    MergeFrom(*source);
  }
}

void Expression_Literal_UserDefined::MergeFrom(const Expression_Literal_UserDefined& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal.UserDefined)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_parameters_.MergeFrom(from.type_parameters_);
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Any::MergeFrom(from.value());
  }
  if (from.type_reference() != 0) {
    set_type_reference(from.type_reference());
  }
}

void Expression_Literal_UserDefined::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal.UserDefined)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal_UserDefined::CopyFrom(const Expression_Literal_UserDefined& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal.UserDefined)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal_UserDefined::IsInitialized() const {
  return true;
}

void Expression_Literal_UserDefined::Swap(Expression_Literal_UserDefined* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal_UserDefined::InternalSwap(Expression_Literal_UserDefined* other) {
  using std::swap;
  CastToBase(&type_parameters_)->InternalSwap(CastToBase(&other->type_parameters_));
  swap(value_, other->value_);
  swap(type_reference_, other->type_reference_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal_UserDefined::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Literal::InitAsDefaultInstance() {
  ::substrait::_Expression_Literal_default_instance_.boolean_ = false;
  ::substrait::_Expression_Literal_default_instance_.i8_ = 0;
  ::substrait::_Expression_Literal_default_instance_.i16_ = 0;
  ::substrait::_Expression_Literal_default_instance_.i32_ = 0;
  ::substrait::_Expression_Literal_default_instance_.i64_ = GOOGLE_LONGLONG(0);
  ::substrait::_Expression_Literal_default_instance_.fp32_ = 0;
  ::substrait::_Expression_Literal_default_instance_.fp64_ = 0;
  ::substrait::_Expression_Literal_default_instance_.string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Expression_Literal_default_instance_.binary_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Expression_Literal_default_instance_.timestamp_ = GOOGLE_LONGLONG(0);
  ::substrait::_Expression_Literal_default_instance_.date_ = 0;
  ::substrait::_Expression_Literal_default_instance_.time_ = GOOGLE_LONGLONG(0);
  ::substrait::_Expression_Literal_default_instance_.interval_year_to_month_ = const_cast< ::substrait::Expression_Literal_IntervalYearToMonth*>(
      ::substrait::Expression_Literal_IntervalYearToMonth::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.interval_day_to_second_ = const_cast< ::substrait::Expression_Literal_IntervalDayToSecond*>(
      ::substrait::Expression_Literal_IntervalDayToSecond::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.fixed_char_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Expression_Literal_default_instance_.var_char_ = const_cast< ::substrait::Expression_Literal_VarChar*>(
      ::substrait::Expression_Literal_VarChar::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.fixed_binary_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Expression_Literal_default_instance_.decimal_ = const_cast< ::substrait::Expression_Literal_Decimal*>(
      ::substrait::Expression_Literal_Decimal::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.struct__ = const_cast< ::substrait::Expression_Literal_Struct*>(
      ::substrait::Expression_Literal_Struct::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.map_ = const_cast< ::substrait::Expression_Literal_Map*>(
      ::substrait::Expression_Literal_Map::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.timestamp_tz_ = GOOGLE_LONGLONG(0);
  ::substrait::_Expression_Literal_default_instance_.uuid_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Expression_Literal_default_instance_.null_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.list_ = const_cast< ::substrait::Expression_Literal_List*>(
      ::substrait::Expression_Literal_List::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.empty_list_ = const_cast< ::substrait::Type_List*>(
      ::substrait::Type_List::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.empty_map_ = const_cast< ::substrait::Type_Map*>(
      ::substrait::Type_Map::internal_default_instance());
  ::substrait::_Expression_Literal_default_instance_.user_defined_ = const_cast< ::substrait::Expression_Literal_UserDefined*>(
      ::substrait::Expression_Literal_UserDefined::internal_default_instance());
}
void Expression_Literal::set_allocated_interval_year_to_month(::substrait::Expression_Literal_IntervalYearToMonth* interval_year_to_month) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (interval_year_to_month) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval_year_to_month = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval_year_to_month, submessage_arena);
    }
    set_has_interval_year_to_month();
    literal_type_.interval_year_to_month_ = interval_year_to_month;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.interval_year_to_month)
}
void Expression_Literal::set_allocated_interval_day_to_second(::substrait::Expression_Literal_IntervalDayToSecond* interval_day_to_second) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (interval_day_to_second) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval_day_to_second = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval_day_to_second, submessage_arena);
    }
    set_has_interval_day_to_second();
    literal_type_.interval_day_to_second_ = interval_day_to_second;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.interval_day_to_second)
}
void Expression_Literal::set_allocated_var_char(::substrait::Expression_Literal_VarChar* var_char) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (var_char) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      var_char = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, var_char, submessage_arena);
    }
    set_has_var_char();
    literal_type_.var_char_ = var_char;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.var_char)
}
void Expression_Literal::set_allocated_decimal(::substrait::Expression_Literal_Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    literal_type_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.decimal)
}
void Expression_Literal::set_allocated_struct_(::substrait::Expression_Literal_Struct* struct_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (struct_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    set_has_struct_();
    literal_type_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.struct)
}
void Expression_Literal::set_allocated_map(::substrait::Expression_Literal_Map* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    literal_type_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.map)
}
void Expression_Literal::set_allocated_null(::substrait::Type* null) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (null) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      null = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, null, submessage_arena);
    }
    set_has_null();
    literal_type_.null_ = null;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.null)
}
void Expression_Literal::clear_null() {
  if (has_null()) {
    delete literal_type_.null_;
    clear_has_literal_type();
  }
}
void Expression_Literal::set_allocated_list(::substrait::Expression_Literal_List* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    literal_type_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.list)
}
void Expression_Literal::set_allocated_empty_list(::substrait::Type_List* empty_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (empty_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      empty_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, empty_list, submessage_arena);
    }
    set_has_empty_list();
    literal_type_.empty_list_ = empty_list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.empty_list)
}
void Expression_Literal::clear_empty_list() {
  if (has_empty_list()) {
    delete literal_type_.empty_list_;
    clear_has_literal_type();
  }
}
void Expression_Literal::set_allocated_empty_map(::substrait::Type_Map* empty_map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (empty_map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      empty_map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, empty_map, submessage_arena);
    }
    set_has_empty_map();
    literal_type_.empty_map_ = empty_map;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.empty_map)
}
void Expression_Literal::clear_empty_map() {
  if (has_empty_map()) {
    delete literal_type_.empty_map_;
    clear_has_literal_type();
  }
}
void Expression_Literal::set_allocated_user_defined(::substrait::Expression_Literal_UserDefined* user_defined) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_literal_type();
  if (user_defined) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_defined = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_defined, submessage_arena);
    }
    set_has_user_defined();
    literal_type_.user_defined_ = user_defined;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Literal.user_defined)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Literal::kBooleanFieldNumber;
const int Expression_Literal::kI8FieldNumber;
const int Expression_Literal::kI16FieldNumber;
const int Expression_Literal::kI32FieldNumber;
const int Expression_Literal::kI64FieldNumber;
const int Expression_Literal::kFp32FieldNumber;
const int Expression_Literal::kFp64FieldNumber;
const int Expression_Literal::kStringFieldNumber;
const int Expression_Literal::kBinaryFieldNumber;
const int Expression_Literal::kTimestampFieldNumber;
const int Expression_Literal::kDateFieldNumber;
const int Expression_Literal::kTimeFieldNumber;
const int Expression_Literal::kIntervalYearToMonthFieldNumber;
const int Expression_Literal::kIntervalDayToSecondFieldNumber;
const int Expression_Literal::kFixedCharFieldNumber;
const int Expression_Literal::kVarCharFieldNumber;
const int Expression_Literal::kFixedBinaryFieldNumber;
const int Expression_Literal::kDecimalFieldNumber;
const int Expression_Literal::kStructFieldNumber;
const int Expression_Literal::kMapFieldNumber;
const int Expression_Literal::kTimestampTzFieldNumber;
const int Expression_Literal::kUuidFieldNumber;
const int Expression_Literal::kNullFieldNumber;
const int Expression_Literal::kListFieldNumber;
const int Expression_Literal::kEmptyListFieldNumber;
const int Expression_Literal::kEmptyMapFieldNumber;
const int Expression_Literal::kUserDefinedFieldNumber;
const int Expression_Literal::kNullableFieldNumber;
const int Expression_Literal::kTypeVariationReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Literal::Expression_Literal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Literal)
}
Expression_Literal::Expression_Literal(const Expression_Literal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nullable_, &from.nullable_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_variation_reference_) -
    reinterpret_cast<char*>(&nullable_)) + sizeof(type_variation_reference_));
  clear_has_literal_type();
  switch (from.literal_type_case()) {
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kI8: {
      set_i8(from.i8());
      break;
    }
    case kI16: {
      set_i16(from.i16());
      break;
    }
    case kI32: {
      set_i32(from.i32());
      break;
    }
    case kI64: {
      set_i64(from.i64());
      break;
    }
    case kFp32: {
      set_fp32(from.fp32());
      break;
    }
    case kFp64: {
      set_fp64(from.fp64());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case kBinary: {
      set_binary(from.binary());
      break;
    }
    case kTimestamp: {
      set_timestamp(from.timestamp());
      break;
    }
    case kDate: {
      set_date(from.date());
      break;
    }
    case kTime: {
      set_time(from.time());
      break;
    }
    case kIntervalYearToMonth: {
      mutable_interval_year_to_month()->::substrait::Expression_Literal_IntervalYearToMonth::MergeFrom(from.interval_year_to_month());
      break;
    }
    case kIntervalDayToSecond: {
      mutable_interval_day_to_second()->::substrait::Expression_Literal_IntervalDayToSecond::MergeFrom(from.interval_day_to_second());
      break;
    }
    case kFixedChar: {
      set_fixed_char(from.fixed_char());
      break;
    }
    case kVarChar: {
      mutable_var_char()->::substrait::Expression_Literal_VarChar::MergeFrom(from.var_char());
      break;
    }
    case kFixedBinary: {
      set_fixed_binary(from.fixed_binary());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::substrait::Expression_Literal_Decimal::MergeFrom(from.decimal());
      break;
    }
    case kStruct: {
      mutable_struct_()->::substrait::Expression_Literal_Struct::MergeFrom(from.struct_());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Expression_Literal_Map::MergeFrom(from.map());
      break;
    }
    case kTimestampTz: {
      set_timestamp_tz(from.timestamp_tz());
      break;
    }
    case kUuid: {
      set_uuid(from.uuid());
      break;
    }
    case kNull: {
      mutable_null()->::substrait::Type::MergeFrom(from.null());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Expression_Literal_List::MergeFrom(from.list());
      break;
    }
    case kEmptyList: {
      mutable_empty_list()->::substrait::Type_List::MergeFrom(from.empty_list());
      break;
    }
    case kEmptyMap: {
      mutable_empty_map()->::substrait::Type_Map::MergeFrom(from.empty_map());
      break;
    }
    case kUserDefined: {
      mutable_user_defined()->::substrait::Expression_Literal_UserDefined::MergeFrom(from.user_defined());
      break;
    }
    case LITERAL_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Literal)
}

void Expression_Literal::SharedCtor() {
  ::memset(&nullable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_variation_reference_) -
      reinterpret_cast<char*>(&nullable_)) + sizeof(type_variation_reference_));
  clear_has_literal_type();
}

Expression_Literal::~Expression_Literal() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Literal)
  SharedDtor();
}

void Expression_Literal::SharedDtor() {
  if (has_literal_type()) {
    clear_literal_type();
  }
}

void Expression_Literal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Literal::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Literal& Expression_Literal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_Literal.base);
  return *internal_default_instance();
}


void Expression_Literal::clear_literal_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.Literal)
  switch (literal_type_case()) {
    case kBoolean: {
      // No need to clear
      break;
    }
    case kI8: {
      // No need to clear
      break;
    }
    case kI16: {
      // No need to clear
      break;
    }
    case kI32: {
      // No need to clear
      break;
    }
    case kI64: {
      // No need to clear
      break;
    }
    case kFp32: {
      // No need to clear
      break;
    }
    case kFp64: {
      // No need to clear
      break;
    }
    case kString: {
      literal_type_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBinary: {
      literal_type_.binary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTimestamp: {
      // No need to clear
      break;
    }
    case kDate: {
      // No need to clear
      break;
    }
    case kTime: {
      // No need to clear
      break;
    }
    case kIntervalYearToMonth: {
      delete literal_type_.interval_year_to_month_;
      break;
    }
    case kIntervalDayToSecond: {
      delete literal_type_.interval_day_to_second_;
      break;
    }
    case kFixedChar: {
      literal_type_.fixed_char_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kVarChar: {
      delete literal_type_.var_char_;
      break;
    }
    case kFixedBinary: {
      literal_type_.fixed_binary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDecimal: {
      delete literal_type_.decimal_;
      break;
    }
    case kStruct: {
      delete literal_type_.struct__;
      break;
    }
    case kMap: {
      delete literal_type_.map_;
      break;
    }
    case kTimestampTz: {
      // No need to clear
      break;
    }
    case kUuid: {
      literal_type_.uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kNull: {
      delete literal_type_.null_;
      break;
    }
    case kList: {
      delete literal_type_.list_;
      break;
    }
    case kEmptyList: {
      delete literal_type_.empty_list_;
      break;
    }
    case kEmptyMap: {
      delete literal_type_.empty_map_;
      break;
    }
    case kUserDefined: {
      delete literal_type_.user_defined_;
      break;
    }
    case LITERAL_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = LITERAL_TYPE_NOT_SET;
}


void Expression_Literal::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nullable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_variation_reference_) -
      reinterpret_cast<char*>(&nullable_)) + sizeof(type_variation_reference_));
  clear_literal_type();
  _internal_metadata_.Clear();
}

bool Expression_Literal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Literal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool boolean = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &literal_type_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 i8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &literal_type_.i8_)));
          set_has_i8();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 i16 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &literal_type_.i16_)));
          set_has_i16();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 i32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &literal_type_.i32_)));
          set_has_i32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 i64 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &literal_type_.i64_)));
          set_has_i64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fp32 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &literal_type_.fp32_)));
          set_has_fp32();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fp64 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &literal_type_.fp64_)));
          set_has_fp64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.Literal.string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes binary = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &literal_type_.timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 date = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &literal_type_.date_)));
          set_has_date();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &literal_type_.time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.IntervalYearToMonth interval_year_to_month = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval_year_to_month()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.IntervalDayToSecond interval_day_to_second = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval_day_to_second()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fixed_char = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fixed_char()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fixed_char().data(), static_cast<int>(this->fixed_char().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.Literal.fixed_char"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.VarChar var_char = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var_char()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes fixed_binary = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fixed_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.Decimal decimal = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.Struct struct = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.Map map = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp_tz = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          clear_literal_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &literal_type_.timestamp_tz_)));
          set_has_timestamp_tz();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes uuid = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type null = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_null()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.List list = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.List empty_list = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Map empty_map = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_empty_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Literal.UserDefined user_defined = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_defined()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool nullable = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nullable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 51;
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 408 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Literal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Literal)
  return false;
#undef DO_
}

void Expression_Literal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolean = 1;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->boolean(), output);
  }

  // int32 i8 = 2;
  if (has_i8()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->i8(), output);
  }

  // int32 i16 = 3;
  if (has_i16()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->i16(), output);
  }

  // int32 i32 = 5;
  if (has_i32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->i32(), output);
  }

  // int64 i64 = 7;
  if (has_i64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->i64(), output);
  }

  // float fp32 = 10;
  if (has_fp32()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->fp32(), output);
  }

  // double fp64 = 11;
  if (has_fp64()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->fp64(), output);
  }

  // string string = 12;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Literal.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->string(), output);
  }

  // bytes binary = 13;
  if (has_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->binary(), output);
  }

  // int64 timestamp = 14;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->timestamp(), output);
  }

  // int32 date = 16;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->date(), output);
  }

  // int64 time = 17;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->time(), output);
  }

  // .substrait.Expression.Literal.IntervalYearToMonth interval_year_to_month = 19;
  if (has_interval_year_to_month()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_interval_year_to_month(), output);
  }

  // .substrait.Expression.Literal.IntervalDayToSecond interval_day_to_second = 20;
  if (has_interval_day_to_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_interval_day_to_second(), output);
  }

  // string fixed_char = 21;
  if (has_fixed_char()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fixed_char().data(), static_cast<int>(this->fixed_char().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Literal.fixed_char");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->fixed_char(), output);
  }

  // .substrait.Expression.Literal.VarChar var_char = 22;
  if (has_var_char()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_var_char(), output);
  }

  // bytes fixed_binary = 23;
  if (has_fixed_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->fixed_binary(), output);
  }

  // .substrait.Expression.Literal.Decimal decimal = 24;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_decimal(), output);
  }

  // .substrait.Expression.Literal.Struct struct = 25;
  if (has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_struct_(), output);
  }

  // .substrait.Expression.Literal.Map map = 26;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_map(), output);
  }

  // int64 timestamp_tz = 27;
  if (has_timestamp_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(27, this->timestamp_tz(), output);
  }

  // bytes uuid = 28;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      28, this->uuid(), output);
  }

  // .substrait.Type null = 29;
  if (has_null()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_null(), output);
  }

  // .substrait.Expression.Literal.List list = 30;
  if (has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_list(), output);
  }

  // .substrait.Type.List empty_list = 31;
  if (has_empty_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->_internal_empty_list(), output);
  }

  // .substrait.Type.Map empty_map = 32;
  if (has_empty_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_empty_map(), output);
  }

  // .substrait.Expression.Literal.UserDefined user_defined = 33;
  if (has_user_defined()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->_internal_user_defined(), output);
  }

  // bool nullable = 50;
  if (this->nullable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(50, this->nullable(), output);
  }

  // uint32 type_variation_reference = 51;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(51, this->type_variation_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Literal)
}

::google::protobuf::uint8* Expression_Literal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Literal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool boolean = 1;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->boolean(), target);
  }

  // int32 i8 = 2;
  if (has_i8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->i8(), target);
  }

  // int32 i16 = 3;
  if (has_i16()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->i16(), target);
  }

  // int32 i32 = 5;
  if (has_i32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->i32(), target);
  }

  // int64 i64 = 7;
  if (has_i64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->i64(), target);
  }

  // float fp32 = 10;
  if (has_fp32()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->fp32(), target);
  }

  // double fp64 = 11;
  if (has_fp64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->fp64(), target);
  }

  // string string = 12;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Literal.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->string(), target);
  }

  // bytes binary = 13;
  if (has_binary()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->binary(), target);
  }

  // int64 timestamp = 14;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->timestamp(), target);
  }

  // int32 date = 16;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->date(), target);
  }

  // int64 time = 17;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->time(), target);
  }

  // .substrait.Expression.Literal.IntervalYearToMonth interval_year_to_month = 19;
  if (has_interval_year_to_month()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_interval_year_to_month(), deterministic, target);
  }

  // .substrait.Expression.Literal.IntervalDayToSecond interval_day_to_second = 20;
  if (has_interval_day_to_second()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_interval_day_to_second(), deterministic, target);
  }

  // string fixed_char = 21;
  if (has_fixed_char()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fixed_char().data(), static_cast<int>(this->fixed_char().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.Literal.fixed_char");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->fixed_char(), target);
  }

  // .substrait.Expression.Literal.VarChar var_char = 22;
  if (has_var_char()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_var_char(), deterministic, target);
  }

  // bytes fixed_binary = 23;
  if (has_fixed_binary()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->fixed_binary(), target);
  }

  // .substrait.Expression.Literal.Decimal decimal = 24;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_decimal(), deterministic, target);
  }

  // .substrait.Expression.Literal.Struct struct = 25;
  if (has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_struct_(), deterministic, target);
  }

  // .substrait.Expression.Literal.Map map = 26;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_map(), deterministic, target);
  }

  // int64 timestamp_tz = 27;
  if (has_timestamp_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(27, this->timestamp_tz(), target);
  }

  // bytes uuid = 28;
  if (has_uuid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        28, this->uuid(), target);
  }

  // .substrait.Type null = 29;
  if (has_null()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_null(), deterministic, target);
  }

  // .substrait.Expression.Literal.List list = 30;
  if (has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_list(), deterministic, target);
  }

  // .substrait.Type.List empty_list = 31;
  if (has_empty_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        31, this->_internal_empty_list(), deterministic, target);
  }

  // .substrait.Type.Map empty_map = 32;
  if (has_empty_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_empty_map(), deterministic, target);
  }

  // .substrait.Expression.Literal.UserDefined user_defined = 33;
  if (has_user_defined()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33, this->_internal_user_defined(), deterministic, target);
  }

  // bool nullable = 50;
  if (this->nullable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(50, this->nullable(), target);
  }

  // uint32 type_variation_reference = 51;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(51, this->type_variation_reference(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Literal)
  return target;
}

size_t Expression_Literal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Literal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool nullable = 50;
  if (this->nullable() != 0) {
    total_size += 2 + 1;
  }

  // uint32 type_variation_reference = 51;
  if (this->type_variation_reference() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  switch (literal_type_case()) {
    // bool boolean = 1;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // int32 i8 = 2;
    case kI8: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i8());
      break;
    }
    // int32 i16 = 3;
    case kI16: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i16());
      break;
    }
    // int32 i32 = 5;
    case kI32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->i32());
      break;
    }
    // int64 i64 = 7;
    case kI64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i64());
      break;
    }
    // float fp32 = 10;
    case kFp32: {
      total_size += 1 + 4;
      break;
    }
    // double fp64 = 11;
    case kFp64: {
      total_size += 1 + 8;
      break;
    }
    // string string = 12;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
      break;
    }
    // bytes binary = 13;
    case kBinary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->binary());
      break;
    }
    // int64 timestamp = 14;
    case kTimestamp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
      break;
    }
    // int32 date = 16;
    case kDate: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->date());
      break;
    }
    // int64 time = 17;
    case kTime: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
      break;
    }
    // .substrait.Expression.Literal.IntervalYearToMonth interval_year_to_month = 19;
    case kIntervalYearToMonth: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.interval_year_to_month_);
      break;
    }
    // .substrait.Expression.Literal.IntervalDayToSecond interval_day_to_second = 20;
    case kIntervalDayToSecond: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.interval_day_to_second_);
      break;
    }
    // string fixed_char = 21;
    case kFixedChar: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fixed_char());
      break;
    }
    // .substrait.Expression.Literal.VarChar var_char = 22;
    case kVarChar: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.var_char_);
      break;
    }
    // bytes fixed_binary = 23;
    case kFixedBinary: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->fixed_binary());
      break;
    }
    // .substrait.Expression.Literal.Decimal decimal = 24;
    case kDecimal: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.decimal_);
      break;
    }
    // .substrait.Expression.Literal.Struct struct = 25;
    case kStruct: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.struct__);
      break;
    }
    // .substrait.Expression.Literal.Map map = 26;
    case kMap: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.map_);
      break;
    }
    // int64 timestamp_tz = 27;
    case kTimestampTz: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp_tz());
      break;
    }
    // bytes uuid = 28;
    case kUuid: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uuid());
      break;
    }
    // .substrait.Type null = 29;
    case kNull: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.null_);
      break;
    }
    // .substrait.Expression.Literal.List list = 30;
    case kList: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.list_);
      break;
    }
    // .substrait.Type.List empty_list = 31;
    case kEmptyList: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.empty_list_);
      break;
    }
    // .substrait.Type.Map empty_map = 32;
    case kEmptyMap: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.empty_map_);
      break;
    }
    // .substrait.Expression.Literal.UserDefined user_defined = 33;
    case kUserDefined: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *literal_type_.user_defined_);
      break;
    }
    case LITERAL_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Literal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Literal)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Literal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Literal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Literal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Literal)
    MergeFrom(*source);
  }
}

void Expression_Literal::MergeFrom(const Expression_Literal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Literal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nullable() != 0) {
    set_nullable(from.nullable());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  switch (from.literal_type_case()) {
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kI8: {
      set_i8(from.i8());
      break;
    }
    case kI16: {
      set_i16(from.i16());
      break;
    }
    case kI32: {
      set_i32(from.i32());
      break;
    }
    case kI64: {
      set_i64(from.i64());
      break;
    }
    case kFp32: {
      set_fp32(from.fp32());
      break;
    }
    case kFp64: {
      set_fp64(from.fp64());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case kBinary: {
      set_binary(from.binary());
      break;
    }
    case kTimestamp: {
      set_timestamp(from.timestamp());
      break;
    }
    case kDate: {
      set_date(from.date());
      break;
    }
    case kTime: {
      set_time(from.time());
      break;
    }
    case kIntervalYearToMonth: {
      mutable_interval_year_to_month()->::substrait::Expression_Literal_IntervalYearToMonth::MergeFrom(from.interval_year_to_month());
      break;
    }
    case kIntervalDayToSecond: {
      mutable_interval_day_to_second()->::substrait::Expression_Literal_IntervalDayToSecond::MergeFrom(from.interval_day_to_second());
      break;
    }
    case kFixedChar: {
      set_fixed_char(from.fixed_char());
      break;
    }
    case kVarChar: {
      mutable_var_char()->::substrait::Expression_Literal_VarChar::MergeFrom(from.var_char());
      break;
    }
    case kFixedBinary: {
      set_fixed_binary(from.fixed_binary());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::substrait::Expression_Literal_Decimal::MergeFrom(from.decimal());
      break;
    }
    case kStruct: {
      mutable_struct_()->::substrait::Expression_Literal_Struct::MergeFrom(from.struct_());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Expression_Literal_Map::MergeFrom(from.map());
      break;
    }
    case kTimestampTz: {
      set_timestamp_tz(from.timestamp_tz());
      break;
    }
    case kUuid: {
      set_uuid(from.uuid());
      break;
    }
    case kNull: {
      mutable_null()->::substrait::Type::MergeFrom(from.null());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Expression_Literal_List::MergeFrom(from.list());
      break;
    }
    case kEmptyList: {
      mutable_empty_list()->::substrait::Type_List::MergeFrom(from.empty_list());
      break;
    }
    case kEmptyMap: {
      mutable_empty_map()->::substrait::Type_Map::MergeFrom(from.empty_map());
      break;
    }
    case kUserDefined: {
      mutable_user_defined()->::substrait::Expression_Literal_UserDefined::MergeFrom(from.user_defined());
      break;
    }
    case LITERAL_TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_Literal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Literal::CopyFrom(const Expression_Literal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Literal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Literal::IsInitialized() const {
  return true;
}

void Expression_Literal::Swap(Expression_Literal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Literal::InternalSwap(Expression_Literal* other) {
  using std::swap;
  swap(nullable_, other->nullable_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(literal_type_, other->literal_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Literal::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Nested_Map_KeyValue::InitAsDefaultInstance() {
  ::substrait::_Expression_Nested_Map_KeyValue_default_instance_._instance.get_mutable()->key_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_Expression_Nested_Map_KeyValue_default_instance_._instance.get_mutable()->value_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Nested_Map_KeyValue::kKeyFieldNumber;
const int Expression_Nested_Map_KeyValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Nested_Map_KeyValue::Expression_Nested_Map_KeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Nested.Map.KeyValue)
}
Expression_Nested_Map_KeyValue::Expression_Nested_Map_KeyValue(const Expression_Nested_Map_KeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::substrait::Expression(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::substrait::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Nested.Map.KeyValue)
}

void Expression_Nested_Map_KeyValue::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

Expression_Nested_Map_KeyValue::~Expression_Nested_Map_KeyValue() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Nested.Map.KeyValue)
  SharedDtor();
}

void Expression_Nested_Map_KeyValue::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void Expression_Nested_Map_KeyValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Nested_Map_KeyValue::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Nested_Map_KeyValue& Expression_Nested_Map_KeyValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Nested_Map_KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Nested.Map.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_Nested_Map_KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Nested.Map.KeyValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Nested.Map.KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Nested.Map.KeyValue)
  return false;
#undef DO_
}

void Expression_Nested_Map_KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Nested.Map.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .substrait.Expression value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Nested.Map.KeyValue)
}

::google::protobuf::uint8* Expression_Nested_Map_KeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Nested.Map.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .substrait.Expression value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Nested.Map.KeyValue)
  return target;
}

size_t Expression_Nested_Map_KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Nested.Map.KeyValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .substrait.Expression value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Nested_Map_KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Nested.Map.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Nested_Map_KeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Nested_Map_KeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Nested.Map.KeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Nested.Map.KeyValue)
    MergeFrom(*source);
  }
}

void Expression_Nested_Map_KeyValue::MergeFrom(const Expression_Nested_Map_KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Nested.Map.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::substrait::Expression::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::substrait::Expression::MergeFrom(from.value());
  }
}

void Expression_Nested_Map_KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Nested.Map.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Nested_Map_KeyValue::CopyFrom(const Expression_Nested_Map_KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Nested.Map.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Nested_Map_KeyValue::IsInitialized() const {
  return true;
}

void Expression_Nested_Map_KeyValue::Swap(Expression_Nested_Map_KeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Nested_Map_KeyValue::InternalSwap(Expression_Nested_Map_KeyValue* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Nested_Map_KeyValue::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Nested_Map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Nested_Map::kKeyValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Nested_Map::Expression_Nested_Map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Nested.Map)
}
Expression_Nested_Map::Expression_Nested_Map(const Expression_Nested_Map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_values_(from.key_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Nested.Map)
}

void Expression_Nested_Map::SharedCtor() {
}

Expression_Nested_Map::~Expression_Nested_Map() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Nested.Map)
  SharedDtor();
}

void Expression_Nested_Map::SharedDtor() {
}

void Expression_Nested_Map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Nested_Map::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Nested_Map& Expression_Nested_Map::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Nested_Map::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Nested.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_values_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_Nested_Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Nested.Map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.Nested.Map.KeyValue key_values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_key_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Nested.Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Nested.Map)
  return false;
#undef DO_
}

void Expression_Nested_Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Nested.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Nested.Map.KeyValue key_values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->key_values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Nested.Map)
}

::google::protobuf::uint8* Expression_Nested_Map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Nested.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.Nested.Map.KeyValue key_values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->key_values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Nested.Map)
  return target;
}

size_t Expression_Nested_Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Nested.Map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.Nested.Map.KeyValue key_values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->key_values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->key_values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Nested_Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Nested.Map)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Nested_Map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Nested_Map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Nested.Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Nested.Map)
    MergeFrom(*source);
  }
}

void Expression_Nested_Map::MergeFrom(const Expression_Nested_Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Nested.Map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_values_.MergeFrom(from.key_values_);
}

void Expression_Nested_Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Nested.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Nested_Map::CopyFrom(const Expression_Nested_Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Nested.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Nested_Map::IsInitialized() const {
  return true;
}

void Expression_Nested_Map::Swap(Expression_Nested_Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Nested_Map::InternalSwap(Expression_Nested_Map* other) {
  using std::swap;
  CastToBase(&key_values_)->InternalSwap(CastToBase(&other->key_values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Nested_Map::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Nested_Struct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Nested_Struct::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Nested_Struct::Expression_Nested_Struct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Nested.Struct)
}
Expression_Nested_Struct::Expression_Nested_Struct(const Expression_Nested_Struct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Nested.Struct)
}

void Expression_Nested_Struct::SharedCtor() {
}

Expression_Nested_Struct::~Expression_Nested_Struct() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Nested.Struct)
  SharedDtor();
}

void Expression_Nested_Struct::SharedDtor() {
}

void Expression_Nested_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Nested_Struct::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Nested_Struct& Expression_Nested_Struct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Nested_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Nested.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_Nested_Struct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Nested.Struct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Nested.Struct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Nested.Struct)
  return false;
#undef DO_
}

void Expression_Nested_Struct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Nested.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->fields(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Nested.Struct)
}

::google::protobuf::uint8* Expression_Nested_Struct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Nested.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Nested.Struct)
  return target;
}

size_t Expression_Nested_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Nested.Struct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression fields = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Nested_Struct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Nested.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Nested_Struct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Nested_Struct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Nested.Struct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Nested.Struct)
    MergeFrom(*source);
  }
}

void Expression_Nested_Struct::MergeFrom(const Expression_Nested_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Nested.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void Expression_Nested_Struct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Nested.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Nested_Struct::CopyFrom(const Expression_Nested_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Nested.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Nested_Struct::IsInitialized() const {
  return true;
}

void Expression_Nested_Struct::Swap(Expression_Nested_Struct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Nested_Struct::InternalSwap(Expression_Nested_Struct* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Nested_Struct::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Nested_List::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Nested_List::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Nested_List::Expression_Nested_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Nested.List)
}
Expression_Nested_List::Expression_Nested_List(const Expression_Nested_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Nested.List)
}

void Expression_Nested_List::SharedCtor() {
}

Expression_Nested_List::~Expression_Nested_List() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Nested.List)
  SharedDtor();
}

void Expression_Nested_List::SharedDtor() {
}

void Expression_Nested_List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Nested_List::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Nested_List& Expression_Nested_List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Nested_List::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Nested.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_Nested_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Nested.List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Nested.List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Nested.List)
  return false;
#undef DO_
}

void Expression_Nested_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Nested.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Nested.List)
}

::google::protobuf::uint8* Expression_Nested_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Nested.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Nested.List)
  return target;
}

size_t Expression_Nested_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Nested.List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Nested_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Nested.List)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Nested_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Nested_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Nested.List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Nested.List)
    MergeFrom(*source);
  }
}

void Expression_Nested_List::MergeFrom(const Expression_Nested_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Nested.List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Expression_Nested_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Nested.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Nested_List::CopyFrom(const Expression_Nested_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Nested.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Nested_List::IsInitialized() const {
  return true;
}

void Expression_Nested_List::Swap(Expression_Nested_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Nested_List::InternalSwap(Expression_Nested_List* other) {
  using std::swap;
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Nested_List::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Nested::InitAsDefaultInstance() {
  ::substrait::_Expression_Nested_default_instance_.struct__ = const_cast< ::substrait::Expression_Nested_Struct*>(
      ::substrait::Expression_Nested_Struct::internal_default_instance());
  ::substrait::_Expression_Nested_default_instance_.list_ = const_cast< ::substrait::Expression_Nested_List*>(
      ::substrait::Expression_Nested_List::internal_default_instance());
  ::substrait::_Expression_Nested_default_instance_.map_ = const_cast< ::substrait::Expression_Nested_Map*>(
      ::substrait::Expression_Nested_Map::internal_default_instance());
}
void Expression_Nested::set_allocated_struct_(::substrait::Expression_Nested_Struct* struct_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_nested_type();
  if (struct_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    set_has_struct_();
    nested_type_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Nested.struct)
}
void Expression_Nested::set_allocated_list(::substrait::Expression_Nested_List* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_nested_type();
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    nested_type_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Nested.list)
}
void Expression_Nested::set_allocated_map(::substrait::Expression_Nested_Map* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_nested_type();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    nested_type_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Nested.map)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Nested::kNullableFieldNumber;
const int Expression_Nested::kTypeVariationReferenceFieldNumber;
const int Expression_Nested::kStructFieldNumber;
const int Expression_Nested::kListFieldNumber;
const int Expression_Nested::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Nested::Expression_Nested()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Nested)
}
Expression_Nested::Expression_Nested(const Expression_Nested& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nullable_, &from.nullable_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_variation_reference_) -
    reinterpret_cast<char*>(&nullable_)) + sizeof(type_variation_reference_));
  clear_has_nested_type();
  switch (from.nested_type_case()) {
    case kStruct: {
      mutable_struct_()->::substrait::Expression_Nested_Struct::MergeFrom(from.struct_());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Expression_Nested_List::MergeFrom(from.list());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Expression_Nested_Map::MergeFrom(from.map());
      break;
    }
    case NESTED_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Nested)
}

void Expression_Nested::SharedCtor() {
  ::memset(&nullable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_variation_reference_) -
      reinterpret_cast<char*>(&nullable_)) + sizeof(type_variation_reference_));
  clear_has_nested_type();
}

Expression_Nested::~Expression_Nested() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Nested)
  SharedDtor();
}

void Expression_Nested::SharedDtor() {
  if (has_nested_type()) {
    clear_nested_type();
  }
}

void Expression_Nested::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Nested::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Nested& Expression_Nested::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Nested::clear_nested_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.Nested)
  switch (nested_type_case()) {
    case kStruct: {
      delete nested_type_.struct__;
      break;
    }
    case kList: {
      delete nested_type_.list_;
      break;
    }
    case kMap: {
      delete nested_type_.map_;
      break;
    }
    case NESTED_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NESTED_TYPE_NOT_SET;
}


void Expression_Nested::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Nested)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nullable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_variation_reference_) -
      reinterpret_cast<char*>(&nullable_)) + sizeof(type_variation_reference_));
  clear_nested_type();
  _internal_metadata_.Clear();
}

bool Expression_Nested::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Nested)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool nullable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &nullable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Nested.Struct struct = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Nested.List list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Nested.Map map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Nested)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Nested)
  return false;
#undef DO_
}

void Expression_Nested::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Nested)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nullable = 1;
  if (this->nullable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->nullable(), output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Expression.Nested.Struct struct = 3;
  if (has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_struct_(), output);
  }

  // .substrait.Expression.Nested.List list = 4;
  if (has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_list(), output);
  }

  // .substrait.Expression.Nested.Map map = 5;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_map(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Nested)
}

::google::protobuf::uint8* Expression_Nested::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Nested)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nullable = 1;
  if (this->nullable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->nullable(), target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Expression.Nested.Struct struct = 3;
  if (has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_struct_(), deterministic, target);
  }

  // .substrait.Expression.Nested.List list = 4;
  if (has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_list(), deterministic, target);
  }

  // .substrait.Expression.Nested.Map map = 5;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_map(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Nested)
  return target;
}

size_t Expression_Nested::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Nested)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool nullable = 1;
  if (this->nullable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  switch (nested_type_case()) {
    // .substrait.Expression.Nested.Struct struct = 3;
    case kStruct: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *nested_type_.struct__);
      break;
    }
    // .substrait.Expression.Nested.List list = 4;
    case kList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *nested_type_.list_);
      break;
    }
    // .substrait.Expression.Nested.Map map = 5;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *nested_type_.map_);
      break;
    }
    case NESTED_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Nested::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Nested)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Nested* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Nested>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Nested)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Nested)
    MergeFrom(*source);
  }
}

void Expression_Nested::MergeFrom(const Expression_Nested& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Nested)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nullable() != 0) {
    set_nullable(from.nullable());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  switch (from.nested_type_case()) {
    case kStruct: {
      mutable_struct_()->::substrait::Expression_Nested_Struct::MergeFrom(from.struct_());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Expression_Nested_List::MergeFrom(from.list());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Expression_Nested_Map::MergeFrom(from.map());
      break;
    }
    case NESTED_TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_Nested::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Nested)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Nested::CopyFrom(const Expression_Nested& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Nested)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Nested::IsInitialized() const {
  return true;
}

void Expression_Nested::Swap(Expression_Nested* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Nested::InternalSwap(Expression_Nested* other) {
  using std::swap;
  swap(nullable_, other->nullable_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nested_type_, other->nested_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Nested::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_ScalarFunction::InitAsDefaultInstance() {
  ::substrait::_Expression_ScalarFunction_default_instance_._instance.get_mutable()->output_type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
}
void Expression_ScalarFunction::clear_output_type() {
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_ScalarFunction::kFunctionReferenceFieldNumber;
const int Expression_ScalarFunction::kArgumentsFieldNumber;
const int Expression_ScalarFunction::kOptionsFieldNumber;
const int Expression_ScalarFunction::kOutputTypeFieldNumber;
const int Expression_ScalarFunction::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_ScalarFunction::Expression_ScalarFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.ScalarFunction)
}
Expression_ScalarFunction::Expression_ScalarFunction(const Expression_ScalarFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_),
      arguments_(from.arguments_),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_type()) {
    output_type_ = new ::substrait::Type(*from.output_type_);
  } else {
    output_type_ = NULL;
  }
  function_reference_ = from.function_reference_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.ScalarFunction)
}

void Expression_ScalarFunction::SharedCtor() {
  ::memset(&output_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&function_reference_) -
      reinterpret_cast<char*>(&output_type_)) + sizeof(function_reference_));
}

Expression_ScalarFunction::~Expression_ScalarFunction() {
  // @@protoc_insertion_point(destructor:substrait.Expression.ScalarFunction)
  SharedDtor();
}

void Expression_ScalarFunction::SharedDtor() {
  if (this != internal_default_instance()) delete output_type_;
}

void Expression_ScalarFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_ScalarFunction::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_ScalarFunction& Expression_ScalarFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_ScalarFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.ScalarFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  arguments_.Clear();
  options_.Clear();
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
  function_reference_ = 0u;
  _internal_metadata_.Clear();
}

bool Expression_ScalarFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.ScalarFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 function_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression args = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type output_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.FunctionArgument arguments = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.FunctionOption options = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.ScalarFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.ScalarFunction)
  return false;
#undef DO_
}

void Expression_ScalarFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.ScalarFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->function_reference(), output);
  }

  // repeated .substrait.Expression args = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->args(static_cast<int>(i)),
      output);
  }

  // .substrait.Type output_type = 3;
  if (this->has_output_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_output_type(), output);
  }

  // repeated .substrait.FunctionArgument arguments = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.FunctionOption options = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->options(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.ScalarFunction)
}

::google::protobuf::uint8* Expression_ScalarFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.ScalarFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->function_reference(), target);
  }

  // repeated .substrait.Expression args = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->args(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Type output_type = 3;
  if (this->has_output_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_output_type(), deterministic, target);
  }

  // repeated .substrait.FunctionArgument arguments = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.FunctionOption options = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->options(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.ScalarFunction)
  return target;
}

size_t Expression_ScalarFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.ScalarFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression args = 2 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // repeated .substrait.FunctionArgument arguments = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // repeated .substrait.FunctionOption options = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // .substrait.Type output_type = 3;
  if (this->has_output_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_type_);
  }

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->function_reference());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_ScalarFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.ScalarFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_ScalarFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_ScalarFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.ScalarFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.ScalarFunction)
    MergeFrom(*source);
  }
}

void Expression_ScalarFunction::MergeFrom(const Expression_ScalarFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.ScalarFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  arguments_.MergeFrom(from.arguments_);
  options_.MergeFrom(from.options_);
  if (from.has_output_type()) {
    mutable_output_type()->::substrait::Type::MergeFrom(from.output_type());
  }
  if (from.function_reference() != 0) {
    set_function_reference(from.function_reference());
  }
}

void Expression_ScalarFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.ScalarFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_ScalarFunction::CopyFrom(const Expression_ScalarFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.ScalarFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_ScalarFunction::IsInitialized() const {
  return true;
}

void Expression_ScalarFunction::Swap(Expression_ScalarFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_ScalarFunction::InternalSwap(Expression_ScalarFunction* other) {
  using std::swap;
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  swap(output_type_, other->output_type_);
  swap(function_reference_, other->function_reference_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_ScalarFunction::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_WindowFunction_Bound_Preceding::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_WindowFunction_Bound_Preceding::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_WindowFunction_Bound_Preceding::Expression_WindowFunction_Bound_Preceding()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Preceding.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.WindowFunction.Bound.Preceding)
}
Expression_WindowFunction_Bound_Preceding::Expression_WindowFunction_Bound_Preceding(const Expression_WindowFunction_Bound_Preceding& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.WindowFunction.Bound.Preceding)
}

void Expression_WindowFunction_Bound_Preceding::SharedCtor() {
  offset_ = GOOGLE_LONGLONG(0);
}

Expression_WindowFunction_Bound_Preceding::~Expression_WindowFunction_Bound_Preceding() {
  // @@protoc_insertion_point(destructor:substrait.Expression.WindowFunction.Bound.Preceding)
  SharedDtor();
}

void Expression_WindowFunction_Bound_Preceding::SharedDtor() {
}

void Expression_WindowFunction_Bound_Preceding::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_WindowFunction_Bound_Preceding::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_WindowFunction_Bound_Preceding& Expression_WindowFunction_Bound_Preceding::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Preceding.base);
  return *internal_default_instance();
}


void Expression_WindowFunction_Bound_Preceding::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.WindowFunction.Bound.Preceding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offset_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Expression_WindowFunction_Bound_Preceding::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.WindowFunction.Bound.Preceding)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.WindowFunction.Bound.Preceding)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.WindowFunction.Bound.Preceding)
  return false;
#undef DO_
}

void Expression_WindowFunction_Bound_Preceding::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.WindowFunction.Bound.Preceding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.WindowFunction.Bound.Preceding)
}

::google::protobuf::uint8* Expression_WindowFunction_Bound_Preceding::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.WindowFunction.Bound.Preceding)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.WindowFunction.Bound.Preceding)
  return target;
}

size_t Expression_WindowFunction_Bound_Preceding::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.WindowFunction.Bound.Preceding)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_WindowFunction_Bound_Preceding::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.WindowFunction.Bound.Preceding)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_WindowFunction_Bound_Preceding* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_WindowFunction_Bound_Preceding>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.WindowFunction.Bound.Preceding)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.WindowFunction.Bound.Preceding)
    MergeFrom(*source);
  }
}

void Expression_WindowFunction_Bound_Preceding::MergeFrom(const Expression_WindowFunction_Bound_Preceding& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.WindowFunction.Bound.Preceding)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void Expression_WindowFunction_Bound_Preceding::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.WindowFunction.Bound.Preceding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_WindowFunction_Bound_Preceding::CopyFrom(const Expression_WindowFunction_Bound_Preceding& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.WindowFunction.Bound.Preceding)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_WindowFunction_Bound_Preceding::IsInitialized() const {
  return true;
}

void Expression_WindowFunction_Bound_Preceding::Swap(Expression_WindowFunction_Bound_Preceding* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_WindowFunction_Bound_Preceding::InternalSwap(Expression_WindowFunction_Bound_Preceding* other) {
  using std::swap;
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_WindowFunction_Bound_Preceding::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_WindowFunction_Bound_Following::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_WindowFunction_Bound_Following::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_WindowFunction_Bound_Following::Expression_WindowFunction_Bound_Following()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Following.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.WindowFunction.Bound.Following)
}
Expression_WindowFunction_Bound_Following::Expression_WindowFunction_Bound_Following(const Expression_WindowFunction_Bound_Following& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.WindowFunction.Bound.Following)
}

void Expression_WindowFunction_Bound_Following::SharedCtor() {
  offset_ = GOOGLE_LONGLONG(0);
}

Expression_WindowFunction_Bound_Following::~Expression_WindowFunction_Bound_Following() {
  // @@protoc_insertion_point(destructor:substrait.Expression.WindowFunction.Bound.Following)
  SharedDtor();
}

void Expression_WindowFunction_Bound_Following::SharedDtor() {
}

void Expression_WindowFunction_Bound_Following::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_WindowFunction_Bound_Following::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_WindowFunction_Bound_Following& Expression_WindowFunction_Bound_Following::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Following.base);
  return *internal_default_instance();
}


void Expression_WindowFunction_Bound_Following::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.WindowFunction.Bound.Following)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offset_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Expression_WindowFunction_Bound_Following::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.WindowFunction.Bound.Following)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.WindowFunction.Bound.Following)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.WindowFunction.Bound.Following)
  return false;
#undef DO_
}

void Expression_WindowFunction_Bound_Following::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.WindowFunction.Bound.Following)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.WindowFunction.Bound.Following)
}

::google::protobuf::uint8* Expression_WindowFunction_Bound_Following::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.WindowFunction.Bound.Following)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.WindowFunction.Bound.Following)
  return target;
}

size_t Expression_WindowFunction_Bound_Following::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.WindowFunction.Bound.Following)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_WindowFunction_Bound_Following::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.WindowFunction.Bound.Following)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_WindowFunction_Bound_Following* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_WindowFunction_Bound_Following>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.WindowFunction.Bound.Following)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.WindowFunction.Bound.Following)
    MergeFrom(*source);
  }
}

void Expression_WindowFunction_Bound_Following::MergeFrom(const Expression_WindowFunction_Bound_Following& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.WindowFunction.Bound.Following)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void Expression_WindowFunction_Bound_Following::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.WindowFunction.Bound.Following)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_WindowFunction_Bound_Following::CopyFrom(const Expression_WindowFunction_Bound_Following& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.WindowFunction.Bound.Following)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_WindowFunction_Bound_Following::IsInitialized() const {
  return true;
}

void Expression_WindowFunction_Bound_Following::Swap(Expression_WindowFunction_Bound_Following* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_WindowFunction_Bound_Following::InternalSwap(Expression_WindowFunction_Bound_Following* other) {
  using std::swap;
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_WindowFunction_Bound_Following::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_WindowFunction_Bound_CurrentRow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_WindowFunction_Bound_CurrentRow::Expression_WindowFunction_Bound_CurrentRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_CurrentRow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.WindowFunction.Bound.CurrentRow)
}
Expression_WindowFunction_Bound_CurrentRow::Expression_WindowFunction_Bound_CurrentRow(const Expression_WindowFunction_Bound_CurrentRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.WindowFunction.Bound.CurrentRow)
}

void Expression_WindowFunction_Bound_CurrentRow::SharedCtor() {
}

Expression_WindowFunction_Bound_CurrentRow::~Expression_WindowFunction_Bound_CurrentRow() {
  // @@protoc_insertion_point(destructor:substrait.Expression.WindowFunction.Bound.CurrentRow)
  SharedDtor();
}

void Expression_WindowFunction_Bound_CurrentRow::SharedDtor() {
}

void Expression_WindowFunction_Bound_CurrentRow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_WindowFunction_Bound_CurrentRow::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_WindowFunction_Bound_CurrentRow& Expression_WindowFunction_Bound_CurrentRow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_CurrentRow.base);
  return *internal_default_instance();
}


void Expression_WindowFunction_Bound_CurrentRow::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Expression_WindowFunction_Bound_CurrentRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.WindowFunction.Bound.CurrentRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.WindowFunction.Bound.CurrentRow)
  return false;
#undef DO_
}

void Expression_WindowFunction_Bound_CurrentRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.WindowFunction.Bound.CurrentRow)
}

::google::protobuf::uint8* Expression_WindowFunction_Bound_CurrentRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.WindowFunction.Bound.CurrentRow)
  return target;
}

size_t Expression_WindowFunction_Bound_CurrentRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_WindowFunction_Bound_CurrentRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_WindowFunction_Bound_CurrentRow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_WindowFunction_Bound_CurrentRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.WindowFunction.Bound.CurrentRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.WindowFunction.Bound.CurrentRow)
    MergeFrom(*source);
  }
}

void Expression_WindowFunction_Bound_CurrentRow::MergeFrom(const Expression_WindowFunction_Bound_CurrentRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Expression_WindowFunction_Bound_CurrentRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_WindowFunction_Bound_CurrentRow::CopyFrom(const Expression_WindowFunction_Bound_CurrentRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.WindowFunction.Bound.CurrentRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_WindowFunction_Bound_CurrentRow::IsInitialized() const {
  return true;
}

void Expression_WindowFunction_Bound_CurrentRow::Swap(Expression_WindowFunction_Bound_CurrentRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_WindowFunction_Bound_CurrentRow::InternalSwap(Expression_WindowFunction_Bound_CurrentRow* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_WindowFunction_Bound_CurrentRow::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_WindowFunction_Bound_Unbounded::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_WindowFunction_Bound_Unbounded::Expression_WindowFunction_Bound_Unbounded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Unbounded.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.WindowFunction.Bound.Unbounded)
}
Expression_WindowFunction_Bound_Unbounded::Expression_WindowFunction_Bound_Unbounded(const Expression_WindowFunction_Bound_Unbounded& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.WindowFunction.Bound.Unbounded)
}

void Expression_WindowFunction_Bound_Unbounded::SharedCtor() {
}

Expression_WindowFunction_Bound_Unbounded::~Expression_WindowFunction_Bound_Unbounded() {
  // @@protoc_insertion_point(destructor:substrait.Expression.WindowFunction.Bound.Unbounded)
  SharedDtor();
}

void Expression_WindowFunction_Bound_Unbounded::SharedDtor() {
}

void Expression_WindowFunction_Bound_Unbounded::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_WindowFunction_Bound_Unbounded::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_WindowFunction_Bound_Unbounded& Expression_WindowFunction_Bound_Unbounded::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound_Unbounded.base);
  return *internal_default_instance();
}


void Expression_WindowFunction_Bound_Unbounded::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Expression_WindowFunction_Bound_Unbounded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.WindowFunction.Bound.Unbounded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.WindowFunction.Bound.Unbounded)
  return false;
#undef DO_
}

void Expression_WindowFunction_Bound_Unbounded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.WindowFunction.Bound.Unbounded)
}

::google::protobuf::uint8* Expression_WindowFunction_Bound_Unbounded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.WindowFunction.Bound.Unbounded)
  return target;
}

size_t Expression_WindowFunction_Bound_Unbounded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_WindowFunction_Bound_Unbounded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_WindowFunction_Bound_Unbounded* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_WindowFunction_Bound_Unbounded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.WindowFunction.Bound.Unbounded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.WindowFunction.Bound.Unbounded)
    MergeFrom(*source);
  }
}

void Expression_WindowFunction_Bound_Unbounded::MergeFrom(const Expression_WindowFunction_Bound_Unbounded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Expression_WindowFunction_Bound_Unbounded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_WindowFunction_Bound_Unbounded::CopyFrom(const Expression_WindowFunction_Bound_Unbounded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.WindowFunction.Bound.Unbounded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_WindowFunction_Bound_Unbounded::IsInitialized() const {
  return true;
}

void Expression_WindowFunction_Bound_Unbounded::Swap(Expression_WindowFunction_Bound_Unbounded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_WindowFunction_Bound_Unbounded::InternalSwap(Expression_WindowFunction_Bound_Unbounded* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_WindowFunction_Bound_Unbounded::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_WindowFunction_Bound::InitAsDefaultInstance() {
  ::substrait::_Expression_WindowFunction_Bound_default_instance_.preceding_ = const_cast< ::substrait::Expression_WindowFunction_Bound_Preceding*>(
      ::substrait::Expression_WindowFunction_Bound_Preceding::internal_default_instance());
  ::substrait::_Expression_WindowFunction_Bound_default_instance_.following_ = const_cast< ::substrait::Expression_WindowFunction_Bound_Following*>(
      ::substrait::Expression_WindowFunction_Bound_Following::internal_default_instance());
  ::substrait::_Expression_WindowFunction_Bound_default_instance_.current_row_ = const_cast< ::substrait::Expression_WindowFunction_Bound_CurrentRow*>(
      ::substrait::Expression_WindowFunction_Bound_CurrentRow::internal_default_instance());
  ::substrait::_Expression_WindowFunction_Bound_default_instance_.unbounded_ = const_cast< ::substrait::Expression_WindowFunction_Bound_Unbounded*>(
      ::substrait::Expression_WindowFunction_Bound_Unbounded::internal_default_instance());
}
void Expression_WindowFunction_Bound::set_allocated_preceding(::substrait::Expression_WindowFunction_Bound_Preceding* preceding) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (preceding) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      preceding = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preceding, submessage_arena);
    }
    set_has_preceding();
    kind_.preceding_ = preceding;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.WindowFunction.Bound.preceding)
}
void Expression_WindowFunction_Bound::set_allocated_following(::substrait::Expression_WindowFunction_Bound_Following* following) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (following) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      following = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, following, submessage_arena);
    }
    set_has_following();
    kind_.following_ = following;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.WindowFunction.Bound.following)
}
void Expression_WindowFunction_Bound::set_allocated_current_row(::substrait::Expression_WindowFunction_Bound_CurrentRow* current_row) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (current_row) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      current_row = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, current_row, submessage_arena);
    }
    set_has_current_row();
    kind_.current_row_ = current_row;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.WindowFunction.Bound.current_row)
}
void Expression_WindowFunction_Bound::set_allocated_unbounded(::substrait::Expression_WindowFunction_Bound_Unbounded* unbounded) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (unbounded) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      unbounded = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, unbounded, submessage_arena);
    }
    set_has_unbounded();
    kind_.unbounded_ = unbounded;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.WindowFunction.Bound.unbounded)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_WindowFunction_Bound::kPrecedingFieldNumber;
const int Expression_WindowFunction_Bound::kFollowingFieldNumber;
const int Expression_WindowFunction_Bound::kCurrentRowFieldNumber;
const int Expression_WindowFunction_Bound::kUnboundedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_WindowFunction_Bound::Expression_WindowFunction_Bound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.WindowFunction.Bound)
}
Expression_WindowFunction_Bound::Expression_WindowFunction_Bound(const Expression_WindowFunction_Bound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kPreceding: {
      mutable_preceding()->::substrait::Expression_WindowFunction_Bound_Preceding::MergeFrom(from.preceding());
      break;
    }
    case kFollowing: {
      mutable_following()->::substrait::Expression_WindowFunction_Bound_Following::MergeFrom(from.following());
      break;
    }
    case kCurrentRow: {
      mutable_current_row()->::substrait::Expression_WindowFunction_Bound_CurrentRow::MergeFrom(from.current_row());
      break;
    }
    case kUnbounded: {
      mutable_unbounded()->::substrait::Expression_WindowFunction_Bound_Unbounded::MergeFrom(from.unbounded());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.WindowFunction.Bound)
}

void Expression_WindowFunction_Bound::SharedCtor() {
  clear_has_kind();
}

Expression_WindowFunction_Bound::~Expression_WindowFunction_Bound() {
  // @@protoc_insertion_point(destructor:substrait.Expression.WindowFunction.Bound)
  SharedDtor();
}

void Expression_WindowFunction_Bound::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void Expression_WindowFunction_Bound::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_WindowFunction_Bound::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_WindowFunction_Bound& Expression_WindowFunction_Bound::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_WindowFunction_Bound.base);
  return *internal_default_instance();
}


void Expression_WindowFunction_Bound::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.WindowFunction.Bound)
  switch (kind_case()) {
    case kPreceding: {
      delete kind_.preceding_;
      break;
    }
    case kFollowing: {
      delete kind_.following_;
      break;
    }
    case kCurrentRow: {
      delete kind_.current_row_;
      break;
    }
    case kUnbounded: {
      delete kind_.unbounded_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Expression_WindowFunction_Bound::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.WindowFunction.Bound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear();
}

bool Expression_WindowFunction_Bound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.WindowFunction.Bound)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.WindowFunction.Bound.Preceding preceding = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preceding()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.WindowFunction.Bound.Following following = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_following()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.WindowFunction.Bound.CurrentRow current_row = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_current_row()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.WindowFunction.Bound.Unbounded unbounded = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_unbounded()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.WindowFunction.Bound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.WindowFunction.Bound)
  return false;
#undef DO_
}

void Expression_WindowFunction_Bound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.WindowFunction.Bound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.WindowFunction.Bound.Preceding preceding = 1;
  if (has_preceding()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_preceding(), output);
  }

  // .substrait.Expression.WindowFunction.Bound.Following following = 2;
  if (has_following()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_following(), output);
  }

  // .substrait.Expression.WindowFunction.Bound.CurrentRow current_row = 3;
  if (has_current_row()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_current_row(), output);
  }

  // .substrait.Expression.WindowFunction.Bound.Unbounded unbounded = 4;
  if (has_unbounded()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_unbounded(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.WindowFunction.Bound)
}

::google::protobuf::uint8* Expression_WindowFunction_Bound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.WindowFunction.Bound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.WindowFunction.Bound.Preceding preceding = 1;
  if (has_preceding()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_preceding(), deterministic, target);
  }

  // .substrait.Expression.WindowFunction.Bound.Following following = 2;
  if (has_following()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_following(), deterministic, target);
  }

  // .substrait.Expression.WindowFunction.Bound.CurrentRow current_row = 3;
  if (has_current_row()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_current_row(), deterministic, target);
  }

  // .substrait.Expression.WindowFunction.Bound.Unbounded unbounded = 4;
  if (has_unbounded()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_unbounded(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.WindowFunction.Bound)
  return target;
}

size_t Expression_WindowFunction_Bound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.WindowFunction.Bound)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (kind_case()) {
    // .substrait.Expression.WindowFunction.Bound.Preceding preceding = 1;
    case kPreceding: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.preceding_);
      break;
    }
    // .substrait.Expression.WindowFunction.Bound.Following following = 2;
    case kFollowing: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.following_);
      break;
    }
    // .substrait.Expression.WindowFunction.Bound.CurrentRow current_row = 3;
    case kCurrentRow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.current_row_);
      break;
    }
    // .substrait.Expression.WindowFunction.Bound.Unbounded unbounded = 4;
    case kUnbounded: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.unbounded_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_WindowFunction_Bound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.WindowFunction.Bound)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_WindowFunction_Bound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_WindowFunction_Bound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.WindowFunction.Bound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.WindowFunction.Bound)
    MergeFrom(*source);
  }
}

void Expression_WindowFunction_Bound::MergeFrom(const Expression_WindowFunction_Bound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.WindowFunction.Bound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kPreceding: {
      mutable_preceding()->::substrait::Expression_WindowFunction_Bound_Preceding::MergeFrom(from.preceding());
      break;
    }
    case kFollowing: {
      mutable_following()->::substrait::Expression_WindowFunction_Bound_Following::MergeFrom(from.following());
      break;
    }
    case kCurrentRow: {
      mutable_current_row()->::substrait::Expression_WindowFunction_Bound_CurrentRow::MergeFrom(from.current_row());
      break;
    }
    case kUnbounded: {
      mutable_unbounded()->::substrait::Expression_WindowFunction_Bound_Unbounded::MergeFrom(from.unbounded());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Expression_WindowFunction_Bound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.WindowFunction.Bound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_WindowFunction_Bound::CopyFrom(const Expression_WindowFunction_Bound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.WindowFunction.Bound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_WindowFunction_Bound::IsInitialized() const {
  return true;
}

void Expression_WindowFunction_Bound::Swap(Expression_WindowFunction_Bound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_WindowFunction_Bound::InternalSwap(Expression_WindowFunction_Bound* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_WindowFunction_Bound::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_WindowFunction::InitAsDefaultInstance() {
  ::substrait::_Expression_WindowFunction_default_instance_._instance.get_mutable()->output_type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_Expression_WindowFunction_default_instance_._instance.get_mutable()->lower_bound_ = const_cast< ::substrait::Expression_WindowFunction_Bound*>(
      ::substrait::Expression_WindowFunction_Bound::internal_default_instance());
  ::substrait::_Expression_WindowFunction_default_instance_._instance.get_mutable()->upper_bound_ = const_cast< ::substrait::Expression_WindowFunction_Bound*>(
      ::substrait::Expression_WindowFunction_Bound::internal_default_instance());
}
void Expression_WindowFunction::clear_output_type() {
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_WindowFunction::kFunctionReferenceFieldNumber;
const int Expression_WindowFunction::kArgumentsFieldNumber;
const int Expression_WindowFunction::kOptionsFieldNumber;
const int Expression_WindowFunction::kOutputTypeFieldNumber;
const int Expression_WindowFunction::kPhaseFieldNumber;
const int Expression_WindowFunction::kSortsFieldNumber;
const int Expression_WindowFunction::kInvocationFieldNumber;
const int Expression_WindowFunction::kPartitionsFieldNumber;
const int Expression_WindowFunction::kLowerBoundFieldNumber;
const int Expression_WindowFunction::kUpperBoundFieldNumber;
const int Expression_WindowFunction::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_WindowFunction::Expression_WindowFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.WindowFunction)
}
Expression_WindowFunction::Expression_WindowFunction(const Expression_WindowFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      partitions_(from.partitions_),
      sorts_(from.sorts_),
      args_(from.args_),
      arguments_(from.arguments_),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_upper_bound()) {
    upper_bound_ = new ::substrait::Expression_WindowFunction_Bound(*from.upper_bound_);
  } else {
    upper_bound_ = NULL;
  }
  if (from.has_lower_bound()) {
    lower_bound_ = new ::substrait::Expression_WindowFunction_Bound(*from.lower_bound_);
  } else {
    lower_bound_ = NULL;
  }
  if (from.has_output_type()) {
    output_type_ = new ::substrait::Type(*from.output_type_);
  } else {
    output_type_ = NULL;
  }
  ::memcpy(&function_reference_, &from.function_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&invocation_) -
    reinterpret_cast<char*>(&function_reference_)) + sizeof(invocation_));
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.WindowFunction)
}

void Expression_WindowFunction::SharedCtor() {
  ::memset(&upper_bound_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invocation_) -
      reinterpret_cast<char*>(&upper_bound_)) + sizeof(invocation_));
}

Expression_WindowFunction::~Expression_WindowFunction() {
  // @@protoc_insertion_point(destructor:substrait.Expression.WindowFunction)
  SharedDtor();
}

void Expression_WindowFunction::SharedDtor() {
  if (this != internal_default_instance()) delete upper_bound_;
  if (this != internal_default_instance()) delete lower_bound_;
  if (this != internal_default_instance()) delete output_type_;
}

void Expression_WindowFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_WindowFunction::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_WindowFunction& Expression_WindowFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_WindowFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.WindowFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partitions_.Clear();
  sorts_.Clear();
  args_.Clear();
  arguments_.Clear();
  options_.Clear();
  if (GetArenaNoVirtual() == NULL && upper_bound_ != NULL) {
    delete upper_bound_;
  }
  upper_bound_ = NULL;
  if (GetArenaNoVirtual() == NULL && lower_bound_ != NULL) {
    delete lower_bound_;
  }
  lower_bound_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
  ::memset(&function_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invocation_) -
      reinterpret_cast<char*>(&function_reference_)) + sizeof(invocation_));
  _internal_metadata_.Clear();
}

bool Expression_WindowFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.WindowFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 function_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression partitions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_partitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.SortField sorts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sorts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.WindowFunction.Bound upper_bound = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upper_bound()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.WindowFunction.Bound lower_bound = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lower_bound()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.AggregationPhase phase = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_phase(static_cast< ::substrait::AggregationPhase >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type output_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression args = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.FunctionArgument arguments = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.AggregateFunction.AggregationInvocation invocation = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_invocation(static_cast< ::substrait::AggregateFunction_AggregationInvocation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.FunctionOption options = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.WindowFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.WindowFunction)
  return false;
#undef DO_
}

void Expression_WindowFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.WindowFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->function_reference(), output);
  }

  // repeated .substrait.Expression partitions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partitions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->partitions(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.SortField sorts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sorts(static_cast<int>(i)),
      output);
  }

  // .substrait.Expression.WindowFunction.Bound upper_bound = 4;
  if (this->has_upper_bound()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_upper_bound(), output);
  }

  // .substrait.Expression.WindowFunction.Bound lower_bound = 5;
  if (this->has_lower_bound()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_lower_bound(), output);
  }

  // .substrait.AggregationPhase phase = 6;
  if (this->phase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->phase(), output);
  }

  // .substrait.Type output_type = 7;
  if (this->has_output_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_output_type(), output);
  }

  // repeated .substrait.Expression args = 8 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->args(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.FunctionArgument arguments = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // .substrait.AggregateFunction.AggregationInvocation invocation = 10;
  if (this->invocation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->invocation(), output);
  }

  // repeated .substrait.FunctionOption options = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->options(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.WindowFunction)
}

::google::protobuf::uint8* Expression_WindowFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.WindowFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->function_reference(), target);
  }

  // repeated .substrait.Expression partitions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->partitions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->partitions(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.SortField sorts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sorts(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Expression.WindowFunction.Bound upper_bound = 4;
  if (this->has_upper_bound()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_upper_bound(), deterministic, target);
  }

  // .substrait.Expression.WindowFunction.Bound lower_bound = 5;
  if (this->has_lower_bound()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_lower_bound(), deterministic, target);
  }

  // .substrait.AggregationPhase phase = 6;
  if (this->phase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->phase(), target);
  }

  // .substrait.Type output_type = 7;
  if (this->has_output_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_output_type(), deterministic, target);
  }

  // repeated .substrait.Expression args = 8 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->args(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.FunctionArgument arguments = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.AggregateFunction.AggregationInvocation invocation = 10;
  if (this->invocation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->invocation(), target);
  }

  // repeated .substrait.FunctionOption options = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->options(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.WindowFunction)
  return target;
}

size_t Expression_WindowFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.WindowFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression partitions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->partitions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->partitions(static_cast<int>(i)));
    }
  }

  // repeated .substrait.SortField sorts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sorts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sorts(static_cast<int>(i)));
    }
  }

  // repeated .substrait.Expression args = 8 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // repeated .substrait.FunctionArgument arguments = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // repeated .substrait.FunctionOption options = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // .substrait.Expression.WindowFunction.Bound upper_bound = 4;
  if (this->has_upper_bound()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upper_bound_);
  }

  // .substrait.Expression.WindowFunction.Bound lower_bound = 5;
  if (this->has_lower_bound()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lower_bound_);
  }

  // .substrait.Type output_type = 7;
  if (this->has_output_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_type_);
  }

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->function_reference());
  }

  // .substrait.AggregationPhase phase = 6;
  if (this->phase() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phase());
  }

  // .substrait.AggregateFunction.AggregationInvocation invocation = 10;
  if (this->invocation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->invocation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_WindowFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.WindowFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_WindowFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_WindowFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.WindowFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.WindowFunction)
    MergeFrom(*source);
  }
}

void Expression_WindowFunction::MergeFrom(const Expression_WindowFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.WindowFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  partitions_.MergeFrom(from.partitions_);
  sorts_.MergeFrom(from.sorts_);
  args_.MergeFrom(from.args_);
  arguments_.MergeFrom(from.arguments_);
  options_.MergeFrom(from.options_);
  if (from.has_upper_bound()) {
    mutable_upper_bound()->::substrait::Expression_WindowFunction_Bound::MergeFrom(from.upper_bound());
  }
  if (from.has_lower_bound()) {
    mutable_lower_bound()->::substrait::Expression_WindowFunction_Bound::MergeFrom(from.lower_bound());
  }
  if (from.has_output_type()) {
    mutable_output_type()->::substrait::Type::MergeFrom(from.output_type());
  }
  if (from.function_reference() != 0) {
    set_function_reference(from.function_reference());
  }
  if (from.phase() != 0) {
    set_phase(from.phase());
  }
  if (from.invocation() != 0) {
    set_invocation(from.invocation());
  }
}

void Expression_WindowFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.WindowFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_WindowFunction::CopyFrom(const Expression_WindowFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.WindowFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_WindowFunction::IsInitialized() const {
  return true;
}

void Expression_WindowFunction::Swap(Expression_WindowFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_WindowFunction::InternalSwap(Expression_WindowFunction* other) {
  using std::swap;
  CastToBase(&partitions_)->InternalSwap(CastToBase(&other->partitions_));
  CastToBase(&sorts_)->InternalSwap(CastToBase(&other->sorts_));
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  swap(upper_bound_, other->upper_bound_);
  swap(lower_bound_, other->lower_bound_);
  swap(output_type_, other->output_type_);
  swap(function_reference_, other->function_reference_);
  swap(phase_, other->phase_);
  swap(invocation_, other->invocation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_WindowFunction::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_IfThen_IfClause::InitAsDefaultInstance() {
  ::substrait::_Expression_IfThen_IfClause_default_instance_._instance.get_mutable()->if__ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_Expression_IfThen_IfClause_default_instance_._instance.get_mutable()->then_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_IfThen_IfClause::kIfFieldNumber;
const int Expression_IfThen_IfClause::kThenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_IfThen_IfClause::Expression_IfThen_IfClause()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.IfThen.IfClause)
}
Expression_IfThen_IfClause::Expression_IfThen_IfClause(const Expression_IfThen_IfClause& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_if_()) {
    if__ = new ::substrait::Expression(*from.if__);
  } else {
    if__ = NULL;
  }
  if (from.has_then()) {
    then_ = new ::substrait::Expression(*from.then_);
  } else {
    then_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.IfThen.IfClause)
}

void Expression_IfThen_IfClause::SharedCtor() {
  ::memset(&if__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&then_) -
      reinterpret_cast<char*>(&if__)) + sizeof(then_));
}

Expression_IfThen_IfClause::~Expression_IfThen_IfClause() {
  // @@protoc_insertion_point(destructor:substrait.Expression.IfThen.IfClause)
  SharedDtor();
}

void Expression_IfThen_IfClause::SharedDtor() {
  if (this != internal_default_instance()) delete if__;
  if (this != internal_default_instance()) delete then_;
}

void Expression_IfThen_IfClause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_IfThen_IfClause::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_IfThen_IfClause& Expression_IfThen_IfClause::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_IfThen_IfClause::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.IfThen.IfClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && if__ != NULL) {
    delete if__;
  }
  if__ = NULL;
  if (GetArenaNoVirtual() == NULL && then_ != NULL) {
    delete then_;
  }
  then_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_IfThen_IfClause::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.IfThen.IfClause)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression if = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_if_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression then = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_then()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.IfThen.IfClause)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.IfThen.IfClause)
  return false;
#undef DO_
}

void Expression_IfThen_IfClause::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.IfThen.IfClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression if = 1;
  if (this->has_if_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_if_(), output);
  }

  // .substrait.Expression then = 2;
  if (this->has_then()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_then(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.IfThen.IfClause)
}

::google::protobuf::uint8* Expression_IfThen_IfClause::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.IfThen.IfClause)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression if = 1;
  if (this->has_if_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_if_(), deterministic, target);
  }

  // .substrait.Expression then = 2;
  if (this->has_then()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_then(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.IfThen.IfClause)
  return target;
}

size_t Expression_IfThen_IfClause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.IfThen.IfClause)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression if = 1;
  if (this->has_if_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *if__);
  }

  // .substrait.Expression then = 2;
  if (this->has_then()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *then_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_IfThen_IfClause::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.IfThen.IfClause)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_IfThen_IfClause* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_IfThen_IfClause>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.IfThen.IfClause)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.IfThen.IfClause)
    MergeFrom(*source);
  }
}

void Expression_IfThen_IfClause::MergeFrom(const Expression_IfThen_IfClause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.IfThen.IfClause)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_if_()) {
    mutable_if_()->::substrait::Expression::MergeFrom(from.if_());
  }
  if (from.has_then()) {
    mutable_then()->::substrait::Expression::MergeFrom(from.then());
  }
}

void Expression_IfThen_IfClause::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.IfThen.IfClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_IfThen_IfClause::CopyFrom(const Expression_IfThen_IfClause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.IfThen.IfClause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_IfThen_IfClause::IsInitialized() const {
  return true;
}

void Expression_IfThen_IfClause::Swap(Expression_IfThen_IfClause* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_IfThen_IfClause::InternalSwap(Expression_IfThen_IfClause* other) {
  using std::swap;
  swap(if__, other->if__);
  swap(then_, other->then_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_IfThen_IfClause::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_IfThen::InitAsDefaultInstance() {
  ::substrait::_Expression_IfThen_default_instance_._instance.get_mutable()->else__ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_IfThen::kIfsFieldNumber;
const int Expression_IfThen::kElseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_IfThen::Expression_IfThen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.IfThen)
}
Expression_IfThen::Expression_IfThen(const Expression_IfThen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ifs_(from.ifs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_else_()) {
    else__ = new ::substrait::Expression(*from.else__);
  } else {
    else__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.IfThen)
}

void Expression_IfThen::SharedCtor() {
  else__ = NULL;
}

Expression_IfThen::~Expression_IfThen() {
  // @@protoc_insertion_point(destructor:substrait.Expression.IfThen)
  SharedDtor();
}

void Expression_IfThen::SharedDtor() {
  if (this != internal_default_instance()) delete else__;
}

void Expression_IfThen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_IfThen::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_IfThen& Expression_IfThen::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_IfThen::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.IfThen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ifs_.Clear();
  if (GetArenaNoVirtual() == NULL && else__ != NULL) {
    delete else__;
  }
  else__ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_IfThen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.IfThen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.IfThen.IfClause ifs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ifs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression else = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_else_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.IfThen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.IfThen)
  return false;
#undef DO_
}

void Expression_IfThen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.IfThen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.IfThen.IfClause ifs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ifs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->ifs(static_cast<int>(i)),
      output);
  }

  // .substrait.Expression else = 2;
  if (this->has_else_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_else_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.IfThen)
}

::google::protobuf::uint8* Expression_IfThen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.IfThen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.IfThen.IfClause ifs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ifs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ifs(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Expression else = 2;
  if (this->has_else_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_else_(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.IfThen)
  return target;
}

size_t Expression_IfThen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.IfThen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.IfThen.IfClause ifs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ifs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ifs(static_cast<int>(i)));
    }
  }

  // .substrait.Expression else = 2;
  if (this->has_else_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *else__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_IfThen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.IfThen)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_IfThen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_IfThen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.IfThen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.IfThen)
    MergeFrom(*source);
  }
}

void Expression_IfThen::MergeFrom(const Expression_IfThen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.IfThen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ifs_.MergeFrom(from.ifs_);
  if (from.has_else_()) {
    mutable_else_()->::substrait::Expression::MergeFrom(from.else_());
  }
}

void Expression_IfThen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.IfThen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_IfThen::CopyFrom(const Expression_IfThen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.IfThen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_IfThen::IsInitialized() const {
  return true;
}

void Expression_IfThen::Swap(Expression_IfThen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_IfThen::InternalSwap(Expression_IfThen* other) {
  using std::swap;
  CastToBase(&ifs_)->InternalSwap(CastToBase(&other->ifs_));
  swap(else__, other->else__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_IfThen::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Cast::InitAsDefaultInstance() {
  ::substrait::_Expression_Cast_default_instance_._instance.get_mutable()->type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_Expression_Cast_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
void Expression_Cast::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Cast::kTypeFieldNumber;
const int Expression_Cast::kInputFieldNumber;
const int Expression_Cast::kFailureBehaviorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Cast::Expression_Cast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Cast)
}
Expression_Cast::Expression_Cast(const Expression_Cast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::substrait::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_input()) {
    input_ = new ::substrait::Expression(*from.input_);
  } else {
    input_ = NULL;
  }
  failure_behavior_ = from.failure_behavior_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Cast)
}

void Expression_Cast::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&failure_behavior_) -
      reinterpret_cast<char*>(&type_)) + sizeof(failure_behavior_));
}

Expression_Cast::~Expression_Cast() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Cast)
  SharedDtor();
}

void Expression_Cast::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete input_;
}

void Expression_Cast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Cast::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Cast& Expression_Cast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Cast::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Cast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  failure_behavior_ = 0;
  _internal_metadata_.Clear();
}

bool Expression_Cast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Cast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Cast.FailureBehavior failure_behavior = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_failure_behavior(static_cast< ::substrait::Expression_Cast_FailureBehavior >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Cast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Cast)
  return false;
#undef DO_
}

void Expression_Cast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Cast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_type(), output);
  }

  // .substrait.Expression input = 2;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_input(), output);
  }

  // .substrait.Expression.Cast.FailureBehavior failure_behavior = 3;
  if (this->failure_behavior() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->failure_behavior(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Cast)
}

::google::protobuf::uint8* Expression_Cast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Cast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_type(), deterministic, target);
  }

  // .substrait.Expression input = 2;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_input(), deterministic, target);
  }

  // .substrait.Expression.Cast.FailureBehavior failure_behavior = 3;
  if (this->failure_behavior() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->failure_behavior(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Cast)
  return target;
}

size_t Expression_Cast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Cast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Type type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .substrait.Expression input = 2;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .substrait.Expression.Cast.FailureBehavior failure_behavior = 3;
  if (this->failure_behavior() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->failure_behavior());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Cast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Cast)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Cast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Cast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Cast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Cast)
    MergeFrom(*source);
  }
}

void Expression_Cast::MergeFrom(const Expression_Cast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Cast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    mutable_type()->::substrait::Type::MergeFrom(from.type());
  }
  if (from.has_input()) {
    mutable_input()->::substrait::Expression::MergeFrom(from.input());
  }
  if (from.failure_behavior() != 0) {
    set_failure_behavior(from.failure_behavior());
  }
}

void Expression_Cast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Cast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Cast::CopyFrom(const Expression_Cast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Cast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Cast::IsInitialized() const {
  return true;
}

void Expression_Cast::Swap(Expression_Cast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Cast::InternalSwap(Expression_Cast* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(input_, other->input_);
  swap(failure_behavior_, other->failure_behavior_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Cast::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_SwitchExpression_IfValue::InitAsDefaultInstance() {
  ::substrait::_Expression_SwitchExpression_IfValue_default_instance_._instance.get_mutable()->if__ = const_cast< ::substrait::Expression_Literal*>(
      ::substrait::Expression_Literal::internal_default_instance());
  ::substrait::_Expression_SwitchExpression_IfValue_default_instance_._instance.get_mutable()->then_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_SwitchExpression_IfValue::kIfFieldNumber;
const int Expression_SwitchExpression_IfValue::kThenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_SwitchExpression_IfValue::Expression_SwitchExpression_IfValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.SwitchExpression.IfValue)
}
Expression_SwitchExpression_IfValue::Expression_SwitchExpression_IfValue(const Expression_SwitchExpression_IfValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_if_()) {
    if__ = new ::substrait::Expression_Literal(*from.if__);
  } else {
    if__ = NULL;
  }
  if (from.has_then()) {
    then_ = new ::substrait::Expression(*from.then_);
  } else {
    then_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.SwitchExpression.IfValue)
}

void Expression_SwitchExpression_IfValue::SharedCtor() {
  ::memset(&if__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&then_) -
      reinterpret_cast<char*>(&if__)) + sizeof(then_));
}

Expression_SwitchExpression_IfValue::~Expression_SwitchExpression_IfValue() {
  // @@protoc_insertion_point(destructor:substrait.Expression.SwitchExpression.IfValue)
  SharedDtor();
}

void Expression_SwitchExpression_IfValue::SharedDtor() {
  if (this != internal_default_instance()) delete if__;
  if (this != internal_default_instance()) delete then_;
}

void Expression_SwitchExpression_IfValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_SwitchExpression_IfValue::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_SwitchExpression_IfValue& Expression_SwitchExpression_IfValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_SwitchExpression_IfValue::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.SwitchExpression.IfValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && if__ != NULL) {
    delete if__;
  }
  if__ = NULL;
  if (GetArenaNoVirtual() == NULL && then_ != NULL) {
    delete then_;
  }
  then_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_SwitchExpression_IfValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.SwitchExpression.IfValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Literal if = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_if_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression then = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_then()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.SwitchExpression.IfValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.SwitchExpression.IfValue)
  return false;
#undef DO_
}

void Expression_SwitchExpression_IfValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.SwitchExpression.IfValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal if = 1;
  if (this->has_if_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_if_(), output);
  }

  // .substrait.Expression then = 2;
  if (this->has_then()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_then(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.SwitchExpression.IfValue)
}

::google::protobuf::uint8* Expression_SwitchExpression_IfValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.SwitchExpression.IfValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal if = 1;
  if (this->has_if_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_if_(), deterministic, target);
  }

  // .substrait.Expression then = 2;
  if (this->has_then()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_then(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.SwitchExpression.IfValue)
  return target;
}

size_t Expression_SwitchExpression_IfValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.SwitchExpression.IfValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.Literal if = 1;
  if (this->has_if_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *if__);
  }

  // .substrait.Expression then = 2;
  if (this->has_then()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *then_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_SwitchExpression_IfValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.SwitchExpression.IfValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_SwitchExpression_IfValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_SwitchExpression_IfValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.SwitchExpression.IfValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.SwitchExpression.IfValue)
    MergeFrom(*source);
  }
}

void Expression_SwitchExpression_IfValue::MergeFrom(const Expression_SwitchExpression_IfValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.SwitchExpression.IfValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_if_()) {
    mutable_if_()->::substrait::Expression_Literal::MergeFrom(from.if_());
  }
  if (from.has_then()) {
    mutable_then()->::substrait::Expression::MergeFrom(from.then());
  }
}

void Expression_SwitchExpression_IfValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.SwitchExpression.IfValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_SwitchExpression_IfValue::CopyFrom(const Expression_SwitchExpression_IfValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.SwitchExpression.IfValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_SwitchExpression_IfValue::IsInitialized() const {
  return true;
}

void Expression_SwitchExpression_IfValue::Swap(Expression_SwitchExpression_IfValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_SwitchExpression_IfValue::InternalSwap(Expression_SwitchExpression_IfValue* other) {
  using std::swap;
  swap(if__, other->if__);
  swap(then_, other->then_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_SwitchExpression_IfValue::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_SwitchExpression::InitAsDefaultInstance() {
  ::substrait::_Expression_SwitchExpression_default_instance_._instance.get_mutable()->match_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_Expression_SwitchExpression_default_instance_._instance.get_mutable()->else__ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_SwitchExpression::kMatchFieldNumber;
const int Expression_SwitchExpression::kIfsFieldNumber;
const int Expression_SwitchExpression::kElseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_SwitchExpression::Expression_SwitchExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.SwitchExpression)
}
Expression_SwitchExpression::Expression_SwitchExpression(const Expression_SwitchExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ifs_(from.ifs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_else_()) {
    else__ = new ::substrait::Expression(*from.else__);
  } else {
    else__ = NULL;
  }
  if (from.has_match()) {
    match_ = new ::substrait::Expression(*from.match_);
  } else {
    match_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.SwitchExpression)
}

void Expression_SwitchExpression::SharedCtor() {
  ::memset(&else__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_) -
      reinterpret_cast<char*>(&else__)) + sizeof(match_));
}

Expression_SwitchExpression::~Expression_SwitchExpression() {
  // @@protoc_insertion_point(destructor:substrait.Expression.SwitchExpression)
  SharedDtor();
}

void Expression_SwitchExpression::SharedDtor() {
  if (this != internal_default_instance()) delete else__;
  if (this != internal_default_instance()) delete match_;
}

void Expression_SwitchExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_SwitchExpression::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_SwitchExpression& Expression_SwitchExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_SwitchExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.SwitchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ifs_.Clear();
  if (GetArenaNoVirtual() == NULL && else__ != NULL) {
    delete else__;
  }
  else__ = NULL;
  if (GetArenaNoVirtual() == NULL && match_ != NULL) {
    delete match_;
  }
  match_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_SwitchExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.SwitchExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.SwitchExpression.IfValue ifs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ifs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression else = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_else_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression match = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.SwitchExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.SwitchExpression)
  return false;
#undef DO_
}

void Expression_SwitchExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.SwitchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.SwitchExpression.IfValue ifs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ifs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->ifs(static_cast<int>(i)),
      output);
  }

  // .substrait.Expression else = 2;
  if (this->has_else_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_else_(), output);
  }

  // .substrait.Expression match = 3;
  if (this->has_match()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_match(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.SwitchExpression)
}

::google::protobuf::uint8* Expression_SwitchExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.SwitchExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.SwitchExpression.IfValue ifs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ifs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ifs(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Expression else = 2;
  if (this->has_else_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_else_(), deterministic, target);
  }

  // .substrait.Expression match = 3;
  if (this->has_match()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_match(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.SwitchExpression)
  return target;
}

size_t Expression_SwitchExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.SwitchExpression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.SwitchExpression.IfValue ifs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ifs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ifs(static_cast<int>(i)));
    }
  }

  // .substrait.Expression else = 2;
  if (this->has_else_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *else__);
  }

  // .substrait.Expression match = 3;
  if (this->has_match()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_SwitchExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.SwitchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_SwitchExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_SwitchExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.SwitchExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.SwitchExpression)
    MergeFrom(*source);
  }
}

void Expression_SwitchExpression::MergeFrom(const Expression_SwitchExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.SwitchExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ifs_.MergeFrom(from.ifs_);
  if (from.has_else_()) {
    mutable_else_()->::substrait::Expression::MergeFrom(from.else_());
  }
  if (from.has_match()) {
    mutable_match()->::substrait::Expression::MergeFrom(from.match());
  }
}

void Expression_SwitchExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.SwitchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_SwitchExpression::CopyFrom(const Expression_SwitchExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.SwitchExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_SwitchExpression::IsInitialized() const {
  return true;
}

void Expression_SwitchExpression::Swap(Expression_SwitchExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_SwitchExpression::InternalSwap(Expression_SwitchExpression* other) {
  using std::swap;
  CastToBase(&ifs_)->InternalSwap(CastToBase(&other->ifs_));
  swap(else__, other->else__);
  swap(match_, other->match_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_SwitchExpression::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_SingularOrList::InitAsDefaultInstance() {
  ::substrait::_Expression_SingularOrList_default_instance_._instance.get_mutable()->value_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_SingularOrList::kValueFieldNumber;
const int Expression_SingularOrList::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_SingularOrList::Expression_SingularOrList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.SingularOrList)
}
Expression_SingularOrList::Expression_SingularOrList(const Expression_SingularOrList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::substrait::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.SingularOrList)
}

void Expression_SingularOrList::SharedCtor() {
  value_ = NULL;
}

Expression_SingularOrList::~Expression_SingularOrList() {
  // @@protoc_insertion_point(destructor:substrait.Expression.SingularOrList)
  SharedDtor();
}

void Expression_SingularOrList::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void Expression_SingularOrList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_SingularOrList::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_SingularOrList& Expression_SingularOrList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_SingularOrList::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.SingularOrList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_SingularOrList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.SingularOrList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.SingularOrList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.SingularOrList)
  return false;
#undef DO_
}

void Expression_SingularOrList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.SingularOrList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  // repeated .substrait.Expression options = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->options(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.SingularOrList)
}

::google::protobuf::uint8* Expression_SingularOrList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.SingularOrList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  // repeated .substrait.Expression options = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->options(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.SingularOrList)
  return target;
}

size_t Expression_SingularOrList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.SingularOrList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression options = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // .substrait.Expression value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_SingularOrList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.SingularOrList)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_SingularOrList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_SingularOrList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.SingularOrList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.SingularOrList)
    MergeFrom(*source);
  }
}

void Expression_SingularOrList::MergeFrom(const Expression_SingularOrList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.SingularOrList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  if (from.has_value()) {
    mutable_value()->::substrait::Expression::MergeFrom(from.value());
  }
}

void Expression_SingularOrList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.SingularOrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_SingularOrList::CopyFrom(const Expression_SingularOrList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.SingularOrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_SingularOrList::IsInitialized() const {
  return true;
}

void Expression_SingularOrList::Swap(Expression_SingularOrList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_SingularOrList::InternalSwap(Expression_SingularOrList* other) {
  using std::swap;
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_SingularOrList::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MultiOrList_Record::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MultiOrList_Record::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MultiOrList_Record::Expression_MultiOrList_Record()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MultiOrList.Record)
}
Expression_MultiOrList_Record::Expression_MultiOrList_Record(const Expression_MultiOrList_Record& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MultiOrList.Record)
}

void Expression_MultiOrList_Record::SharedCtor() {
}

Expression_MultiOrList_Record::~Expression_MultiOrList_Record() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MultiOrList.Record)
  SharedDtor();
}

void Expression_MultiOrList_Record::SharedDtor() {
}

void Expression_MultiOrList_Record::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MultiOrList_Record::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MultiOrList_Record& Expression_MultiOrList_Record::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_MultiOrList_Record::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MultiOrList.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_MultiOrList_Record::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MultiOrList.Record)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression fields = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MultiOrList.Record)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MultiOrList.Record)
  return false;
#undef DO_
}

void Expression_MultiOrList_Record::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MultiOrList.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->fields(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MultiOrList.Record)
}

::google::protobuf::uint8* Expression_MultiOrList_Record::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MultiOrList.Record)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression fields = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MultiOrList.Record)
  return target;
}

size_t Expression_MultiOrList_Record::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MultiOrList.Record)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression fields = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MultiOrList_Record::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MultiOrList.Record)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MultiOrList_Record* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MultiOrList_Record>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MultiOrList.Record)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MultiOrList.Record)
    MergeFrom(*source);
  }
}

void Expression_MultiOrList_Record::MergeFrom(const Expression_MultiOrList_Record& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MultiOrList.Record)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
}

void Expression_MultiOrList_Record::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MultiOrList.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MultiOrList_Record::CopyFrom(const Expression_MultiOrList_Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MultiOrList.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MultiOrList_Record::IsInitialized() const {
  return true;
}

void Expression_MultiOrList_Record::Swap(Expression_MultiOrList_Record* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MultiOrList_Record::InternalSwap(Expression_MultiOrList_Record* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MultiOrList_Record::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MultiOrList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MultiOrList::kValueFieldNumber;
const int Expression_MultiOrList::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MultiOrList::Expression_MultiOrList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MultiOrList)
}
Expression_MultiOrList::Expression_MultiOrList(const Expression_MultiOrList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_(from.value_),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MultiOrList)
}

void Expression_MultiOrList::SharedCtor() {
}

Expression_MultiOrList::~Expression_MultiOrList() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MultiOrList)
  SharedDtor();
}

void Expression_MultiOrList::SharedDtor() {
}

void Expression_MultiOrList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MultiOrList::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MultiOrList& Expression_MultiOrList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_MultiOrList::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MultiOrList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  options_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_MultiOrList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MultiOrList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression.MultiOrList.Record options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MultiOrList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MultiOrList)
  return false;
#undef DO_
}

void Expression_MultiOrList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MultiOrList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression value = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->value(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.Expression.MultiOrList.Record options = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->options(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MultiOrList)
}

::google::protobuf::uint8* Expression_MultiOrList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MultiOrList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression value = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->value(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.Expression.MultiOrList.Record options = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->options(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MultiOrList)
  return target;
}

size_t Expression_MultiOrList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MultiOrList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression value = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->value_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->value(static_cast<int>(i)));
    }
  }

  // repeated .substrait.Expression.MultiOrList.Record options = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MultiOrList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MultiOrList)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MultiOrList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MultiOrList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MultiOrList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MultiOrList)
    MergeFrom(*source);
  }
}

void Expression_MultiOrList::MergeFrom(const Expression_MultiOrList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MultiOrList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  options_.MergeFrom(from.options_);
}

void Expression_MultiOrList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MultiOrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MultiOrList::CopyFrom(const Expression_MultiOrList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MultiOrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MultiOrList::IsInitialized() const {
  return true;
}

void Expression_MultiOrList::Swap(Expression_MultiOrList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MultiOrList::InternalSwap(Expression_MultiOrList* other) {
  using std::swap;
  CastToBase(&value_)->InternalSwap(CastToBase(&other->value_));
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MultiOrList::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_EmbeddedFunction_PythonPickleFunction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_EmbeddedFunction_PythonPickleFunction::kFunctionFieldNumber;
const int Expression_EmbeddedFunction_PythonPickleFunction::kPrerequisiteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_EmbeddedFunction_PythonPickleFunction::Expression_EmbeddedFunction_PythonPickleFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction_PythonPickleFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
}
Expression_EmbeddedFunction_PythonPickleFunction::Expression_EmbeddedFunction_PythonPickleFunction(const Expression_EmbeddedFunction_PythonPickleFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prerequisite_(from.prerequisite_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
}

void Expression_EmbeddedFunction_PythonPickleFunction::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Expression_EmbeddedFunction_PythonPickleFunction::~Expression_EmbeddedFunction_PythonPickleFunction() {
  // @@protoc_insertion_point(destructor:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  SharedDtor();
}

void Expression_EmbeddedFunction_PythonPickleFunction::SharedDtor() {
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression_EmbeddedFunction_PythonPickleFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_EmbeddedFunction_PythonPickleFunction::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_EmbeddedFunction_PythonPickleFunction& Expression_EmbeddedFunction_PythonPickleFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction_PythonPickleFunction.base);
  return *internal_default_instance();
}


void Expression_EmbeddedFunction_PythonPickleFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prerequisite_.Clear();
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Expression_EmbeddedFunction_PythonPickleFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prerequisite = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prerequisite()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prerequisite(this->prerequisite_size() - 1).data(),
            static_cast<int>(this->prerequisite(this->prerequisite_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.EmbeddedFunction.PythonPickleFunction.prerequisite"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  return false;
#undef DO_
}

void Expression_EmbeddedFunction_PythonPickleFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->function(), output);
  }

  // repeated string prerequisite = 2;
  for (int i = 0, n = this->prerequisite_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite(i).data(), static_cast<int>(this->prerequisite(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.EmbeddedFunction.PythonPickleFunction.prerequisite");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->prerequisite(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
}

::google::protobuf::uint8* Expression_EmbeddedFunction_PythonPickleFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes function = 1;
  if (this->function().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->function(), target);
  }

  // repeated string prerequisite = 2;
  for (int i = 0, n = this->prerequisite_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite(i).data(), static_cast<int>(this->prerequisite(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.EmbeddedFunction.PythonPickleFunction.prerequisite");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->prerequisite(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  return target;
}

size_t Expression_EmbeddedFunction_PythonPickleFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string prerequisite = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prerequisite_size());
  for (int i = 0, n = this->prerequisite_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prerequisite(i));
  }

  // bytes function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->function());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_EmbeddedFunction_PythonPickleFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_EmbeddedFunction_PythonPickleFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_EmbeddedFunction_PythonPickleFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
    MergeFrom(*source);
  }
}

void Expression_EmbeddedFunction_PythonPickleFunction::MergeFrom(const Expression_EmbeddedFunction_PythonPickleFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prerequisite_.MergeFrom(from.prerequisite_);
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
}

void Expression_EmbeddedFunction_PythonPickleFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_EmbeddedFunction_PythonPickleFunction::CopyFrom(const Expression_EmbeddedFunction_PythonPickleFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.EmbeddedFunction.PythonPickleFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_EmbeddedFunction_PythonPickleFunction::IsInitialized() const {
  return true;
}

void Expression_EmbeddedFunction_PythonPickleFunction::Swap(Expression_EmbeddedFunction_PythonPickleFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_EmbeddedFunction_PythonPickleFunction::InternalSwap(Expression_EmbeddedFunction_PythonPickleFunction* other) {
  using std::swap;
  prerequisite_.InternalSwap(CastToBase(&other->prerequisite_));
  function_.Swap(&other->function_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_EmbeddedFunction_PythonPickleFunction::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_EmbeddedFunction_WebAssemblyFunction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_EmbeddedFunction_WebAssemblyFunction::kScriptFieldNumber;
const int Expression_EmbeddedFunction_WebAssemblyFunction::kPrerequisiteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_EmbeddedFunction_WebAssemblyFunction::Expression_EmbeddedFunction_WebAssemblyFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction_WebAssemblyFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
}
Expression_EmbeddedFunction_WebAssemblyFunction::Expression_EmbeddedFunction_WebAssemblyFunction(const Expression_EmbeddedFunction_WebAssemblyFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prerequisite_(from.prerequisite_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.script().size() > 0) {
    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
}

void Expression_EmbeddedFunction_WebAssemblyFunction::SharedCtor() {
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Expression_EmbeddedFunction_WebAssemblyFunction::~Expression_EmbeddedFunction_WebAssemblyFunction() {
  // @@protoc_insertion_point(destructor:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  SharedDtor();
}

void Expression_EmbeddedFunction_WebAssemblyFunction::SharedDtor() {
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression_EmbeddedFunction_WebAssemblyFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_EmbeddedFunction_WebAssemblyFunction::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_EmbeddedFunction_WebAssemblyFunction& Expression_EmbeddedFunction_WebAssemblyFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction_WebAssemblyFunction.base);
  return *internal_default_instance();
}


void Expression_EmbeddedFunction_WebAssemblyFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prerequisite_.Clear();
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Expression_EmbeddedFunction_WebAssemblyFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes script = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_script()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string prerequisite = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_prerequisite()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prerequisite(this->prerequisite_size() - 1).data(),
            static_cast<int>(this->prerequisite(this->prerequisite_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.EmbeddedFunction.WebAssemblyFunction.prerequisite"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  return false;
#undef DO_
}

void Expression_EmbeddedFunction_WebAssemblyFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes script = 1;
  if (this->script().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->script(), output);
  }

  // repeated string prerequisite = 2;
  for (int i = 0, n = this->prerequisite_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite(i).data(), static_cast<int>(this->prerequisite(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.EmbeddedFunction.WebAssemblyFunction.prerequisite");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->prerequisite(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
}

::google::protobuf::uint8* Expression_EmbeddedFunction_WebAssemblyFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes script = 1;
  if (this->script().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->script(), target);
  }

  // repeated string prerequisite = 2;
  for (int i = 0, n = this->prerequisite_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerequisite(i).data(), static_cast<int>(this->prerequisite(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.EmbeddedFunction.WebAssemblyFunction.prerequisite");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->prerequisite(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  return target;
}

size_t Expression_EmbeddedFunction_WebAssemblyFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string prerequisite = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prerequisite_size());
  for (int i = 0, n = this->prerequisite_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->prerequisite(i));
  }

  // bytes script = 1;
  if (this->script().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->script());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_EmbeddedFunction_WebAssemblyFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_EmbeddedFunction_WebAssemblyFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_EmbeddedFunction_WebAssemblyFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
    MergeFrom(*source);
  }
}

void Expression_EmbeddedFunction_WebAssemblyFunction::MergeFrom(const Expression_EmbeddedFunction_WebAssemblyFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prerequisite_.MergeFrom(from.prerequisite_);
  if (from.script().size() > 0) {

    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
}

void Expression_EmbeddedFunction_WebAssemblyFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_EmbeddedFunction_WebAssemblyFunction::CopyFrom(const Expression_EmbeddedFunction_WebAssemblyFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.EmbeddedFunction.WebAssemblyFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_EmbeddedFunction_WebAssemblyFunction::IsInitialized() const {
  return true;
}

void Expression_EmbeddedFunction_WebAssemblyFunction::Swap(Expression_EmbeddedFunction_WebAssemblyFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_EmbeddedFunction_WebAssemblyFunction::InternalSwap(Expression_EmbeddedFunction_WebAssemblyFunction* other) {
  using std::swap;
  prerequisite_.InternalSwap(CastToBase(&other->prerequisite_));
  script_.Swap(&other->script_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_EmbeddedFunction_WebAssemblyFunction::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_EmbeddedFunction::InitAsDefaultInstance() {
  ::substrait::_Expression_EmbeddedFunction_default_instance_._instance.get_mutable()->output_type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_Expression_EmbeddedFunction_default_instance_.python_pickle_function_ = const_cast< ::substrait::Expression_EmbeddedFunction_PythonPickleFunction*>(
      ::substrait::Expression_EmbeddedFunction_PythonPickleFunction::internal_default_instance());
  ::substrait::_Expression_EmbeddedFunction_default_instance_.web_assembly_function_ = const_cast< ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction*>(
      ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction::internal_default_instance());
}
void Expression_EmbeddedFunction::clear_output_type() {
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
}
void Expression_EmbeddedFunction::set_allocated_python_pickle_function(::substrait::Expression_EmbeddedFunction_PythonPickleFunction* python_pickle_function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (python_pickle_function) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      python_pickle_function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, python_pickle_function, submessage_arena);
    }
    set_has_python_pickle_function();
    kind_.python_pickle_function_ = python_pickle_function;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.EmbeddedFunction.python_pickle_function)
}
void Expression_EmbeddedFunction::set_allocated_web_assembly_function(::substrait::Expression_EmbeddedFunction_WebAssemblyFunction* web_assembly_function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (web_assembly_function) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      web_assembly_function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, web_assembly_function, submessage_arena);
    }
    set_has_web_assembly_function();
    kind_.web_assembly_function_ = web_assembly_function;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.EmbeddedFunction.web_assembly_function)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_EmbeddedFunction::kArgumentsFieldNumber;
const int Expression_EmbeddedFunction::kOutputTypeFieldNumber;
const int Expression_EmbeddedFunction::kPythonPickleFunctionFieldNumber;
const int Expression_EmbeddedFunction::kWebAssemblyFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_EmbeddedFunction::Expression_EmbeddedFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.EmbeddedFunction)
}
Expression_EmbeddedFunction::Expression_EmbeddedFunction(const Expression_EmbeddedFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_type()) {
    output_type_ = new ::substrait::Type(*from.output_type_);
  } else {
    output_type_ = NULL;
  }
  clear_has_kind();
  switch (from.kind_case()) {
    case kPythonPickleFunction: {
      mutable_python_pickle_function()->::substrait::Expression_EmbeddedFunction_PythonPickleFunction::MergeFrom(from.python_pickle_function());
      break;
    }
    case kWebAssemblyFunction: {
      mutable_web_assembly_function()->::substrait::Expression_EmbeddedFunction_WebAssemblyFunction::MergeFrom(from.web_assembly_function());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.EmbeddedFunction)
}

void Expression_EmbeddedFunction::SharedCtor() {
  output_type_ = NULL;
  clear_has_kind();
}

Expression_EmbeddedFunction::~Expression_EmbeddedFunction() {
  // @@protoc_insertion_point(destructor:substrait.Expression.EmbeddedFunction)
  SharedDtor();
}

void Expression_EmbeddedFunction::SharedDtor() {
  if (this != internal_default_instance()) delete output_type_;
  if (has_kind()) {
    clear_kind();
  }
}

void Expression_EmbeddedFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_EmbeddedFunction::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_EmbeddedFunction& Expression_EmbeddedFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_EmbeddedFunction.base);
  return *internal_default_instance();
}


void Expression_EmbeddedFunction::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.EmbeddedFunction)
  switch (kind_case()) {
    case kPythonPickleFunction: {
      delete kind_.python_pickle_function_;
      break;
    }
    case kWebAssemblyFunction: {
      delete kind_.web_assembly_function_;
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Expression_EmbeddedFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.EmbeddedFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
  clear_kind();
  _internal_metadata_.Clear();
}

bool Expression_EmbeddedFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.EmbeddedFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression arguments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type output_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.EmbeddedFunction.PythonPickleFunction python_pickle_function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_python_pickle_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.EmbeddedFunction.WebAssemblyFunction web_assembly_function = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_web_assembly_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.EmbeddedFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.EmbeddedFunction)
  return false;
#undef DO_
}

void Expression_EmbeddedFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.EmbeddedFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression arguments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // .substrait.Type output_type = 2;
  if (this->has_output_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_output_type(), output);
  }

  // .substrait.Expression.EmbeddedFunction.PythonPickleFunction python_pickle_function = 3;
  if (has_python_pickle_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_python_pickle_function(), output);
  }

  // .substrait.Expression.EmbeddedFunction.WebAssemblyFunction web_assembly_function = 4;
  if (has_web_assembly_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_web_assembly_function(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.EmbeddedFunction)
}

::google::protobuf::uint8* Expression_EmbeddedFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.EmbeddedFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression arguments = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Type output_type = 2;
  if (this->has_output_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_output_type(), deterministic, target);
  }

  // .substrait.Expression.EmbeddedFunction.PythonPickleFunction python_pickle_function = 3;
  if (has_python_pickle_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_python_pickle_function(), deterministic, target);
  }

  // .substrait.Expression.EmbeddedFunction.WebAssemblyFunction web_assembly_function = 4;
  if (has_web_assembly_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_web_assembly_function(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.EmbeddedFunction)
  return target;
}

size_t Expression_EmbeddedFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.EmbeddedFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression arguments = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // .substrait.Type output_type = 2;
  if (this->has_output_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_type_);
  }

  switch (kind_case()) {
    // .substrait.Expression.EmbeddedFunction.PythonPickleFunction python_pickle_function = 3;
    case kPythonPickleFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.python_pickle_function_);
      break;
    }
    // .substrait.Expression.EmbeddedFunction.WebAssemblyFunction web_assembly_function = 4;
    case kWebAssemblyFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.web_assembly_function_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_EmbeddedFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.EmbeddedFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_EmbeddedFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_EmbeddedFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.EmbeddedFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.EmbeddedFunction)
    MergeFrom(*source);
  }
}

void Expression_EmbeddedFunction::MergeFrom(const Expression_EmbeddedFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.EmbeddedFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.has_output_type()) {
    mutable_output_type()->::substrait::Type::MergeFrom(from.output_type());
  }
  switch (from.kind_case()) {
    case kPythonPickleFunction: {
      mutable_python_pickle_function()->::substrait::Expression_EmbeddedFunction_PythonPickleFunction::MergeFrom(from.python_pickle_function());
      break;
    }
    case kWebAssemblyFunction: {
      mutable_web_assembly_function()->::substrait::Expression_EmbeddedFunction_WebAssemblyFunction::MergeFrom(from.web_assembly_function());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Expression_EmbeddedFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.EmbeddedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_EmbeddedFunction::CopyFrom(const Expression_EmbeddedFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.EmbeddedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_EmbeddedFunction::IsInitialized() const {
  return true;
}

void Expression_EmbeddedFunction::Swap(Expression_EmbeddedFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_EmbeddedFunction::InternalSwap(Expression_EmbeddedFunction* other) {
  using std::swap;
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  swap(output_type_, other->output_type_);
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_EmbeddedFunction::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_ReferenceSegment_MapKey::InitAsDefaultInstance() {
  ::substrait::_Expression_ReferenceSegment_MapKey_default_instance_._instance.get_mutable()->map_key_ = const_cast< ::substrait::Expression_Literal*>(
      ::substrait::Expression_Literal::internal_default_instance());
  ::substrait::_Expression_ReferenceSegment_MapKey_default_instance_._instance.get_mutable()->child_ = const_cast< ::substrait::Expression_ReferenceSegment*>(
      ::substrait::Expression_ReferenceSegment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_ReferenceSegment_MapKey::kMapKeyFieldNumber;
const int Expression_ReferenceSegment_MapKey::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_ReferenceSegment_MapKey::Expression_ReferenceSegment_MapKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.ReferenceSegment.MapKey)
}
Expression_ReferenceSegment_MapKey::Expression_ReferenceSegment_MapKey(const Expression_ReferenceSegment_MapKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_map_key()) {
    map_key_ = new ::substrait::Expression_Literal(*from.map_key_);
  } else {
    map_key_ = NULL;
  }
  if (from.has_child()) {
    child_ = new ::substrait::Expression_ReferenceSegment(*from.child_);
  } else {
    child_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.ReferenceSegment.MapKey)
}

void Expression_ReferenceSegment_MapKey::SharedCtor() {
  ::memset(&map_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&child_) -
      reinterpret_cast<char*>(&map_key_)) + sizeof(child_));
}

Expression_ReferenceSegment_MapKey::~Expression_ReferenceSegment_MapKey() {
  // @@protoc_insertion_point(destructor:substrait.Expression.ReferenceSegment.MapKey)
  SharedDtor();
}

void Expression_ReferenceSegment_MapKey::SharedDtor() {
  if (this != internal_default_instance()) delete map_key_;
  if (this != internal_default_instance()) delete child_;
}

void Expression_ReferenceSegment_MapKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_ReferenceSegment_MapKey::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_ReferenceSegment_MapKey& Expression_ReferenceSegment_MapKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  return *internal_default_instance();
}


void Expression_ReferenceSegment_MapKey::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.ReferenceSegment.MapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && map_key_ != NULL) {
    delete map_key_;
  }
  map_key_ = NULL;
  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_ReferenceSegment_MapKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.ReferenceSegment.MapKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Literal map_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.ReferenceSegment child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.ReferenceSegment.MapKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.ReferenceSegment.MapKey)
  return false;
#undef DO_
}

void Expression_ReferenceSegment_MapKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.ReferenceSegment.MapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal map_key = 1;
  if (this->has_map_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_map_key(), output);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.ReferenceSegment.MapKey)
}

::google::protobuf::uint8* Expression_ReferenceSegment_MapKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.ReferenceSegment.MapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal map_key = 1;
  if (this->has_map_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_map_key(), deterministic, target);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.ReferenceSegment.MapKey)
  return target;
}

size_t Expression_ReferenceSegment_MapKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.ReferenceSegment.MapKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.Literal map_key = 1;
  if (this->has_map_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_key_);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_ReferenceSegment_MapKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.ReferenceSegment.MapKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_ReferenceSegment_MapKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_ReferenceSegment_MapKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.ReferenceSegment.MapKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.ReferenceSegment.MapKey)
    MergeFrom(*source);
  }
}

void Expression_ReferenceSegment_MapKey::MergeFrom(const Expression_ReferenceSegment_MapKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.ReferenceSegment.MapKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_map_key()) {
    mutable_map_key()->::substrait::Expression_Literal::MergeFrom(from.map_key());
  }
  if (from.has_child()) {
    mutable_child()->::substrait::Expression_ReferenceSegment::MergeFrom(from.child());
  }
}

void Expression_ReferenceSegment_MapKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.ReferenceSegment.MapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_ReferenceSegment_MapKey::CopyFrom(const Expression_ReferenceSegment_MapKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.ReferenceSegment.MapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_ReferenceSegment_MapKey::IsInitialized() const {
  return true;
}

void Expression_ReferenceSegment_MapKey::Swap(Expression_ReferenceSegment_MapKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_ReferenceSegment_MapKey::InternalSwap(Expression_ReferenceSegment_MapKey* other) {
  using std::swap;
  swap(map_key_, other->map_key_);
  swap(child_, other->child_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_ReferenceSegment_MapKey::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_ReferenceSegment_StructField::InitAsDefaultInstance() {
  ::substrait::_Expression_ReferenceSegment_StructField_default_instance_._instance.get_mutable()->child_ = const_cast< ::substrait::Expression_ReferenceSegment*>(
      ::substrait::Expression_ReferenceSegment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_ReferenceSegment_StructField::kFieldFieldNumber;
const int Expression_ReferenceSegment_StructField::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_ReferenceSegment_StructField::Expression_ReferenceSegment_StructField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.ReferenceSegment.StructField)
}
Expression_ReferenceSegment_StructField::Expression_ReferenceSegment_StructField(const Expression_ReferenceSegment_StructField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::substrait::Expression_ReferenceSegment(*from.child_);
  } else {
    child_ = NULL;
  }
  field_ = from.field_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.ReferenceSegment.StructField)
}

void Expression_ReferenceSegment_StructField::SharedCtor() {
  ::memset(&child_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_) -
      reinterpret_cast<char*>(&child_)) + sizeof(field_));
}

Expression_ReferenceSegment_StructField::~Expression_ReferenceSegment_StructField() {
  // @@protoc_insertion_point(destructor:substrait.Expression.ReferenceSegment.StructField)
  SharedDtor();
}

void Expression_ReferenceSegment_StructField::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
}

void Expression_ReferenceSegment_StructField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_ReferenceSegment_StructField::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_ReferenceSegment_StructField& Expression_ReferenceSegment_StructField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  return *internal_default_instance();
}


void Expression_ReferenceSegment_StructField::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.ReferenceSegment.StructField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  field_ = 0;
  _internal_metadata_.Clear();
}

bool Expression_ReferenceSegment_StructField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.ReferenceSegment.StructField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.ReferenceSegment child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.ReferenceSegment.StructField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.ReferenceSegment.StructField)
  return false;
#undef DO_
}

void Expression_ReferenceSegment_StructField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.ReferenceSegment.StructField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->field(), output);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.ReferenceSegment.StructField)
}

::google::protobuf::uint8* Expression_ReferenceSegment_StructField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.ReferenceSegment.StructField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->field(), target);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.ReferenceSegment.StructField)
  return target;
}

size_t Expression_ReferenceSegment_StructField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.ReferenceSegment.StructField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  // int32 field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_ReferenceSegment_StructField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.ReferenceSegment.StructField)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_ReferenceSegment_StructField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_ReferenceSegment_StructField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.ReferenceSegment.StructField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.ReferenceSegment.StructField)
    MergeFrom(*source);
  }
}

void Expression_ReferenceSegment_StructField::MergeFrom(const Expression_ReferenceSegment_StructField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.ReferenceSegment.StructField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_child()) {
    mutable_child()->::substrait::Expression_ReferenceSegment::MergeFrom(from.child());
  }
  if (from.field() != 0) {
    set_field(from.field());
  }
}

void Expression_ReferenceSegment_StructField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.ReferenceSegment.StructField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_ReferenceSegment_StructField::CopyFrom(const Expression_ReferenceSegment_StructField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.ReferenceSegment.StructField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_ReferenceSegment_StructField::IsInitialized() const {
  return true;
}

void Expression_ReferenceSegment_StructField::Swap(Expression_ReferenceSegment_StructField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_ReferenceSegment_StructField::InternalSwap(Expression_ReferenceSegment_StructField* other) {
  using std::swap;
  swap(child_, other->child_);
  swap(field_, other->field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_ReferenceSegment_StructField::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_ReferenceSegment_ListElement::InitAsDefaultInstance() {
  ::substrait::_Expression_ReferenceSegment_ListElement_default_instance_._instance.get_mutable()->child_ = const_cast< ::substrait::Expression_ReferenceSegment*>(
      ::substrait::Expression_ReferenceSegment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_ReferenceSegment_ListElement::kOffsetFieldNumber;
const int Expression_ReferenceSegment_ListElement::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_ReferenceSegment_ListElement::Expression_ReferenceSegment_ListElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.ReferenceSegment.ListElement)
}
Expression_ReferenceSegment_ListElement::Expression_ReferenceSegment_ListElement(const Expression_ReferenceSegment_ListElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::substrait::Expression_ReferenceSegment(*from.child_);
  } else {
    child_ = NULL;
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.ReferenceSegment.ListElement)
}

void Expression_ReferenceSegment_ListElement::SharedCtor() {
  ::memset(&child_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&child_)) + sizeof(offset_));
}

Expression_ReferenceSegment_ListElement::~Expression_ReferenceSegment_ListElement() {
  // @@protoc_insertion_point(destructor:substrait.Expression.ReferenceSegment.ListElement)
  SharedDtor();
}

void Expression_ReferenceSegment_ListElement::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
}

void Expression_ReferenceSegment_ListElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_ReferenceSegment_ListElement::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_ReferenceSegment_ListElement& Expression_ReferenceSegment_ListElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  return *internal_default_instance();
}


void Expression_ReferenceSegment_ListElement::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.ReferenceSegment.ListElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  offset_ = 0;
  _internal_metadata_.Clear();
}

bool Expression_ReferenceSegment_ListElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.ReferenceSegment.ListElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.ReferenceSegment child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.ReferenceSegment.ListElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.ReferenceSegment.ListElement)
  return false;
#undef DO_
}

void Expression_ReferenceSegment_ListElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.ReferenceSegment.ListElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->offset(), output);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.ReferenceSegment.ListElement)
}

::google::protobuf::uint8* Expression_ReferenceSegment_ListElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.ReferenceSegment.ListElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->offset(), target);
  }

  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.ReferenceSegment.ListElement)
  return target;
}

size_t Expression_ReferenceSegment_ListElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.ReferenceSegment.ListElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.ReferenceSegment child = 2;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  // int32 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_ReferenceSegment_ListElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.ReferenceSegment.ListElement)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_ReferenceSegment_ListElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_ReferenceSegment_ListElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.ReferenceSegment.ListElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.ReferenceSegment.ListElement)
    MergeFrom(*source);
  }
}

void Expression_ReferenceSegment_ListElement::MergeFrom(const Expression_ReferenceSegment_ListElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.ReferenceSegment.ListElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_child()) {
    mutable_child()->::substrait::Expression_ReferenceSegment::MergeFrom(from.child());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void Expression_ReferenceSegment_ListElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.ReferenceSegment.ListElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_ReferenceSegment_ListElement::CopyFrom(const Expression_ReferenceSegment_ListElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.ReferenceSegment.ListElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_ReferenceSegment_ListElement::IsInitialized() const {
  return true;
}

void Expression_ReferenceSegment_ListElement::Swap(Expression_ReferenceSegment_ListElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_ReferenceSegment_ListElement::InternalSwap(Expression_ReferenceSegment_ListElement* other) {
  using std::swap;
  swap(child_, other->child_);
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_ReferenceSegment_ListElement::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_ReferenceSegment::InitAsDefaultInstance() {
  ::substrait::_Expression_ReferenceSegment_default_instance_.map_key_ = const_cast< ::substrait::Expression_ReferenceSegment_MapKey*>(
      ::substrait::Expression_ReferenceSegment_MapKey::internal_default_instance());
  ::substrait::_Expression_ReferenceSegment_default_instance_.struct_field_ = const_cast< ::substrait::Expression_ReferenceSegment_StructField*>(
      ::substrait::Expression_ReferenceSegment_StructField::internal_default_instance());
  ::substrait::_Expression_ReferenceSegment_default_instance_.list_element_ = const_cast< ::substrait::Expression_ReferenceSegment_ListElement*>(
      ::substrait::Expression_ReferenceSegment_ListElement::internal_default_instance());
}
void Expression_ReferenceSegment::set_allocated_map_key(::substrait::Expression_ReferenceSegment_MapKey* map_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference_type();
  if (map_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map_key, submessage_arena);
    }
    set_has_map_key();
    reference_type_.map_key_ = map_key;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.ReferenceSegment.map_key)
}
void Expression_ReferenceSegment::set_allocated_struct_field(::substrait::Expression_ReferenceSegment_StructField* struct_field) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference_type();
  if (struct_field) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_field = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_field, submessage_arena);
    }
    set_has_struct_field();
    reference_type_.struct_field_ = struct_field;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.ReferenceSegment.struct_field)
}
void Expression_ReferenceSegment::set_allocated_list_element(::substrait::Expression_ReferenceSegment_ListElement* list_element) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference_type();
  if (list_element) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list_element = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list_element, submessage_arena);
    }
    set_has_list_element();
    reference_type_.list_element_ = list_element;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.ReferenceSegment.list_element)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_ReferenceSegment::kMapKeyFieldNumber;
const int Expression_ReferenceSegment::kStructFieldFieldNumber;
const int Expression_ReferenceSegment::kListElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_ReferenceSegment::Expression_ReferenceSegment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.ReferenceSegment)
}
Expression_ReferenceSegment::Expression_ReferenceSegment(const Expression_ReferenceSegment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_reference_type();
  switch (from.reference_type_case()) {
    case kMapKey: {
      mutable_map_key()->::substrait::Expression_ReferenceSegment_MapKey::MergeFrom(from.map_key());
      break;
    }
    case kStructField: {
      mutable_struct_field()->::substrait::Expression_ReferenceSegment_StructField::MergeFrom(from.struct_field());
      break;
    }
    case kListElement: {
      mutable_list_element()->::substrait::Expression_ReferenceSegment_ListElement::MergeFrom(from.list_element());
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.ReferenceSegment)
}

void Expression_ReferenceSegment::SharedCtor() {
  clear_has_reference_type();
}

Expression_ReferenceSegment::~Expression_ReferenceSegment() {
  // @@protoc_insertion_point(destructor:substrait.Expression.ReferenceSegment)
  SharedDtor();
}

void Expression_ReferenceSegment::SharedDtor() {
  if (has_reference_type()) {
    clear_reference_type();
  }
}

void Expression_ReferenceSegment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_ReferenceSegment::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_ReferenceSegment& Expression_ReferenceSegment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_ReferenceSegment.base);
  return *internal_default_instance();
}


void Expression_ReferenceSegment::clear_reference_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.ReferenceSegment)
  switch (reference_type_case()) {
    case kMapKey: {
      delete reference_type_.map_key_;
      break;
    }
    case kStructField: {
      delete reference_type_.struct_field_;
      break;
    }
    case kListElement: {
      delete reference_type_.list_element_;
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REFERENCE_TYPE_NOT_SET;
}


void Expression_ReferenceSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.ReferenceSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_reference_type();
  _internal_metadata_.Clear();
}

bool Expression_ReferenceSegment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.ReferenceSegment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.ReferenceSegment.MapKey map_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.ReferenceSegment.StructField struct_field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.ReferenceSegment.ListElement list_element = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.ReferenceSegment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.ReferenceSegment)
  return false;
#undef DO_
}

void Expression_ReferenceSegment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.ReferenceSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.ReferenceSegment.MapKey map_key = 1;
  if (has_map_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_map_key(), output);
  }

  // .substrait.Expression.ReferenceSegment.StructField struct_field = 2;
  if (has_struct_field()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_struct_field(), output);
  }

  // .substrait.Expression.ReferenceSegment.ListElement list_element = 3;
  if (has_list_element()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_list_element(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.ReferenceSegment)
}

::google::protobuf::uint8* Expression_ReferenceSegment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.ReferenceSegment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.ReferenceSegment.MapKey map_key = 1;
  if (has_map_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_map_key(), deterministic, target);
  }

  // .substrait.Expression.ReferenceSegment.StructField struct_field = 2;
  if (has_struct_field()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_struct_field(), deterministic, target);
  }

  // .substrait.Expression.ReferenceSegment.ListElement list_element = 3;
  if (has_list_element()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_list_element(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.ReferenceSegment)
  return target;
}

size_t Expression_ReferenceSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.ReferenceSegment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (reference_type_case()) {
    // .substrait.Expression.ReferenceSegment.MapKey map_key = 1;
    case kMapKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_type_.map_key_);
      break;
    }
    // .substrait.Expression.ReferenceSegment.StructField struct_field = 2;
    case kStructField: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_type_.struct_field_);
      break;
    }
    // .substrait.Expression.ReferenceSegment.ListElement list_element = 3;
    case kListElement: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_type_.list_element_);
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_ReferenceSegment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.ReferenceSegment)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_ReferenceSegment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_ReferenceSegment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.ReferenceSegment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.ReferenceSegment)
    MergeFrom(*source);
  }
}

void Expression_ReferenceSegment::MergeFrom(const Expression_ReferenceSegment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.ReferenceSegment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.reference_type_case()) {
    case kMapKey: {
      mutable_map_key()->::substrait::Expression_ReferenceSegment_MapKey::MergeFrom(from.map_key());
      break;
    }
    case kStructField: {
      mutable_struct_field()->::substrait::Expression_ReferenceSegment_StructField::MergeFrom(from.struct_field());
      break;
    }
    case kListElement: {
      mutable_list_element()->::substrait::Expression_ReferenceSegment_ListElement::MergeFrom(from.list_element());
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_ReferenceSegment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.ReferenceSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_ReferenceSegment::CopyFrom(const Expression_ReferenceSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.ReferenceSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_ReferenceSegment::IsInitialized() const {
  return true;
}

void Expression_ReferenceSegment::Swap(Expression_ReferenceSegment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_ReferenceSegment::InternalSwap(Expression_ReferenceSegment* other) {
  using std::swap;
  swap(reference_type_, other->reference_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_ReferenceSegment::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_Select::InitAsDefaultInstance() {
  ::substrait::_Expression_MaskExpression_Select_default_instance_.struct__ = const_cast< ::substrait::Expression_MaskExpression_StructSelect*>(
      ::substrait::Expression_MaskExpression_StructSelect::internal_default_instance());
  ::substrait::_Expression_MaskExpression_Select_default_instance_.list_ = const_cast< ::substrait::Expression_MaskExpression_ListSelect*>(
      ::substrait::Expression_MaskExpression_ListSelect::internal_default_instance());
  ::substrait::_Expression_MaskExpression_Select_default_instance_.map_ = const_cast< ::substrait::Expression_MaskExpression_MapSelect*>(
      ::substrait::Expression_MaskExpression_MapSelect::internal_default_instance());
}
void Expression_MaskExpression_Select::set_allocated_struct_(::substrait::Expression_MaskExpression_StructSelect* struct_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (struct_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    set_has_struct_();
    type_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.Select.struct)
}
void Expression_MaskExpression_Select::set_allocated_list(::substrait::Expression_MaskExpression_ListSelect* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    type_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.Select.list)
}
void Expression_MaskExpression_Select::set_allocated_map(::substrait::Expression_MaskExpression_MapSelect* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    type_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.Select.map)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_Select::kStructFieldNumber;
const int Expression_MaskExpression_Select::kListFieldNumber;
const int Expression_MaskExpression_Select::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_Select::Expression_MaskExpression_Select()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.Select)
}
Expression_MaskExpression_Select::Expression_MaskExpression_Select(const Expression_MaskExpression_Select& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kStruct: {
      mutable_struct_()->::substrait::Expression_MaskExpression_StructSelect::MergeFrom(from.struct_());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Expression_MaskExpression_ListSelect::MergeFrom(from.list());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Expression_MaskExpression_MapSelect::MergeFrom(from.map());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.Select)
}

void Expression_MaskExpression_Select::SharedCtor() {
  clear_has_type();
}

Expression_MaskExpression_Select::~Expression_MaskExpression_Select() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.Select)
  SharedDtor();
}

void Expression_MaskExpression_Select::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Expression_MaskExpression_Select::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_Select::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_Select& Expression_MaskExpression_Select::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_Select::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.MaskExpression.Select)
  switch (type_case()) {
    case kStruct: {
      delete type_.struct__;
      break;
    }
    case kList: {
      delete type_.list_;
      break;
    }
    case kMap: {
      delete type_.map_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Expression_MaskExpression_Select::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.Select)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_Select::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.Select)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.MaskExpression.StructSelect struct = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.ListSelect list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.MapSelect map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.Select)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.Select)
  return false;
#undef DO_
}

void Expression_MaskExpression_Select::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.Select)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.StructSelect struct = 1;
  if (has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_struct_(), output);
  }

  // .substrait.Expression.MaskExpression.ListSelect list = 2;
  if (has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_list(), output);
  }

  // .substrait.Expression.MaskExpression.MapSelect map = 3;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_map(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.Select)
}

::google::protobuf::uint8* Expression_MaskExpression_Select::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.Select)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.StructSelect struct = 1;
  if (has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_struct_(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression.ListSelect list = 2;
  if (has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_list(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression.MapSelect map = 3;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_map(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.Select)
  return target;
}

size_t Expression_MaskExpression_Select::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.Select)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .substrait.Expression.MaskExpression.StructSelect struct = 1;
    case kStruct: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.struct__);
      break;
    }
    // .substrait.Expression.MaskExpression.ListSelect list = 2;
    case kList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.list_);
      break;
    }
    // .substrait.Expression.MaskExpression.MapSelect map = 3;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.map_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_Select::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.Select)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_Select* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_Select>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.Select)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.Select)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_Select::MergeFrom(const Expression_MaskExpression_Select& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.Select)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kStruct: {
      mutable_struct_()->::substrait::Expression_MaskExpression_StructSelect::MergeFrom(from.struct_());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Expression_MaskExpression_ListSelect::MergeFrom(from.list());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Expression_MaskExpression_MapSelect::MergeFrom(from.map());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_MaskExpression_Select::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_Select::CopyFrom(const Expression_MaskExpression_Select& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_Select::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_Select::Swap(Expression_MaskExpression_Select* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_Select::InternalSwap(Expression_MaskExpression_Select* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_Select::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_StructSelect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_StructSelect::kStructItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_StructSelect::Expression_MaskExpression_StructSelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.StructSelect)
}
Expression_MaskExpression_StructSelect::Expression_MaskExpression_StructSelect(const Expression_MaskExpression_StructSelect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      struct_items_(from.struct_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.StructSelect)
}

void Expression_MaskExpression_StructSelect::SharedCtor() {
}

Expression_MaskExpression_StructSelect::~Expression_MaskExpression_StructSelect() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.StructSelect)
  SharedDtor();
}

void Expression_MaskExpression_StructSelect::SharedDtor() {
}

void Expression_MaskExpression_StructSelect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_StructSelect::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_StructSelect& Expression_MaskExpression_StructSelect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_StructSelect::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.StructSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  struct_items_.Clear();
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_StructSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.StructSelect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.MaskExpression.StructItem struct_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_struct_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.StructSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.StructSelect)
  return false;
#undef DO_
}

void Expression_MaskExpression_StructSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.StructSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.MaskExpression.StructItem struct_items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->struct_items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->struct_items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.StructSelect)
}

::google::protobuf::uint8* Expression_MaskExpression_StructSelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.StructSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.MaskExpression.StructItem struct_items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->struct_items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->struct_items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.StructSelect)
  return target;
}

size_t Expression_MaskExpression_StructSelect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.StructSelect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.MaskExpression.StructItem struct_items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->struct_items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->struct_items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_StructSelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.StructSelect)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_StructSelect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_StructSelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.StructSelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.StructSelect)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_StructSelect::MergeFrom(const Expression_MaskExpression_StructSelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.StructSelect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  struct_items_.MergeFrom(from.struct_items_);
}

void Expression_MaskExpression_StructSelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.StructSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_StructSelect::CopyFrom(const Expression_MaskExpression_StructSelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.StructSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_StructSelect::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_StructSelect::Swap(Expression_MaskExpression_StructSelect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_StructSelect::InternalSwap(Expression_MaskExpression_StructSelect* other) {
  using std::swap;
  CastToBase(&struct_items_)->InternalSwap(CastToBase(&other->struct_items_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_StructSelect::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_StructItem::InitAsDefaultInstance() {
  ::substrait::_Expression_MaskExpression_StructItem_default_instance_._instance.get_mutable()->child_ = const_cast< ::substrait::Expression_MaskExpression_Select*>(
      ::substrait::Expression_MaskExpression_Select::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_StructItem::kFieldFieldNumber;
const int Expression_MaskExpression_StructItem::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_StructItem::Expression_MaskExpression_StructItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.StructItem)
}
Expression_MaskExpression_StructItem::Expression_MaskExpression_StructItem(const Expression_MaskExpression_StructItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::substrait::Expression_MaskExpression_Select(*from.child_);
  } else {
    child_ = NULL;
  }
  field_ = from.field_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.StructItem)
}

void Expression_MaskExpression_StructItem::SharedCtor() {
  ::memset(&child_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field_) -
      reinterpret_cast<char*>(&child_)) + sizeof(field_));
}

Expression_MaskExpression_StructItem::~Expression_MaskExpression_StructItem() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.StructItem)
  SharedDtor();
}

void Expression_MaskExpression_StructItem::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
}

void Expression_MaskExpression_StructItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_StructItem::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_StructItem& Expression_MaskExpression_StructItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_StructItem::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.StructItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  field_ = 0;
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_StructItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.StructItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.Select child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.StructItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.StructItem)
  return false;
#undef DO_
}

void Expression_MaskExpression_StructItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.StructItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->field(), output);
  }

  // .substrait.Expression.MaskExpression.Select child = 2;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.StructItem)
}

::google::protobuf::uint8* Expression_MaskExpression_StructItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.StructItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->field(), target);
  }

  // .substrait.Expression.MaskExpression.Select child = 2;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.StructItem)
  return target;
}

size_t Expression_MaskExpression_StructItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.StructItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.MaskExpression.Select child = 2;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  // int32 field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_StructItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.StructItem)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_StructItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_StructItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.StructItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.StructItem)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_StructItem::MergeFrom(const Expression_MaskExpression_StructItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.StructItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_child()) {
    mutable_child()->::substrait::Expression_MaskExpression_Select::MergeFrom(from.child());
  }
  if (from.field() != 0) {
    set_field(from.field());
  }
}

void Expression_MaskExpression_StructItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.StructItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_StructItem::CopyFrom(const Expression_MaskExpression_StructItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.StructItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_StructItem::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_StructItem::Swap(Expression_MaskExpression_StructItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_StructItem::InternalSwap(Expression_MaskExpression_StructItem* other) {
  using std::swap;
  swap(child_, other->child_);
  swap(field_, other->field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_StructItem::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
}
Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement(const Expression_MaskExpression_ListSelect_ListSelectItem_ListElement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_ = from.field_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::SharedCtor() {
  field_ = 0;
}

Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::~Expression_MaskExpression_ListSelect_ListSelectItem_ListElement() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  SharedDtor();
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::SharedDtor() {
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_ListSelect_ListSelectItem_ListElement& Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_ = 0;
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 field = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  return false;
#undef DO_
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field = 1;
  if (this->field() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->field(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
}

::google::protobuf::uint8* Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 field = 1;
  if (this->field() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->field(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  return target;
}

size_t Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 field = 1;
  if (this->field() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->field());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_ListSelect_ListSelectItem_ListElement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_ListSelect_ListSelectItem_ListElement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::MergeFrom(const Expression_MaskExpression_ListSelect_ListSelectItem_ListElement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field() != 0) {
    set_field(from.field());
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::CopyFrom(const Expression_MaskExpression_ListSelect_ListSelectItem_ListElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::Swap(Expression_MaskExpression_ListSelect_ListSelectItem_ListElement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::InternalSwap(Expression_MaskExpression_ListSelect_ListSelectItem_ListElement* other) {
  using std::swap;
  swap(field_, other->field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::kStartFieldNumber;
const int Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
}
Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice(const Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&start_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
}

Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::~Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  SharedDtor();
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::SharedDtor() {
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice& Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  return false;
#undef DO_
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->start(), output);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
}

::google::protobuf::uint8* Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->start(), target);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  return target;
}

size_t Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 start = 1;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start());
  }

  // int32 end = 2;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::MergeFrom(const Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::CopyFrom(const Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::Swap(Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::InternalSwap(Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_ListSelect_ListSelectItem::InitAsDefaultInstance() {
  ::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_default_instance_.item_ = const_cast< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement*>(
      ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::internal_default_instance());
  ::substrait::_Expression_MaskExpression_ListSelect_ListSelectItem_default_instance_.slice_ = const_cast< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice*>(
      ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::internal_default_instance());
}
void Expression_MaskExpression_ListSelect_ListSelectItem::set_allocated_item(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (item) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    set_has_item();
    type_.item_ = item;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.item)
}
void Expression_MaskExpression_ListSelect_ListSelectItem::set_allocated_slice(::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice* slice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (slice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      slice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slice, submessage_arena);
    }
    set_has_slice();
    type_.slice_ = slice;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.ListSelect.ListSelectItem.slice)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_ListSelect_ListSelectItem::kItemFieldNumber;
const int Expression_MaskExpression_ListSelect_ListSelectItem::kSliceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_ListSelect_ListSelectItem::Expression_MaskExpression_ListSelect_ListSelectItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
}
Expression_MaskExpression_ListSelect_ListSelectItem::Expression_MaskExpression_ListSelect_ListSelectItem(const Expression_MaskExpression_ListSelect_ListSelectItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kItem: {
      mutable_item()->::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::MergeFrom(from.item());
      break;
    }
    case kSlice: {
      mutable_slice()->::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::MergeFrom(from.slice());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
}

void Expression_MaskExpression_ListSelect_ListSelectItem::SharedCtor() {
  clear_has_type();
}

Expression_MaskExpression_ListSelect_ListSelectItem::~Expression_MaskExpression_ListSelect_ListSelectItem() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  SharedDtor();
}

void Expression_MaskExpression_ListSelect_ListSelectItem::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_ListSelect_ListSelectItem::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_ListSelect_ListSelectItem& Expression_MaskExpression_ListSelect_ListSelectItem::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect_ListSelectItem.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_ListSelect_ListSelectItem::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  switch (type_case()) {
    case kItem: {
      delete type_.item_;
      break;
    }
    case kSlice: {
      delete type_.slice_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Expression_MaskExpression_ListSelect_ListSelectItem::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_ListSelect_ListSelectItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice slice = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  return false;
#undef DO_
}

void Expression_MaskExpression_ListSelect_ListSelectItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_item(), output);
  }

  // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice slice = 2;
  if (has_slice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_slice(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
}

::google::protobuf::uint8* Expression_MaskExpression_ListSelect_ListSelectItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_item(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice slice = 2;
  if (has_slice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_slice(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  return target;
}

size_t Expression_MaskExpression_ListSelect_ListSelectItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListElement item = 1;
    case kItem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.item_);
      break;
    }
    // .substrait.Expression.MaskExpression.ListSelect.ListSelectItem.ListSlice slice = 2;
    case kSlice: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.slice_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_ListSelect_ListSelectItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_ListSelect_ListSelectItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_ListSelect_ListSelectItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem::MergeFrom(const Expression_MaskExpression_ListSelect_ListSelectItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kItem: {
      mutable_item()->::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement::MergeFrom(from.item());
      break;
    }
    case kSlice: {
      mutable_slice()->::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice::MergeFrom(from.slice());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_MaskExpression_ListSelect_ListSelectItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_ListSelect_ListSelectItem::CopyFrom(const Expression_MaskExpression_ListSelect_ListSelectItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.ListSelect.ListSelectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_ListSelect_ListSelectItem::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_ListSelect_ListSelectItem::Swap(Expression_MaskExpression_ListSelect_ListSelectItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_ListSelect_ListSelectItem::InternalSwap(Expression_MaskExpression_ListSelect_ListSelectItem* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_ListSelect_ListSelectItem::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_ListSelect::InitAsDefaultInstance() {
  ::substrait::_Expression_MaskExpression_ListSelect_default_instance_._instance.get_mutable()->child_ = const_cast< ::substrait::Expression_MaskExpression_Select*>(
      ::substrait::Expression_MaskExpression_Select::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_ListSelect::kSelectionFieldNumber;
const int Expression_MaskExpression_ListSelect::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_ListSelect::Expression_MaskExpression_ListSelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.ListSelect)
}
Expression_MaskExpression_ListSelect::Expression_MaskExpression_ListSelect(const Expression_MaskExpression_ListSelect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      selection_(from.selection_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::substrait::Expression_MaskExpression_Select(*from.child_);
  } else {
    child_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.ListSelect)
}

void Expression_MaskExpression_ListSelect::SharedCtor() {
  child_ = NULL;
}

Expression_MaskExpression_ListSelect::~Expression_MaskExpression_ListSelect() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.ListSelect)
  SharedDtor();
}

void Expression_MaskExpression_ListSelect::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
}

void Expression_MaskExpression_ListSelect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_ListSelect::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_ListSelect& Expression_MaskExpression_ListSelect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_ListSelect::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.ListSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selection_.Clear();
  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_ListSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.ListSelect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression.MaskExpression.ListSelect.ListSelectItem selection = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_selection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.Select child = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.ListSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.ListSelect)
  return false;
#undef DO_
}

void Expression_MaskExpression_ListSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.ListSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.MaskExpression.ListSelect.ListSelectItem selection = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selection_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->selection(static_cast<int>(i)),
      output);
  }

  // .substrait.Expression.MaskExpression.Select child = 2;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.ListSelect)
}

::google::protobuf::uint8* Expression_MaskExpression_ListSelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.ListSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression.MaskExpression.ListSelect.ListSelectItem selection = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selection_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->selection(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Expression.MaskExpression.Select child = 2;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.ListSelect)
  return target;
}

size_t Expression_MaskExpression_ListSelect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.ListSelect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression.MaskExpression.ListSelect.ListSelectItem selection = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->selection_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selection(static_cast<int>(i)));
    }
  }

  // .substrait.Expression.MaskExpression.Select child = 2;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_ListSelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.ListSelect)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_ListSelect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_ListSelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.ListSelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.ListSelect)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_ListSelect::MergeFrom(const Expression_MaskExpression_ListSelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.ListSelect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  selection_.MergeFrom(from.selection_);
  if (from.has_child()) {
    mutable_child()->::substrait::Expression_MaskExpression_Select::MergeFrom(from.child());
  }
}

void Expression_MaskExpression_ListSelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.ListSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_ListSelect::CopyFrom(const Expression_MaskExpression_ListSelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.ListSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_ListSelect::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_ListSelect::Swap(Expression_MaskExpression_ListSelect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_ListSelect::InternalSwap(Expression_MaskExpression_ListSelect* other) {
  using std::swap;
  CastToBase(&selection_)->InternalSwap(CastToBase(&other->selection_));
  swap(child_, other->child_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_ListSelect::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_MapSelect_MapKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_MapSelect_MapKey::kMapKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_MapSelect_MapKey::Expression_MaskExpression_MapSelect_MapKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_MapSelect_MapKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.MapSelect.MapKey)
}
Expression_MaskExpression_MapSelect_MapKey::Expression_MaskExpression_MapSelect_MapKey(const Expression_MaskExpression_MapSelect_MapKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.map_key().size() > 0) {
    map_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_key_);
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.MapSelect.MapKey)
}

void Expression_MaskExpression_MapSelect_MapKey::SharedCtor() {
  map_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Expression_MaskExpression_MapSelect_MapKey::~Expression_MaskExpression_MapSelect_MapKey() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.MapSelect.MapKey)
  SharedDtor();
}

void Expression_MaskExpression_MapSelect_MapKey::SharedDtor() {
  map_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression_MaskExpression_MapSelect_MapKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_MapSelect_MapKey::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_MapSelect_MapKey& Expression_MaskExpression_MapSelect_MapKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_MapSelect_MapKey.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_MapSelect_MapKey::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_MapSelect_MapKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string map_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->map_key().data(), static_cast<int>(this->map_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.MaskExpression.MapSelect.MapKey.map_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.MapSelect.MapKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.MapSelect.MapKey)
  return false;
#undef DO_
}

void Expression_MaskExpression_MapSelect_MapKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_key = 1;
  if (this->map_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_key().data(), static_cast<int>(this->map_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.MaskExpression.MapSelect.MapKey.map_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.MapSelect.MapKey)
}

::google::protobuf::uint8* Expression_MaskExpression_MapSelect_MapKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_key = 1;
  if (this->map_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_key().data(), static_cast<int>(this->map_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.MaskExpression.MapSelect.MapKey.map_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.MapSelect.MapKey)
  return target;
}

size_t Expression_MaskExpression_MapSelect_MapKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string map_key = 1;
  if (this->map_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_MapSelect_MapKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_MapSelect_MapKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_MapSelect_MapKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.MapSelect.MapKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.MapSelect.MapKey)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_MapSelect_MapKey::MergeFrom(const Expression_MaskExpression_MapSelect_MapKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map_key().size() > 0) {

    map_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_key_);
  }
}

void Expression_MaskExpression_MapSelect_MapKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_MapSelect_MapKey::CopyFrom(const Expression_MaskExpression_MapSelect_MapKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.MapSelect.MapKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_MapSelect_MapKey::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_MapSelect_MapKey::Swap(Expression_MaskExpression_MapSelect_MapKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_MapSelect_MapKey::InternalSwap(Expression_MaskExpression_MapSelect_MapKey* other) {
  using std::swap;
  map_key_.Swap(&other->map_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_MapSelect_MapKey::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_MapSelect_MapKeyExpression::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_MapSelect_MapKeyExpression::kMapKeyExpressionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_MapSelect_MapKeyExpression::Expression_MaskExpression_MapSelect_MapKeyExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_MapSelect_MapKeyExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
}
Expression_MaskExpression_MapSelect_MapKeyExpression::Expression_MaskExpression_MapSelect_MapKeyExpression(const Expression_MaskExpression_MapSelect_MapKeyExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_key_expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.map_key_expression().size() > 0) {
    map_key_expression_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_key_expression_);
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::SharedCtor() {
  map_key_expression_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Expression_MaskExpression_MapSelect_MapKeyExpression::~Expression_MaskExpression_MapSelect_MapKeyExpression() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  SharedDtor();
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::SharedDtor() {
  map_key_expression_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_MapSelect_MapKeyExpression::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_MapSelect_MapKeyExpression& Expression_MaskExpression_MapSelect_MapKeyExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_MapSelect_MapKeyExpression.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_MapSelect_MapKeyExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_key_expression_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_MapSelect_MapKeyExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string map_key_expression = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map_key_expression()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->map_key_expression().data(), static_cast<int>(this->map_key_expression().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Expression.MaskExpression.MapSelect.MapKeyExpression.map_key_expression"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  return false;
#undef DO_
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_key_expression = 1;
  if (this->map_key_expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_key_expression().data(), static_cast<int>(this->map_key_expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.MaskExpression.MapSelect.MapKeyExpression.map_key_expression");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->map_key_expression(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
}

::google::protobuf::uint8* Expression_MaskExpression_MapSelect_MapKeyExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string map_key_expression = 1;
  if (this->map_key_expression().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->map_key_expression().data(), static_cast<int>(this->map_key_expression().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Expression.MaskExpression.MapSelect.MapKeyExpression.map_key_expression");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->map_key_expression(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  return target;
}

size_t Expression_MaskExpression_MapSelect_MapKeyExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string map_key_expression = 1;
  if (this->map_key_expression().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->map_key_expression());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_MapSelect_MapKeyExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_MapSelect_MapKeyExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::MergeFrom(const Expression_MaskExpression_MapSelect_MapKeyExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.map_key_expression().size() > 0) {

    map_key_expression_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_key_expression_);
  }
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::CopyFrom(const Expression_MaskExpression_MapSelect_MapKeyExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.MapSelect.MapKeyExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_MapSelect_MapKeyExpression::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_MapSelect_MapKeyExpression::Swap(Expression_MaskExpression_MapSelect_MapKeyExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_MapSelect_MapKeyExpression::InternalSwap(Expression_MaskExpression_MapSelect_MapKeyExpression* other) {
  using std::swap;
  map_key_expression_.Swap(&other->map_key_expression_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_MapSelect_MapKeyExpression::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression_MapSelect::InitAsDefaultInstance() {
  ::substrait::_Expression_MaskExpression_MapSelect_default_instance_.key_ = const_cast< ::substrait::Expression_MaskExpression_MapSelect_MapKey*>(
      ::substrait::Expression_MaskExpression_MapSelect_MapKey::internal_default_instance());
  ::substrait::_Expression_MaskExpression_MapSelect_default_instance_.expression_ = const_cast< ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression*>(
      ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression::internal_default_instance());
  ::substrait::_Expression_MaskExpression_MapSelect_default_instance_._instance.get_mutable()->child_ = const_cast< ::substrait::Expression_MaskExpression_Select*>(
      ::substrait::Expression_MaskExpression_Select::internal_default_instance());
}
void Expression_MaskExpression_MapSelect::set_allocated_key(::substrait::Expression_MaskExpression_MapSelect_MapKey* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_select();
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    set_has_key();
    select_.key_ = key;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.MapSelect.key)
}
void Expression_MaskExpression_MapSelect::set_allocated_expression(::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression* expression) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_select();
  if (expression) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expression = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expression, submessage_arena);
    }
    set_has_expression();
    select_.expression_ = expression;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.MaskExpression.MapSelect.expression)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression_MapSelect::kKeyFieldNumber;
const int Expression_MaskExpression_MapSelect::kExpressionFieldNumber;
const int Expression_MaskExpression_MapSelect::kChildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression_MapSelect::Expression_MaskExpression_MapSelect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression.MapSelect)
}
Expression_MaskExpression_MapSelect::Expression_MaskExpression_MapSelect(const Expression_MaskExpression_MapSelect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_child()) {
    child_ = new ::substrait::Expression_MaskExpression_Select(*from.child_);
  } else {
    child_ = NULL;
  }
  clear_has_select();
  switch (from.select_case()) {
    case kKey: {
      mutable_key()->::substrait::Expression_MaskExpression_MapSelect_MapKey::MergeFrom(from.key());
      break;
    }
    case kExpression: {
      mutable_expression()->::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression::MergeFrom(from.expression());
      break;
    }
    case SELECT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression.MapSelect)
}

void Expression_MaskExpression_MapSelect::SharedCtor() {
  child_ = NULL;
  clear_has_select();
}

Expression_MaskExpression_MapSelect::~Expression_MaskExpression_MapSelect() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression.MapSelect)
  SharedDtor();
}

void Expression_MaskExpression_MapSelect::SharedDtor() {
  if (this != internal_default_instance()) delete child_;
  if (has_select()) {
    clear_select();
  }
}

void Expression_MaskExpression_MapSelect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression_MapSelect::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression_MapSelect& Expression_MaskExpression_MapSelect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression_ListSelect.base);
  return *internal_default_instance();
}


void Expression_MaskExpression_MapSelect::clear_select() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.MaskExpression.MapSelect)
  switch (select_case()) {
    case kKey: {
      delete select_.key_;
      break;
    }
    case kExpression: {
      delete select_.expression_;
      break;
    }
    case SELECT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SELECT_NOT_SET;
}


void Expression_MaskExpression_MapSelect::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression.MapSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && child_ != NULL) {
    delete child_;
  }
  child_ = NULL;
  clear_select();
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression_MapSelect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression.MapSelect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.MaskExpression.MapSelect.MapKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.MapSelect.MapKeyExpression expression = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression.Select child = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_child()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression.MapSelect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression.MapSelect)
  return false;
#undef DO_
}

void Expression_MaskExpression_MapSelect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression.MapSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.MapSelect.MapKey key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .substrait.Expression.MaskExpression.MapSelect.MapKeyExpression expression = 2;
  if (has_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_expression(), output);
  }

  // .substrait.Expression.MaskExpression.Select child = 3;
  if (this->has_child()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_child(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression.MapSelect)
}

::google::protobuf::uint8* Expression_MaskExpression_MapSelect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression.MapSelect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.MapSelect.MapKey key = 1;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression.MapSelect.MapKeyExpression expression = 2;
  if (has_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_expression(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression.Select child = 3;
  if (this->has_child()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_child(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression.MapSelect)
  return target;
}

size_t Expression_MaskExpression_MapSelect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression.MapSelect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.MaskExpression.Select child = 3;
  if (this->has_child()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *child_);
  }

  switch (select_case()) {
    // .substrait.Expression.MaskExpression.MapSelect.MapKey key = 1;
    case kKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *select_.key_);
      break;
    }
    // .substrait.Expression.MaskExpression.MapSelect.MapKeyExpression expression = 2;
    case kExpression: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *select_.expression_);
      break;
    }
    case SELECT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression_MapSelect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression.MapSelect)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression_MapSelect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression_MapSelect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression.MapSelect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression.MapSelect)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression_MapSelect::MergeFrom(const Expression_MaskExpression_MapSelect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression.MapSelect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_child()) {
    mutable_child()->::substrait::Expression_MaskExpression_Select::MergeFrom(from.child());
  }
  switch (from.select_case()) {
    case kKey: {
      mutable_key()->::substrait::Expression_MaskExpression_MapSelect_MapKey::MergeFrom(from.key());
      break;
    }
    case kExpression: {
      mutable_expression()->::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression::MergeFrom(from.expression());
      break;
    }
    case SELECT_NOT_SET: {
      break;
    }
  }
}

void Expression_MaskExpression_MapSelect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression.MapSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression_MapSelect::CopyFrom(const Expression_MaskExpression_MapSelect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression.MapSelect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression_MapSelect::IsInitialized() const {
  return true;
}

void Expression_MaskExpression_MapSelect::Swap(Expression_MaskExpression_MapSelect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression_MapSelect::InternalSwap(Expression_MaskExpression_MapSelect* other) {
  using std::swap;
  swap(child_, other->child_);
  swap(select_, other->select_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression_MapSelect::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_MaskExpression::InitAsDefaultInstance() {
  ::substrait::_Expression_MaskExpression_default_instance_._instance.get_mutable()->select_ = const_cast< ::substrait::Expression_MaskExpression_StructSelect*>(
      ::substrait::Expression_MaskExpression_StructSelect::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_MaskExpression::kSelectFieldNumber;
const int Expression_MaskExpression::kMaintainSingularStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_MaskExpression::Expression_MaskExpression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.MaskExpression)
}
Expression_MaskExpression::Expression_MaskExpression(const Expression_MaskExpression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_select()) {
    select_ = new ::substrait::Expression_MaskExpression_StructSelect(*from.select_);
  } else {
    select_ = NULL;
  }
  maintain_singular_struct_ = from.maintain_singular_struct_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.MaskExpression)
}

void Expression_MaskExpression::SharedCtor() {
  ::memset(&select_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maintain_singular_struct_) -
      reinterpret_cast<char*>(&select_)) + sizeof(maintain_singular_struct_));
}

Expression_MaskExpression::~Expression_MaskExpression() {
  // @@protoc_insertion_point(destructor:substrait.Expression.MaskExpression)
  SharedDtor();
}

void Expression_MaskExpression::SharedDtor() {
  if (this != internal_default_instance()) delete select_;
}

void Expression_MaskExpression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_MaskExpression::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_MaskExpression& Expression_MaskExpression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_MaskExpression.base);
  return *internal_default_instance();
}


void Expression_MaskExpression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.MaskExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && select_ != NULL) {
    delete select_;
  }
  select_ = NULL;
  maintain_singular_struct_ = false;
  _internal_metadata_.Clear();
}

bool Expression_MaskExpression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.MaskExpression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.MaskExpression.StructSelect select = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_select()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool maintain_singular_struct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maintain_singular_struct_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.MaskExpression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.MaskExpression)
  return false;
#undef DO_
}

void Expression_MaskExpression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.MaskExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.StructSelect select = 1;
  if (this->has_select()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_select(), output);
  }

  // bool maintain_singular_struct = 2;
  if (this->maintain_singular_struct() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->maintain_singular_struct(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.MaskExpression)
}

::google::protobuf::uint8* Expression_MaskExpression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.MaskExpression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.MaskExpression.StructSelect select = 1;
  if (this->has_select()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_select(), deterministic, target);
  }

  // bool maintain_singular_struct = 2;
  if (this->maintain_singular_struct() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->maintain_singular_struct(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.MaskExpression)
  return target;
}

size_t Expression_MaskExpression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.MaskExpression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression.MaskExpression.StructSelect select = 1;
  if (this->has_select()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *select_);
  }

  // bool maintain_singular_struct = 2;
  if (this->maintain_singular_struct() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_MaskExpression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.MaskExpression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_MaskExpression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_MaskExpression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.MaskExpression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.MaskExpression)
    MergeFrom(*source);
  }
}

void Expression_MaskExpression::MergeFrom(const Expression_MaskExpression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.MaskExpression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_select()) {
    mutable_select()->::substrait::Expression_MaskExpression_StructSelect::MergeFrom(from.select());
  }
  if (from.maintain_singular_struct() != 0) {
    set_maintain_singular_struct(from.maintain_singular_struct());
  }
}

void Expression_MaskExpression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.MaskExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_MaskExpression::CopyFrom(const Expression_MaskExpression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.MaskExpression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_MaskExpression::IsInitialized() const {
  return true;
}

void Expression_MaskExpression::Swap(Expression_MaskExpression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_MaskExpression::InternalSwap(Expression_MaskExpression* other) {
  using std::swap;
  swap(select_, other->select_);
  swap(maintain_singular_struct_, other->maintain_singular_struct_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_MaskExpression::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_FieldReference_RootReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_FieldReference_RootReference::Expression_FieldReference_RootReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_FieldReference_RootReference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.FieldReference.RootReference)
}
Expression_FieldReference_RootReference::Expression_FieldReference_RootReference(const Expression_FieldReference_RootReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.FieldReference.RootReference)
}

void Expression_FieldReference_RootReference::SharedCtor() {
}

Expression_FieldReference_RootReference::~Expression_FieldReference_RootReference() {
  // @@protoc_insertion_point(destructor:substrait.Expression.FieldReference.RootReference)
  SharedDtor();
}

void Expression_FieldReference_RootReference::SharedDtor() {
}

void Expression_FieldReference_RootReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_FieldReference_RootReference::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_FieldReference_RootReference& Expression_FieldReference_RootReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_FieldReference_RootReference.base);
  return *internal_default_instance();
}


void Expression_FieldReference_RootReference::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.FieldReference.RootReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Expression_FieldReference_RootReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.FieldReference.RootReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.FieldReference.RootReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.FieldReference.RootReference)
  return false;
#undef DO_
}

void Expression_FieldReference_RootReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.FieldReference.RootReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.FieldReference.RootReference)
}

::google::protobuf::uint8* Expression_FieldReference_RootReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.FieldReference.RootReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.FieldReference.RootReference)
  return target;
}

size_t Expression_FieldReference_RootReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.FieldReference.RootReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_FieldReference_RootReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.FieldReference.RootReference)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_FieldReference_RootReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_FieldReference_RootReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.FieldReference.RootReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.FieldReference.RootReference)
    MergeFrom(*source);
  }
}

void Expression_FieldReference_RootReference::MergeFrom(const Expression_FieldReference_RootReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.FieldReference.RootReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Expression_FieldReference_RootReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.FieldReference.RootReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_FieldReference_RootReference::CopyFrom(const Expression_FieldReference_RootReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.FieldReference.RootReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_FieldReference_RootReference::IsInitialized() const {
  return true;
}

void Expression_FieldReference_RootReference::Swap(Expression_FieldReference_RootReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_FieldReference_RootReference::InternalSwap(Expression_FieldReference_RootReference* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_FieldReference_RootReference::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_FieldReference_OuterReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_FieldReference_OuterReference::kStepsOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_FieldReference_OuterReference::Expression_FieldReference_OuterReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_Expression_FieldReference_OuterReference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.FieldReference.OuterReference)
}
Expression_FieldReference_OuterReference::Expression_FieldReference_OuterReference(const Expression_FieldReference_OuterReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steps_out_ = from.steps_out_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.FieldReference.OuterReference)
}

void Expression_FieldReference_OuterReference::SharedCtor() {
  steps_out_ = 0u;
}

Expression_FieldReference_OuterReference::~Expression_FieldReference_OuterReference() {
  // @@protoc_insertion_point(destructor:substrait.Expression.FieldReference.OuterReference)
  SharedDtor();
}

void Expression_FieldReference_OuterReference::SharedDtor() {
}

void Expression_FieldReference_OuterReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_FieldReference_OuterReference::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_FieldReference_OuterReference& Expression_FieldReference_OuterReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_Expression_FieldReference_OuterReference.base);
  return *internal_default_instance();
}


void Expression_FieldReference_OuterReference::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.FieldReference.OuterReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steps_out_ = 0u;
  _internal_metadata_.Clear();
}

bool Expression_FieldReference_OuterReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.FieldReference.OuterReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 steps_out = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steps_out_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.FieldReference.OuterReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.FieldReference.OuterReference)
  return false;
#undef DO_
}

void Expression_FieldReference_OuterReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.FieldReference.OuterReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 steps_out = 1;
  if (this->steps_out() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->steps_out(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.FieldReference.OuterReference)
}

::google::protobuf::uint8* Expression_FieldReference_OuterReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.FieldReference.OuterReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 steps_out = 1;
  if (this->steps_out() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->steps_out(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.FieldReference.OuterReference)
  return target;
}

size_t Expression_FieldReference_OuterReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.FieldReference.OuterReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 steps_out = 1;
  if (this->steps_out() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->steps_out());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_FieldReference_OuterReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.FieldReference.OuterReference)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_FieldReference_OuterReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_FieldReference_OuterReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.FieldReference.OuterReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.FieldReference.OuterReference)
    MergeFrom(*source);
  }
}

void Expression_FieldReference_OuterReference::MergeFrom(const Expression_FieldReference_OuterReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.FieldReference.OuterReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.steps_out() != 0) {
    set_steps_out(from.steps_out());
  }
}

void Expression_FieldReference_OuterReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.FieldReference.OuterReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_FieldReference_OuterReference::CopyFrom(const Expression_FieldReference_OuterReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.FieldReference.OuterReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_FieldReference_OuterReference::IsInitialized() const {
  return true;
}

void Expression_FieldReference_OuterReference::Swap(Expression_FieldReference_OuterReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_FieldReference_OuterReference::InternalSwap(Expression_FieldReference_OuterReference* other) {
  using std::swap;
  swap(steps_out_, other->steps_out_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_FieldReference_OuterReference::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_FieldReference::InitAsDefaultInstance() {
  ::substrait::_Expression_FieldReference_default_instance_.direct_reference_ = const_cast< ::substrait::Expression_ReferenceSegment*>(
      ::substrait::Expression_ReferenceSegment::internal_default_instance());
  ::substrait::_Expression_FieldReference_default_instance_.masked_reference_ = const_cast< ::substrait::Expression_MaskExpression*>(
      ::substrait::Expression_MaskExpression::internal_default_instance());
  ::substrait::_Expression_FieldReference_default_instance_.expression_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_Expression_FieldReference_default_instance_.root_reference_ = const_cast< ::substrait::Expression_FieldReference_RootReference*>(
      ::substrait::Expression_FieldReference_RootReference::internal_default_instance());
  ::substrait::_Expression_FieldReference_default_instance_.outer_reference_ = const_cast< ::substrait::Expression_FieldReference_OuterReference*>(
      ::substrait::Expression_FieldReference_OuterReference::internal_default_instance());
}
void Expression_FieldReference::set_allocated_direct_reference(::substrait::Expression_ReferenceSegment* direct_reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference_type();
  if (direct_reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      direct_reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, direct_reference, submessage_arena);
    }
    set_has_direct_reference();
    reference_type_.direct_reference_ = direct_reference;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.FieldReference.direct_reference)
}
void Expression_FieldReference::set_allocated_masked_reference(::substrait::Expression_MaskExpression* masked_reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_reference_type();
  if (masked_reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      masked_reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, masked_reference, submessage_arena);
    }
    set_has_masked_reference();
    reference_type_.masked_reference_ = masked_reference;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.FieldReference.masked_reference)
}
void Expression_FieldReference::set_allocated_expression(::substrait::Expression* expression) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_root_type();
  if (expression) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      expression = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, expression, submessage_arena);
    }
    set_has_expression();
    root_type_.expression_ = expression;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.FieldReference.expression)
}
void Expression_FieldReference::set_allocated_root_reference(::substrait::Expression_FieldReference_RootReference* root_reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_root_type();
  if (root_reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_reference, submessage_arena);
    }
    set_has_root_reference();
    root_type_.root_reference_ = root_reference;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.FieldReference.root_reference)
}
void Expression_FieldReference::set_allocated_outer_reference(::substrait::Expression_FieldReference_OuterReference* outer_reference) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_root_type();
  if (outer_reference) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      outer_reference = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, outer_reference, submessage_arena);
    }
    set_has_outer_reference();
    root_type_.outer_reference_ = outer_reference;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.FieldReference.outer_reference)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_FieldReference::kDirectReferenceFieldNumber;
const int Expression_FieldReference::kMaskedReferenceFieldNumber;
const int Expression_FieldReference::kExpressionFieldNumber;
const int Expression_FieldReference::kRootReferenceFieldNumber;
const int Expression_FieldReference::kOuterReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_FieldReference::Expression_FieldReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.FieldReference)
}
Expression_FieldReference::Expression_FieldReference(const Expression_FieldReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_reference_type();
  switch (from.reference_type_case()) {
    case kDirectReference: {
      mutable_direct_reference()->::substrait::Expression_ReferenceSegment::MergeFrom(from.direct_reference());
      break;
    }
    case kMaskedReference: {
      mutable_masked_reference()->::substrait::Expression_MaskExpression::MergeFrom(from.masked_reference());
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  clear_has_root_type();
  switch (from.root_type_case()) {
    case kExpression: {
      mutable_expression()->::substrait::Expression::MergeFrom(from.expression());
      break;
    }
    case kRootReference: {
      mutable_root_reference()->::substrait::Expression_FieldReference_RootReference::MergeFrom(from.root_reference());
      break;
    }
    case kOuterReference: {
      mutable_outer_reference()->::substrait::Expression_FieldReference_OuterReference::MergeFrom(from.outer_reference());
      break;
    }
    case ROOT_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.FieldReference)
}

void Expression_FieldReference::SharedCtor() {
  clear_has_reference_type();
  clear_has_root_type();
}

Expression_FieldReference::~Expression_FieldReference() {
  // @@protoc_insertion_point(destructor:substrait.Expression.FieldReference)
  SharedDtor();
}

void Expression_FieldReference::SharedDtor() {
  if (has_reference_type()) {
    clear_reference_type();
  }
  if (has_root_type()) {
    clear_root_type();
  }
}

void Expression_FieldReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_FieldReference::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_FieldReference& Expression_FieldReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_FieldReference::clear_reference_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.FieldReference)
  switch (reference_type_case()) {
    case kDirectReference: {
      delete reference_type_.direct_reference_;
      break;
    }
    case kMaskedReference: {
      delete reference_type_.masked_reference_;
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REFERENCE_TYPE_NOT_SET;
}

void Expression_FieldReference::clear_root_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.FieldReference)
  switch (root_type_case()) {
    case kExpression: {
      delete root_type_.expression_;
      break;
    }
    case kRootReference: {
      delete root_type_.root_reference_;
      break;
    }
    case kOuterReference: {
      delete root_type_.outer_reference_;
      break;
    }
    case ROOT_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ROOT_TYPE_NOT_SET;
}


void Expression_FieldReference::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.FieldReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_reference_type();
  clear_root_type();
  _internal_metadata_.Clear();
}

bool Expression_FieldReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.FieldReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.ReferenceSegment direct_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direct_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MaskExpression masked_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_masked_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression expression = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.FieldReference.RootReference root_reference = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.FieldReference.OuterReference outer_reference = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outer_reference()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.FieldReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.FieldReference)
  return false;
#undef DO_
}

void Expression_FieldReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.FieldReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.ReferenceSegment direct_reference = 1;
  if (has_direct_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_direct_reference(), output);
  }

  // .substrait.Expression.MaskExpression masked_reference = 2;
  if (has_masked_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_masked_reference(), output);
  }

  // .substrait.Expression expression = 3;
  if (has_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_expression(), output);
  }

  // .substrait.Expression.FieldReference.RootReference root_reference = 4;
  if (has_root_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_root_reference(), output);
  }

  // .substrait.Expression.FieldReference.OuterReference outer_reference = 5;
  if (has_outer_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_outer_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.FieldReference)
}

::google::protobuf::uint8* Expression_FieldReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.FieldReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.ReferenceSegment direct_reference = 1;
  if (has_direct_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_direct_reference(), deterministic, target);
  }

  // .substrait.Expression.MaskExpression masked_reference = 2;
  if (has_masked_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_masked_reference(), deterministic, target);
  }

  // .substrait.Expression expression = 3;
  if (has_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_expression(), deterministic, target);
  }

  // .substrait.Expression.FieldReference.RootReference root_reference = 4;
  if (has_root_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_root_reference(), deterministic, target);
  }

  // .substrait.Expression.FieldReference.OuterReference outer_reference = 5;
  if (has_outer_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_outer_reference(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.FieldReference)
  return target;
}

size_t Expression_FieldReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.FieldReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (reference_type_case()) {
    // .substrait.Expression.ReferenceSegment direct_reference = 1;
    case kDirectReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_type_.direct_reference_);
      break;
    }
    // .substrait.Expression.MaskExpression masked_reference = 2;
    case kMaskedReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *reference_type_.masked_reference_);
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  switch (root_type_case()) {
    // .substrait.Expression expression = 3;
    case kExpression: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *root_type_.expression_);
      break;
    }
    // .substrait.Expression.FieldReference.RootReference root_reference = 4;
    case kRootReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *root_type_.root_reference_);
      break;
    }
    // .substrait.Expression.FieldReference.OuterReference outer_reference = 5;
    case kOuterReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *root_type_.outer_reference_);
      break;
    }
    case ROOT_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_FieldReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.FieldReference)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_FieldReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_FieldReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.FieldReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.FieldReference)
    MergeFrom(*source);
  }
}

void Expression_FieldReference::MergeFrom(const Expression_FieldReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.FieldReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.reference_type_case()) {
    case kDirectReference: {
      mutable_direct_reference()->::substrait::Expression_ReferenceSegment::MergeFrom(from.direct_reference());
      break;
    }
    case kMaskedReference: {
      mutable_masked_reference()->::substrait::Expression_MaskExpression::MergeFrom(from.masked_reference());
      break;
    }
    case REFERENCE_TYPE_NOT_SET: {
      break;
    }
  }
  switch (from.root_type_case()) {
    case kExpression: {
      mutable_expression()->::substrait::Expression::MergeFrom(from.expression());
      break;
    }
    case kRootReference: {
      mutable_root_reference()->::substrait::Expression_FieldReference_RootReference::MergeFrom(from.root_reference());
      break;
    }
    case kOuterReference: {
      mutable_outer_reference()->::substrait::Expression_FieldReference_OuterReference::MergeFrom(from.outer_reference());
      break;
    }
    case ROOT_TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_FieldReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.FieldReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_FieldReference::CopyFrom(const Expression_FieldReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.FieldReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_FieldReference::IsInitialized() const {
  return true;
}

void Expression_FieldReference::Swap(Expression_FieldReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_FieldReference::InternalSwap(Expression_FieldReference* other) {
  using std::swap;
  swap(reference_type_, other->reference_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(root_type_, other->root_type_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_FieldReference::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Subquery_Scalar::InitAsDefaultInstance() {
  ::substrait::_Expression_Subquery_Scalar_default_instance_._instance.get_mutable()->input_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Subquery_Scalar::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Subquery_Scalar::Expression_Subquery_Scalar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Subquery.Scalar)
}
Expression_Subquery_Scalar::Expression_Subquery_Scalar(const Expression_Subquery_Scalar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input()) {
    input_ = new ::substrait::Rel(*from.input_);
  } else {
    input_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Subquery.Scalar)
}

void Expression_Subquery_Scalar::SharedCtor() {
  input_ = NULL;
}

Expression_Subquery_Scalar::~Expression_Subquery_Scalar() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Subquery.Scalar)
  SharedDtor();
}

void Expression_Subquery_Scalar::SharedDtor() {
  if (this != internal_default_instance()) delete input_;
}

void Expression_Subquery_Scalar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Subquery_Scalar::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Subquery_Scalar& Expression_Subquery_Scalar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Subquery_Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Subquery.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && input_ != NULL) {
    delete input_;
  }
  input_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_Subquery_Scalar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Subquery.Scalar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Rel input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Subquery.Scalar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Subquery.Scalar)
  return false;
#undef DO_
}

void Expression_Subquery_Scalar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Subquery.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Rel input = 1;
  if (this->has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Subquery.Scalar)
}

::google::protobuf::uint8* Expression_Subquery_Scalar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Subquery.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Rel input = 1;
  if (this->has_input()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_input(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Subquery.Scalar)
  return target;
}

size_t Expression_Subquery_Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Subquery.Scalar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Rel input = 1;
  if (this->has_input()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Subquery_Scalar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Subquery.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Subquery_Scalar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Subquery_Scalar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Subquery.Scalar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Subquery.Scalar)
    MergeFrom(*source);
  }
}

void Expression_Subquery_Scalar::MergeFrom(const Expression_Subquery_Scalar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Subquery.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input()) {
    mutable_input()->::substrait::Rel::MergeFrom(from.input());
  }
}

void Expression_Subquery_Scalar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Subquery.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Subquery_Scalar::CopyFrom(const Expression_Subquery_Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Subquery.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Subquery_Scalar::IsInitialized() const {
  return true;
}

void Expression_Subquery_Scalar::Swap(Expression_Subquery_Scalar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Subquery_Scalar::InternalSwap(Expression_Subquery_Scalar* other) {
  using std::swap;
  swap(input_, other->input_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Subquery_Scalar::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Subquery_InPredicate::InitAsDefaultInstance() {
  ::substrait::_Expression_Subquery_InPredicate_default_instance_._instance.get_mutable()->haystack_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Subquery_InPredicate::kNeedlesFieldNumber;
const int Expression_Subquery_InPredicate::kHaystackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Subquery_InPredicate::Expression_Subquery_InPredicate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Subquery.InPredicate)
}
Expression_Subquery_InPredicate::Expression_Subquery_InPredicate(const Expression_Subquery_InPredicate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      needles_(from.needles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_haystack()) {
    haystack_ = new ::substrait::Rel(*from.haystack_);
  } else {
    haystack_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Subquery.InPredicate)
}

void Expression_Subquery_InPredicate::SharedCtor() {
  haystack_ = NULL;
}

Expression_Subquery_InPredicate::~Expression_Subquery_InPredicate() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Subquery.InPredicate)
  SharedDtor();
}

void Expression_Subquery_InPredicate::SharedDtor() {
  if (this != internal_default_instance()) delete haystack_;
}

void Expression_Subquery_InPredicate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Subquery_InPredicate::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Subquery_InPredicate& Expression_Subquery_InPredicate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Subquery_InPredicate::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Subquery.InPredicate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  needles_.Clear();
  if (GetArenaNoVirtual() == NULL && haystack_ != NULL) {
    delete haystack_;
  }
  haystack_ = NULL;
  _internal_metadata_.Clear();
}

bool Expression_Subquery_InPredicate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Subquery.InPredicate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Expression needles = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_needles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel haystack = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_haystack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Subquery.InPredicate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Subquery.InPredicate)
  return false;
#undef DO_
}

void Expression_Subquery_InPredicate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Subquery.InPredicate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression needles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->needles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->needles(static_cast<int>(i)),
      output);
  }

  // .substrait.Rel haystack = 2;
  if (this->has_haystack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_haystack(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Subquery.InPredicate)
}

::google::protobuf::uint8* Expression_Subquery_InPredicate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Subquery.InPredicate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Expression needles = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->needles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->needles(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.Rel haystack = 2;
  if (this->has_haystack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_haystack(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Subquery.InPredicate)
  return target;
}

size_t Expression_Subquery_InPredicate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Subquery.InPredicate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression needles = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->needles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->needles(static_cast<int>(i)));
    }
  }

  // .substrait.Rel haystack = 2;
  if (this->has_haystack()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *haystack_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Subquery_InPredicate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Subquery.InPredicate)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Subquery_InPredicate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Subquery_InPredicate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Subquery.InPredicate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Subquery.InPredicate)
    MergeFrom(*source);
  }
}

void Expression_Subquery_InPredicate::MergeFrom(const Expression_Subquery_InPredicate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Subquery.InPredicate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  needles_.MergeFrom(from.needles_);
  if (from.has_haystack()) {
    mutable_haystack()->::substrait::Rel::MergeFrom(from.haystack());
  }
}

void Expression_Subquery_InPredicate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Subquery.InPredicate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Subquery_InPredicate::CopyFrom(const Expression_Subquery_InPredicate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Subquery.InPredicate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Subquery_InPredicate::IsInitialized() const {
  return true;
}

void Expression_Subquery_InPredicate::Swap(Expression_Subquery_InPredicate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Subquery_InPredicate::InternalSwap(Expression_Subquery_InPredicate* other) {
  using std::swap;
  CastToBase(&needles_)->InternalSwap(CastToBase(&other->needles_));
  swap(haystack_, other->haystack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Subquery_InPredicate::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Subquery_SetPredicate::InitAsDefaultInstance() {
  ::substrait::_Expression_Subquery_SetPredicate_default_instance_._instance.get_mutable()->tuples_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Subquery_SetPredicate::kPredicateOpFieldNumber;
const int Expression_Subquery_SetPredicate::kTuplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Subquery_SetPredicate::Expression_Subquery_SetPredicate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Subquery.SetPredicate)
}
Expression_Subquery_SetPredicate::Expression_Subquery_SetPredicate(const Expression_Subquery_SetPredicate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tuples()) {
    tuples_ = new ::substrait::Rel(*from.tuples_);
  } else {
    tuples_ = NULL;
  }
  predicate_op_ = from.predicate_op_;
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Subquery.SetPredicate)
}

void Expression_Subquery_SetPredicate::SharedCtor() {
  ::memset(&tuples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&predicate_op_) -
      reinterpret_cast<char*>(&tuples_)) + sizeof(predicate_op_));
}

Expression_Subquery_SetPredicate::~Expression_Subquery_SetPredicate() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Subquery.SetPredicate)
  SharedDtor();
}

void Expression_Subquery_SetPredicate::SharedDtor() {
  if (this != internal_default_instance()) delete tuples_;
}

void Expression_Subquery_SetPredicate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Subquery_SetPredicate::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Subquery_SetPredicate& Expression_Subquery_SetPredicate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Subquery_SetPredicate::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Subquery.SetPredicate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tuples_ != NULL) {
    delete tuples_;
  }
  tuples_ = NULL;
  predicate_op_ = 0;
  _internal_metadata_.Clear();
}

bool Expression_Subquery_SetPredicate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Subquery.SetPredicate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Subquery.SetPredicate.PredicateOp predicate_op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_predicate_op(static_cast< ::substrait::Expression_Subquery_SetPredicate_PredicateOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel tuples = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tuples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Subquery.SetPredicate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Subquery.SetPredicate)
  return false;
#undef DO_
}

void Expression_Subquery_SetPredicate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Subquery.SetPredicate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Subquery.SetPredicate.PredicateOp predicate_op = 1;
  if (this->predicate_op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->predicate_op(), output);
  }

  // .substrait.Rel tuples = 2;
  if (this->has_tuples()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_tuples(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Subquery.SetPredicate)
}

::google::protobuf::uint8* Expression_Subquery_SetPredicate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Subquery.SetPredicate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Subquery.SetPredicate.PredicateOp predicate_op = 1;
  if (this->predicate_op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->predicate_op(), target);
  }

  // .substrait.Rel tuples = 2;
  if (this->has_tuples()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_tuples(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Subquery.SetPredicate)
  return target;
}

size_t Expression_Subquery_SetPredicate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Subquery.SetPredicate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Rel tuples = 2;
  if (this->has_tuples()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tuples_);
  }

  // .substrait.Expression.Subquery.SetPredicate.PredicateOp predicate_op = 1;
  if (this->predicate_op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->predicate_op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Subquery_SetPredicate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Subquery.SetPredicate)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Subquery_SetPredicate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Subquery_SetPredicate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Subquery.SetPredicate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Subquery.SetPredicate)
    MergeFrom(*source);
  }
}

void Expression_Subquery_SetPredicate::MergeFrom(const Expression_Subquery_SetPredicate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Subquery.SetPredicate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tuples()) {
    mutable_tuples()->::substrait::Rel::MergeFrom(from.tuples());
  }
  if (from.predicate_op() != 0) {
    set_predicate_op(from.predicate_op());
  }
}

void Expression_Subquery_SetPredicate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Subquery.SetPredicate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Subquery_SetPredicate::CopyFrom(const Expression_Subquery_SetPredicate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Subquery.SetPredicate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Subquery_SetPredicate::IsInitialized() const {
  return true;
}

void Expression_Subquery_SetPredicate::Swap(Expression_Subquery_SetPredicate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Subquery_SetPredicate::InternalSwap(Expression_Subquery_SetPredicate* other) {
  using std::swap;
  swap(tuples_, other->tuples_);
  swap(predicate_op_, other->predicate_op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Subquery_SetPredicate::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Subquery_SetComparison::InitAsDefaultInstance() {
  ::substrait::_Expression_Subquery_SetComparison_default_instance_._instance.get_mutable()->left_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_Expression_Subquery_SetComparison_default_instance_._instance.get_mutable()->right_ = const_cast< ::substrait::Rel*>(
      ::substrait::Rel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Subquery_SetComparison::kReductionOpFieldNumber;
const int Expression_Subquery_SetComparison::kComparisonOpFieldNumber;
const int Expression_Subquery_SetComparison::kLeftFieldNumber;
const int Expression_Subquery_SetComparison::kRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Subquery_SetComparison::Expression_Subquery_SetComparison()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Subquery.SetComparison)
}
Expression_Subquery_SetComparison::Expression_Subquery_SetComparison(const Expression_Subquery_SetComparison& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_left()) {
    left_ = new ::substrait::Expression(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::substrait::Rel(*from.right_);
  } else {
    right_ = NULL;
  }
  ::memcpy(&reduction_op_, &from.reduction_op_,
    static_cast<size_t>(reinterpret_cast<char*>(&comparison_op_) -
    reinterpret_cast<char*>(&reduction_op_)) + sizeof(comparison_op_));
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Subquery.SetComparison)
}

void Expression_Subquery_SetComparison::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&comparison_op_) -
      reinterpret_cast<char*>(&left_)) + sizeof(comparison_op_));
}

Expression_Subquery_SetComparison::~Expression_Subquery_SetComparison() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Subquery.SetComparison)
  SharedDtor();
}

void Expression_Subquery_SetComparison::SharedDtor() {
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
}

void Expression_Subquery_SetComparison::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Subquery_SetComparison::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Subquery_SetComparison& Expression_Subquery_SetComparison::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Subquery_SetComparison::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Subquery.SetComparison)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  ::memset(&reduction_op_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&comparison_op_) -
      reinterpret_cast<char*>(&reduction_op_)) + sizeof(comparison_op_));
  _internal_metadata_.Clear();
}

bool Expression_Subquery_SetComparison::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Subquery.SetComparison)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Subquery.SetComparison.ReductionOp reduction_op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reduction_op(static_cast< ::substrait::Expression_Subquery_SetComparison_ReductionOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Subquery.SetComparison.ComparisonOp comparison_op = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_comparison_op(static_cast< ::substrait::Expression_Subquery_SetComparison_ComparisonOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression left = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Rel right = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Subquery.SetComparison)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Subquery.SetComparison)
  return false;
#undef DO_
}

void Expression_Subquery_SetComparison::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Subquery.SetComparison)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Subquery.SetComparison.ReductionOp reduction_op = 1;
  if (this->reduction_op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reduction_op(), output);
  }

  // .substrait.Expression.Subquery.SetComparison.ComparisonOp comparison_op = 2;
  if (this->comparison_op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->comparison_op(), output);
  }

  // .substrait.Expression left = 3;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_left(), output);
  }

  // .substrait.Rel right = 4;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_right(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Subquery.SetComparison)
}

::google::protobuf::uint8* Expression_Subquery_SetComparison::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Subquery.SetComparison)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Subquery.SetComparison.ReductionOp reduction_op = 1;
  if (this->reduction_op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reduction_op(), target);
  }

  // .substrait.Expression.Subquery.SetComparison.ComparisonOp comparison_op = 2;
  if (this->comparison_op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->comparison_op(), target);
  }

  // .substrait.Expression left = 3;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_left(), deterministic, target);
  }

  // .substrait.Rel right = 4;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_right(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Subquery.SetComparison)
  return target;
}

size_t Expression_Subquery_SetComparison::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Subquery.SetComparison)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression left = 3;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .substrait.Rel right = 4;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .substrait.Expression.Subquery.SetComparison.ReductionOp reduction_op = 1;
  if (this->reduction_op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reduction_op());
  }

  // .substrait.Expression.Subquery.SetComparison.ComparisonOp comparison_op = 2;
  if (this->comparison_op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->comparison_op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Subquery_SetComparison::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Subquery.SetComparison)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Subquery_SetComparison* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Subquery_SetComparison>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Subquery.SetComparison)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Subquery.SetComparison)
    MergeFrom(*source);
  }
}

void Expression_Subquery_SetComparison::MergeFrom(const Expression_Subquery_SetComparison& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Subquery.SetComparison)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_left()) {
    mutable_left()->::substrait::Expression::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::substrait::Rel::MergeFrom(from.right());
  }
  if (from.reduction_op() != 0) {
    set_reduction_op(from.reduction_op());
  }
  if (from.comparison_op() != 0) {
    set_comparison_op(from.comparison_op());
  }
}

void Expression_Subquery_SetComparison::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Subquery.SetComparison)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Subquery_SetComparison::CopyFrom(const Expression_Subquery_SetComparison& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Subquery.SetComparison)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Subquery_SetComparison::IsInitialized() const {
  return true;
}

void Expression_Subquery_SetComparison::Swap(Expression_Subquery_SetComparison* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Subquery_SetComparison::InternalSwap(Expression_Subquery_SetComparison* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(reduction_op_, other->reduction_op_);
  swap(comparison_op_, other->comparison_op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Subquery_SetComparison::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression_Subquery::InitAsDefaultInstance() {
  ::substrait::_Expression_Subquery_default_instance_.scalar_ = const_cast< ::substrait::Expression_Subquery_Scalar*>(
      ::substrait::Expression_Subquery_Scalar::internal_default_instance());
  ::substrait::_Expression_Subquery_default_instance_.in_predicate_ = const_cast< ::substrait::Expression_Subquery_InPredicate*>(
      ::substrait::Expression_Subquery_InPredicate::internal_default_instance());
  ::substrait::_Expression_Subquery_default_instance_.set_predicate_ = const_cast< ::substrait::Expression_Subquery_SetPredicate*>(
      ::substrait::Expression_Subquery_SetPredicate::internal_default_instance());
  ::substrait::_Expression_Subquery_default_instance_.set_comparison_ = const_cast< ::substrait::Expression_Subquery_SetComparison*>(
      ::substrait::Expression_Subquery_SetComparison::internal_default_instance());
}
void Expression_Subquery::set_allocated_scalar(::substrait::Expression_Subquery_Scalar* scalar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subquery_type();
  if (scalar) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scalar = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scalar, submessage_arena);
    }
    set_has_scalar();
    subquery_type_.scalar_ = scalar;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Subquery.scalar)
}
void Expression_Subquery::set_allocated_in_predicate(::substrait::Expression_Subquery_InPredicate* in_predicate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subquery_type();
  if (in_predicate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      in_predicate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, in_predicate, submessage_arena);
    }
    set_has_in_predicate();
    subquery_type_.in_predicate_ = in_predicate;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Subquery.in_predicate)
}
void Expression_Subquery::set_allocated_set_predicate(::substrait::Expression_Subquery_SetPredicate* set_predicate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subquery_type();
  if (set_predicate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_predicate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_predicate, submessage_arena);
    }
    set_has_set_predicate();
    subquery_type_.set_predicate_ = set_predicate;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Subquery.set_predicate)
}
void Expression_Subquery::set_allocated_set_comparison(::substrait::Expression_Subquery_SetComparison* set_comparison) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_subquery_type();
  if (set_comparison) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      set_comparison = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, set_comparison, submessage_arena);
    }
    set_has_set_comparison();
    subquery_type_.set_comparison_ = set_comparison;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.Subquery.set_comparison)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression_Subquery::kScalarFieldNumber;
const int Expression_Subquery::kInPredicateFieldNumber;
const int Expression_Subquery::kSetPredicateFieldNumber;
const int Expression_Subquery::kSetComparisonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression_Subquery::Expression_Subquery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression.Subquery)
}
Expression_Subquery::Expression_Subquery(const Expression_Subquery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_subquery_type();
  switch (from.subquery_type_case()) {
    case kScalar: {
      mutable_scalar()->::substrait::Expression_Subquery_Scalar::MergeFrom(from.scalar());
      break;
    }
    case kInPredicate: {
      mutable_in_predicate()->::substrait::Expression_Subquery_InPredicate::MergeFrom(from.in_predicate());
      break;
    }
    case kSetPredicate: {
      mutable_set_predicate()->::substrait::Expression_Subquery_SetPredicate::MergeFrom(from.set_predicate());
      break;
    }
    case kSetComparison: {
      mutable_set_comparison()->::substrait::Expression_Subquery_SetComparison::MergeFrom(from.set_comparison());
      break;
    }
    case SUBQUERY_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression.Subquery)
}

void Expression_Subquery::SharedCtor() {
  clear_has_subquery_type();
}

Expression_Subquery::~Expression_Subquery() {
  // @@protoc_insertion_point(destructor:substrait.Expression.Subquery)
  SharedDtor();
}

void Expression_Subquery::SharedDtor() {
  if (has_subquery_type()) {
    clear_subquery_type();
  }
}

void Expression_Subquery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression_Subquery::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression_Subquery& Expression_Subquery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression_Subquery::clear_subquery_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression.Subquery)
  switch (subquery_type_case()) {
    case kScalar: {
      delete subquery_type_.scalar_;
      break;
    }
    case kInPredicate: {
      delete subquery_type_.in_predicate_;
      break;
    }
    case kSetPredicate: {
      delete subquery_type_.set_predicate_;
      break;
    }
    case kSetComparison: {
      delete subquery_type_.set_comparison_;
      break;
    }
    case SUBQUERY_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUBQUERY_TYPE_NOT_SET;
}


void Expression_Subquery::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression.Subquery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_subquery_type();
  _internal_metadata_.Clear();
}

bool Expression_Subquery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression.Subquery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Subquery.Scalar scalar = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scalar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Subquery.InPredicate in_predicate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_in_predicate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Subquery.SetPredicate set_predicate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_predicate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Subquery.SetComparison set_comparison = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_comparison()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression.Subquery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression.Subquery)
  return false;
#undef DO_
}

void Expression_Subquery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression.Subquery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Subquery.Scalar scalar = 1;
  if (has_scalar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_scalar(), output);
  }

  // .substrait.Expression.Subquery.InPredicate in_predicate = 2;
  if (has_in_predicate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_in_predicate(), output);
  }

  // .substrait.Expression.Subquery.SetPredicate set_predicate = 3;
  if (has_set_predicate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_set_predicate(), output);
  }

  // .substrait.Expression.Subquery.SetComparison set_comparison = 4;
  if (has_set_comparison()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_set_comparison(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression.Subquery)
}

::google::protobuf::uint8* Expression_Subquery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression.Subquery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Subquery.Scalar scalar = 1;
  if (has_scalar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_scalar(), deterministic, target);
  }

  // .substrait.Expression.Subquery.InPredicate in_predicate = 2;
  if (has_in_predicate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_in_predicate(), deterministic, target);
  }

  // .substrait.Expression.Subquery.SetPredicate set_predicate = 3;
  if (has_set_predicate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_set_predicate(), deterministic, target);
  }

  // .substrait.Expression.Subquery.SetComparison set_comparison = 4;
  if (has_set_comparison()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_set_comparison(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression.Subquery)
  return target;
}

size_t Expression_Subquery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression.Subquery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (subquery_type_case()) {
    // .substrait.Expression.Subquery.Scalar scalar = 1;
    case kScalar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subquery_type_.scalar_);
      break;
    }
    // .substrait.Expression.Subquery.InPredicate in_predicate = 2;
    case kInPredicate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subquery_type_.in_predicate_);
      break;
    }
    // .substrait.Expression.Subquery.SetPredicate set_predicate = 3;
    case kSetPredicate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subquery_type_.set_predicate_);
      break;
    }
    // .substrait.Expression.Subquery.SetComparison set_comparison = 4;
    case kSetComparison: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *subquery_type_.set_comparison_);
      break;
    }
    case SUBQUERY_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression_Subquery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression.Subquery)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression_Subquery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression_Subquery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression.Subquery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression.Subquery)
    MergeFrom(*source);
  }
}

void Expression_Subquery::MergeFrom(const Expression_Subquery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression.Subquery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.subquery_type_case()) {
    case kScalar: {
      mutable_scalar()->::substrait::Expression_Subquery_Scalar::MergeFrom(from.scalar());
      break;
    }
    case kInPredicate: {
      mutable_in_predicate()->::substrait::Expression_Subquery_InPredicate::MergeFrom(from.in_predicate());
      break;
    }
    case kSetPredicate: {
      mutable_set_predicate()->::substrait::Expression_Subquery_SetPredicate::MergeFrom(from.set_predicate());
      break;
    }
    case kSetComparison: {
      mutable_set_comparison()->::substrait::Expression_Subquery_SetComparison::MergeFrom(from.set_comparison());
      break;
    }
    case SUBQUERY_TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression_Subquery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression.Subquery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression_Subquery::CopyFrom(const Expression_Subquery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression.Subquery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression_Subquery::IsInitialized() const {
  return true;
}

void Expression_Subquery::Swap(Expression_Subquery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression_Subquery::InternalSwap(Expression_Subquery* other) {
  using std::swap;
  swap(subquery_type_, other->subquery_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression_Subquery::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression::InitAsDefaultInstance() {
  ::substrait::_Expression_default_instance_.literal_ = const_cast< ::substrait::Expression_Literal*>(
      ::substrait::Expression_Literal::internal_default_instance());
  ::substrait::_Expression_default_instance_.selection_ = const_cast< ::substrait::Expression_FieldReference*>(
      ::substrait::Expression_FieldReference::internal_default_instance());
  ::substrait::_Expression_default_instance_.scalar_function_ = const_cast< ::substrait::Expression_ScalarFunction*>(
      ::substrait::Expression_ScalarFunction::internal_default_instance());
  ::substrait::_Expression_default_instance_.window_function_ = const_cast< ::substrait::Expression_WindowFunction*>(
      ::substrait::Expression_WindowFunction::internal_default_instance());
  ::substrait::_Expression_default_instance_.if_then_ = const_cast< ::substrait::Expression_IfThen*>(
      ::substrait::Expression_IfThen::internal_default_instance());
  ::substrait::_Expression_default_instance_.switch_expression_ = const_cast< ::substrait::Expression_SwitchExpression*>(
      ::substrait::Expression_SwitchExpression::internal_default_instance());
  ::substrait::_Expression_default_instance_.singular_or_list_ = const_cast< ::substrait::Expression_SingularOrList*>(
      ::substrait::Expression_SingularOrList::internal_default_instance());
  ::substrait::_Expression_default_instance_.multi_or_list_ = const_cast< ::substrait::Expression_MultiOrList*>(
      ::substrait::Expression_MultiOrList::internal_default_instance());
  ::substrait::_Expression_default_instance_.cast_ = const_cast< ::substrait::Expression_Cast*>(
      ::substrait::Expression_Cast::internal_default_instance());
  ::substrait::_Expression_default_instance_.subquery_ = const_cast< ::substrait::Expression_Subquery*>(
      ::substrait::Expression_Subquery::internal_default_instance());
  ::substrait::_Expression_default_instance_.nested_ = const_cast< ::substrait::Expression_Nested*>(
      ::substrait::Expression_Nested::internal_default_instance());
  ::substrait::_Expression_default_instance_.enum__ = const_cast< ::substrait::Expression_Enum*>(
      ::substrait::Expression_Enum::internal_default_instance());
}
void Expression::set_allocated_literal(::substrait::Expression_Literal* literal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (literal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      literal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, literal, submessage_arena);
    }
    set_has_literal();
    rex_type_.literal_ = literal;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.literal)
}
void Expression::set_allocated_selection(::substrait::Expression_FieldReference* selection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (selection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selection, submessage_arena);
    }
    set_has_selection();
    rex_type_.selection_ = selection;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.selection)
}
void Expression::set_allocated_scalar_function(::substrait::Expression_ScalarFunction* scalar_function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (scalar_function) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scalar_function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scalar_function, submessage_arena);
    }
    set_has_scalar_function();
    rex_type_.scalar_function_ = scalar_function;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.scalar_function)
}
void Expression::set_allocated_window_function(::substrait::Expression_WindowFunction* window_function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (window_function) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      window_function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, window_function, submessage_arena);
    }
    set_has_window_function();
    rex_type_.window_function_ = window_function;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.window_function)
}
void Expression::set_allocated_if_then(::substrait::Expression_IfThen* if_then) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (if_then) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      if_then = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, if_then, submessage_arena);
    }
    set_has_if_then();
    rex_type_.if_then_ = if_then;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.if_then)
}
void Expression::set_allocated_switch_expression(::substrait::Expression_SwitchExpression* switch_expression) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (switch_expression) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      switch_expression = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, switch_expression, submessage_arena);
    }
    set_has_switch_expression();
    rex_type_.switch_expression_ = switch_expression;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.switch_expression)
}
void Expression::set_allocated_singular_or_list(::substrait::Expression_SingularOrList* singular_or_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (singular_or_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      singular_or_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, singular_or_list, submessage_arena);
    }
    set_has_singular_or_list();
    rex_type_.singular_or_list_ = singular_or_list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.singular_or_list)
}
void Expression::set_allocated_multi_or_list(::substrait::Expression_MultiOrList* multi_or_list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (multi_or_list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      multi_or_list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, multi_or_list, submessage_arena);
    }
    set_has_multi_or_list();
    rex_type_.multi_or_list_ = multi_or_list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.multi_or_list)
}
void Expression::set_allocated_cast(::substrait::Expression_Cast* cast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (cast) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cast, submessage_arena);
    }
    set_has_cast();
    rex_type_.cast_ = cast;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.cast)
}
void Expression::set_allocated_subquery(::substrait::Expression_Subquery* subquery) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (subquery) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subquery = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subquery, submessage_arena);
    }
    set_has_subquery();
    rex_type_.subquery_ = subquery;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.subquery)
}
void Expression::set_allocated_nested(::substrait::Expression_Nested* nested) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (nested) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nested = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nested, submessage_arena);
    }
    set_has_nested();
    rex_type_.nested_ = nested;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.nested)
}
void Expression::set_allocated_enum_(::substrait::Expression_Enum* enum_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_rex_type();
  if (enum_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enum_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enum_, submessage_arena);
    }
    set_has_enum_();
    rex_type_.enum__ = enum_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Expression.enum)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kLiteralFieldNumber;
const int Expression::kSelectionFieldNumber;
const int Expression::kScalarFunctionFieldNumber;
const int Expression::kWindowFunctionFieldNumber;
const int Expression::kIfThenFieldNumber;
const int Expression::kSwitchExpressionFieldNumber;
const int Expression::kSingularOrListFieldNumber;
const int Expression::kMultiOrListFieldNumber;
const int Expression::kCastFieldNumber;
const int Expression::kSubqueryFieldNumber;
const int Expression::kNestedFieldNumber;
const int Expression::kEnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_rex_type();
  switch (from.rex_type_case()) {
    case kLiteral: {
      mutable_literal()->::substrait::Expression_Literal::MergeFrom(from.literal());
      break;
    }
    case kSelection: {
      mutable_selection()->::substrait::Expression_FieldReference::MergeFrom(from.selection());
      break;
    }
    case kScalarFunction: {
      mutable_scalar_function()->::substrait::Expression_ScalarFunction::MergeFrom(from.scalar_function());
      break;
    }
    case kWindowFunction: {
      mutable_window_function()->::substrait::Expression_WindowFunction::MergeFrom(from.window_function());
      break;
    }
    case kIfThen: {
      mutable_if_then()->::substrait::Expression_IfThen::MergeFrom(from.if_then());
      break;
    }
    case kSwitchExpression: {
      mutable_switch_expression()->::substrait::Expression_SwitchExpression::MergeFrom(from.switch_expression());
      break;
    }
    case kSingularOrList: {
      mutable_singular_or_list()->::substrait::Expression_SingularOrList::MergeFrom(from.singular_or_list());
      break;
    }
    case kMultiOrList: {
      mutable_multi_or_list()->::substrait::Expression_MultiOrList::MergeFrom(from.multi_or_list());
      break;
    }
    case kCast: {
      mutable_cast()->::substrait::Expression_Cast::MergeFrom(from.cast());
      break;
    }
    case kSubquery: {
      mutable_subquery()->::substrait::Expression_Subquery::MergeFrom(from.subquery());
      break;
    }
    case kNested: {
      mutable_nested()->::substrait::Expression_Nested::MergeFrom(from.nested());
      break;
    }
    case kEnum: {
      mutable_enum_()->::substrait::Expression_Enum::MergeFrom(from.enum_());
      break;
    }
    case REX_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Expression)
}

void Expression::SharedCtor() {
  clear_has_rex_type();
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:substrait.Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
  if (has_rex_type()) {
    clear_rex_type();
  }
}

void Expression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression& Expression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void Expression::clear_rex_type() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Expression)
  switch (rex_type_case()) {
    case kLiteral: {
      delete rex_type_.literal_;
      break;
    }
    case kSelection: {
      delete rex_type_.selection_;
      break;
    }
    case kScalarFunction: {
      delete rex_type_.scalar_function_;
      break;
    }
    case kWindowFunction: {
      delete rex_type_.window_function_;
      break;
    }
    case kIfThen: {
      delete rex_type_.if_then_;
      break;
    }
    case kSwitchExpression: {
      delete rex_type_.switch_expression_;
      break;
    }
    case kSingularOrList: {
      delete rex_type_.singular_or_list_;
      break;
    }
    case kMultiOrList: {
      delete rex_type_.multi_or_list_;
      break;
    }
    case kCast: {
      delete rex_type_.cast_;
      break;
    }
    case kSubquery: {
      delete rex_type_.subquery_;
      break;
    }
    case kNested: {
      delete rex_type_.nested_;
      break;
    }
    case kEnum: {
      delete rex_type_.enum__;
      break;
    }
    case REX_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REX_TYPE_NOT_SET;
}


void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_rex_type();
  _internal_metadata_.Clear();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Expression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression.Literal literal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_literal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.FieldReference selection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.ScalarFunction scalar_function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scalar_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.WindowFunction window_function = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_window_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.IfThen if_then = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_if_then()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.SwitchExpression switch_expression = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_switch_expression()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.SingularOrList singular_or_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_singular_or_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.MultiOrList multi_or_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multi_or_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Enum enum = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enum_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Cast cast = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Subquery subquery = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subquery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Expression.Nested nested = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nested()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal literal = 1;
  if (has_literal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_literal(), output);
  }

  // .substrait.Expression.FieldReference selection = 2;
  if (has_selection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_selection(), output);
  }

  // .substrait.Expression.ScalarFunction scalar_function = 3;
  if (has_scalar_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_scalar_function(), output);
  }

  // .substrait.Expression.WindowFunction window_function = 5;
  if (has_window_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_window_function(), output);
  }

  // .substrait.Expression.IfThen if_then = 6;
  if (has_if_then()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_if_then(), output);
  }

  // .substrait.Expression.SwitchExpression switch_expression = 7;
  if (has_switch_expression()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_switch_expression(), output);
  }

  // .substrait.Expression.SingularOrList singular_or_list = 8;
  if (has_singular_or_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_singular_or_list(), output);
  }

  // .substrait.Expression.MultiOrList multi_or_list = 9;
  if (has_multi_or_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_multi_or_list(), output);
  }

  // .substrait.Expression.Enum enum = 10 [deprecated = true];
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_enum_(), output);
  }

  // .substrait.Expression.Cast cast = 11;
  if (has_cast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_cast(), output);
  }

  // .substrait.Expression.Subquery subquery = 12;
  if (has_subquery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_subquery(), output);
  }

  // .substrait.Expression.Nested nested = 13;
  if (has_nested()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_nested(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression.Literal literal = 1;
  if (has_literal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_literal(), deterministic, target);
  }

  // .substrait.Expression.FieldReference selection = 2;
  if (has_selection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_selection(), deterministic, target);
  }

  // .substrait.Expression.ScalarFunction scalar_function = 3;
  if (has_scalar_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_scalar_function(), deterministic, target);
  }

  // .substrait.Expression.WindowFunction window_function = 5;
  if (has_window_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_window_function(), deterministic, target);
  }

  // .substrait.Expression.IfThen if_then = 6;
  if (has_if_then()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_if_then(), deterministic, target);
  }

  // .substrait.Expression.SwitchExpression switch_expression = 7;
  if (has_switch_expression()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_switch_expression(), deterministic, target);
  }

  // .substrait.Expression.SingularOrList singular_or_list = 8;
  if (has_singular_or_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_singular_or_list(), deterministic, target);
  }

  // .substrait.Expression.MultiOrList multi_or_list = 9;
  if (has_multi_or_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_multi_or_list(), deterministic, target);
  }

  // .substrait.Expression.Enum enum = 10 [deprecated = true];
  if (has_enum_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_enum_(), deterministic, target);
  }

  // .substrait.Expression.Cast cast = 11;
  if (has_cast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_cast(), deterministic, target);
  }

  // .substrait.Expression.Subquery subquery = 12;
  if (has_subquery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_subquery(), deterministic, target);
  }

  // .substrait.Expression.Nested nested = 13;
  if (has_nested()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_nested(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Expression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (rex_type_case()) {
    // .substrait.Expression.Literal literal = 1;
    case kLiteral: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.literal_);
      break;
    }
    // .substrait.Expression.FieldReference selection = 2;
    case kSelection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.selection_);
      break;
    }
    // .substrait.Expression.ScalarFunction scalar_function = 3;
    case kScalarFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.scalar_function_);
      break;
    }
    // .substrait.Expression.WindowFunction window_function = 5;
    case kWindowFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.window_function_);
      break;
    }
    // .substrait.Expression.IfThen if_then = 6;
    case kIfThen: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.if_then_);
      break;
    }
    // .substrait.Expression.SwitchExpression switch_expression = 7;
    case kSwitchExpression: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.switch_expression_);
      break;
    }
    // .substrait.Expression.SingularOrList singular_or_list = 8;
    case kSingularOrList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.singular_or_list_);
      break;
    }
    // .substrait.Expression.MultiOrList multi_or_list = 9;
    case kMultiOrList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.multi_or_list_);
      break;
    }
    // .substrait.Expression.Cast cast = 11;
    case kCast: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.cast_);
      break;
    }
    // .substrait.Expression.Subquery subquery = 12;
    case kSubquery: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.subquery_);
      break;
    }
    // .substrait.Expression.Nested nested = 13;
    case kNested: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.nested_);
      break;
    }
    // .substrait.Expression.Enum enum = 10 [deprecated = true];
    case kEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rex_type_.enum__);
      break;
    }
    case REX_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.rex_type_case()) {
    case kLiteral: {
      mutable_literal()->::substrait::Expression_Literal::MergeFrom(from.literal());
      break;
    }
    case kSelection: {
      mutable_selection()->::substrait::Expression_FieldReference::MergeFrom(from.selection());
      break;
    }
    case kScalarFunction: {
      mutable_scalar_function()->::substrait::Expression_ScalarFunction::MergeFrom(from.scalar_function());
      break;
    }
    case kWindowFunction: {
      mutable_window_function()->::substrait::Expression_WindowFunction::MergeFrom(from.window_function());
      break;
    }
    case kIfThen: {
      mutable_if_then()->::substrait::Expression_IfThen::MergeFrom(from.if_then());
      break;
    }
    case kSwitchExpression: {
      mutable_switch_expression()->::substrait::Expression_SwitchExpression::MergeFrom(from.switch_expression());
      break;
    }
    case kSingularOrList: {
      mutable_singular_or_list()->::substrait::Expression_SingularOrList::MergeFrom(from.singular_or_list());
      break;
    }
    case kMultiOrList: {
      mutable_multi_or_list()->::substrait::Expression_MultiOrList::MergeFrom(from.multi_or_list());
      break;
    }
    case kCast: {
      mutable_cast()->::substrait::Expression_Cast::MergeFrom(from.cast());
      break;
    }
    case kSubquery: {
      mutable_subquery()->::substrait::Expression_Subquery::MergeFrom(from.subquery());
      break;
    }
    case kNested: {
      mutable_nested()->::substrait::Expression_Nested::MergeFrom(from.nested());
      break;
    }
    case kEnum: {
      mutable_enum_()->::substrait::Expression_Enum::MergeFrom(from.enum_());
      break;
    }
    case REX_TYPE_NOT_SET: {
      break;
    }
  }
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  using std::swap;
  swap(rex_type_, other->rex_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SortField::InitAsDefaultInstance() {
  ::substrait::_SortField_default_instance_._instance.get_mutable()->expr_ = const_cast< ::substrait::Expression*>(
      ::substrait::Expression::internal_default_instance());
  ::substrait::_SortField_default_instance_.direction_ = 0;
  ::substrait::_SortField_default_instance_.comparison_function_reference_ = 0u;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SortField::kExprFieldNumber;
const int SortField::kDirectionFieldNumber;
const int SortField::kComparisonFunctionReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SortField::SortField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.SortField)
}
SortField::SortField(const SortField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_expr()) {
    expr_ = new ::substrait::Expression(*from.expr_);
  } else {
    expr_ = NULL;
  }
  clear_has_sort_kind();
  switch (from.sort_kind_case()) {
    case kDirection: {
      set_direction(from.direction());
      break;
    }
    case kComparisonFunctionReference: {
      set_comparison_function_reference(from.comparison_function_reference());
      break;
    }
    case SORT_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.SortField)
}

void SortField::SharedCtor() {
  expr_ = NULL;
  clear_has_sort_kind();
}

SortField::~SortField() {
  // @@protoc_insertion_point(destructor:substrait.SortField)
  SharedDtor();
}

void SortField::SharedDtor() {
  if (this != internal_default_instance()) delete expr_;
  if (has_sort_kind()) {
    clear_sort_kind();
  }
}

void SortField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SortField::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SortField& SortField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void SortField::clear_sort_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.SortField)
  switch (sort_kind_case()) {
    case kDirection: {
      // No need to clear
      break;
    }
    case kComparisonFunctionReference: {
      // No need to clear
      break;
    }
    case SORT_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SORT_KIND_NOT_SET;
}


void SortField::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.SortField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && expr_ != NULL) {
    delete expr_;
  }
  expr_ = NULL;
  clear_sort_kind();
  _internal_metadata_.Clear();
}

bool SortField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.SortField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Expression expr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.SortField.SortDirection direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_direction(static_cast< ::substrait::SortField_SortDirection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 comparison_function_reference = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_sort_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_kind_.comparison_function_reference_)));
          set_has_comparison_function_reference();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.SortField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.SortField)
  return false;
#undef DO_
}

void SortField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.SortField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression expr = 1;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_expr(), output);
  }

  // .substrait.SortField.SortDirection direction = 2;
  if (has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->direction(), output);
  }

  // uint32 comparison_function_reference = 3;
  if (has_comparison_function_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->comparison_function_reference(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.SortField)
}

::google::protobuf::uint8* SortField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.SortField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Expression expr = 1;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_expr(), deterministic, target);
  }

  // .substrait.SortField.SortDirection direction = 2;
  if (has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->direction(), target);
  }

  // uint32 comparison_function_reference = 3;
  if (has_comparison_function_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->comparison_function_reference(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.SortField)
  return target;
}

size_t SortField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.SortField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Expression expr = 1;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expr_);
  }

  switch (sort_kind_case()) {
    // .substrait.SortField.SortDirection direction = 2;
    case kDirection: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->direction());
      break;
    }
    // uint32 comparison_function_reference = 3;
    case kComparisonFunctionReference: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->comparison_function_reference());
      break;
    }
    case SORT_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SortField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.SortField)
  GOOGLE_DCHECK_NE(&from, this);
  const SortField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SortField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.SortField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.SortField)
    MergeFrom(*source);
  }
}

void SortField::MergeFrom(const SortField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.SortField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expr()) {
    mutable_expr()->::substrait::Expression::MergeFrom(from.expr());
  }
  switch (from.sort_kind_case()) {
    case kDirection: {
      set_direction(from.direction());
      break;
    }
    case kComparisonFunctionReference: {
      set_comparison_function_reference(from.comparison_function_reference());
      break;
    }
    case SORT_KIND_NOT_SET: {
      break;
    }
  }
}

void SortField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.SortField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SortField::CopyFrom(const SortField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.SortField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SortField::IsInitialized() const {
  return true;
}

void SortField::Swap(SortField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SortField::InternalSwap(SortField* other) {
  using std::swap;
  swap(expr_, other->expr_);
  swap(sort_kind_, other->sort_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SortField::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggregateFunction_ReferenceRel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggregateFunction_ReferenceRel::kSubtreeOrdinalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregateFunction_ReferenceRel::AggregateFunction_ReferenceRel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction_ReferenceRel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.AggregateFunction.ReferenceRel)
}
AggregateFunction_ReferenceRel::AggregateFunction_ReferenceRel(const AggregateFunction_ReferenceRel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subtree_ordinal_ = from.subtree_ordinal_;
  // @@protoc_insertion_point(copy_constructor:substrait.AggregateFunction.ReferenceRel)
}

void AggregateFunction_ReferenceRel::SharedCtor() {
  subtree_ordinal_ = 0;
}

AggregateFunction_ReferenceRel::~AggregateFunction_ReferenceRel() {
  // @@protoc_insertion_point(destructor:substrait.AggregateFunction.ReferenceRel)
  SharedDtor();
}

void AggregateFunction_ReferenceRel::SharedDtor() {
}

void AggregateFunction_ReferenceRel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggregateFunction_ReferenceRel::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregateFunction_ReferenceRel& AggregateFunction_ReferenceRel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction_ReferenceRel.base);
  return *internal_default_instance();
}


void AggregateFunction_ReferenceRel::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.AggregateFunction.ReferenceRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subtree_ordinal_ = 0;
  _internal_metadata_.Clear();
}

bool AggregateFunction_ReferenceRel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.AggregateFunction.ReferenceRel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 subtree_ordinal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subtree_ordinal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.AggregateFunction.ReferenceRel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.AggregateFunction.ReferenceRel)
  return false;
#undef DO_
}

void AggregateFunction_ReferenceRel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.AggregateFunction.ReferenceRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 subtree_ordinal = 1;
  if (this->subtree_ordinal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->subtree_ordinal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.AggregateFunction.ReferenceRel)
}

::google::protobuf::uint8* AggregateFunction_ReferenceRel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.AggregateFunction.ReferenceRel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 subtree_ordinal = 1;
  if (this->subtree_ordinal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->subtree_ordinal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.AggregateFunction.ReferenceRel)
  return target;
}

size_t AggregateFunction_ReferenceRel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.AggregateFunction.ReferenceRel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 subtree_ordinal = 1;
  if (this->subtree_ordinal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subtree_ordinal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregateFunction_ReferenceRel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.AggregateFunction.ReferenceRel)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregateFunction_ReferenceRel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregateFunction_ReferenceRel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.AggregateFunction.ReferenceRel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.AggregateFunction.ReferenceRel)
    MergeFrom(*source);
  }
}

void AggregateFunction_ReferenceRel::MergeFrom(const AggregateFunction_ReferenceRel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.AggregateFunction.ReferenceRel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subtree_ordinal() != 0) {
    set_subtree_ordinal(from.subtree_ordinal());
  }
}

void AggregateFunction_ReferenceRel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.AggregateFunction.ReferenceRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregateFunction_ReferenceRel::CopyFrom(const AggregateFunction_ReferenceRel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.AggregateFunction.ReferenceRel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregateFunction_ReferenceRel::IsInitialized() const {
  return true;
}

void AggregateFunction_ReferenceRel::Swap(AggregateFunction_ReferenceRel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregateFunction_ReferenceRel::InternalSwap(AggregateFunction_ReferenceRel* other) {
  using std::swap;
  swap(subtree_ordinal_, other->subtree_ordinal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggregateFunction_ReferenceRel::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AggregateFunction::InitAsDefaultInstance() {
  ::substrait::_AggregateFunction_default_instance_._instance.get_mutable()->output_type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
}
void AggregateFunction::clear_output_type() {
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AggregateFunction::kFunctionReferenceFieldNumber;
const int AggregateFunction::kArgumentsFieldNumber;
const int AggregateFunction::kOptionsFieldNumber;
const int AggregateFunction::kOutputTypeFieldNumber;
const int AggregateFunction::kPhaseFieldNumber;
const int AggregateFunction::kSortsFieldNumber;
const int AggregateFunction::kInvocationFieldNumber;
const int AggregateFunction::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AggregateFunction::AggregateFunction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.AggregateFunction)
}
AggregateFunction::AggregateFunction(const AggregateFunction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_),
      sorts_(from.sorts_),
      arguments_(from.arguments_),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_type()) {
    output_type_ = new ::substrait::Type(*from.output_type_);
  } else {
    output_type_ = NULL;
  }
  ::memcpy(&function_reference_, &from.function_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&invocation_) -
    reinterpret_cast<char*>(&function_reference_)) + sizeof(invocation_));
  // @@protoc_insertion_point(copy_constructor:substrait.AggregateFunction)
}

void AggregateFunction::SharedCtor() {
  ::memset(&output_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invocation_) -
      reinterpret_cast<char*>(&output_type_)) + sizeof(invocation_));
}

AggregateFunction::~AggregateFunction() {
  // @@protoc_insertion_point(destructor:substrait.AggregateFunction)
  SharedDtor();
}

void AggregateFunction::SharedDtor() {
  if (this != internal_default_instance()) delete output_type_;
}

void AggregateFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AggregateFunction::descriptor() {
  ::protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AggregateFunction& AggregateFunction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2falgebra_2eproto::scc_info_AggregateFunction.base);
  return *internal_default_instance();
}


void AggregateFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.AggregateFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  sorts_.Clear();
  arguments_.Clear();
  options_.Clear();
  if (GetArenaNoVirtual() == NULL && output_type_ != NULL) {
    delete output_type_;
  }
  output_type_ = NULL;
  ::memset(&function_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invocation_) -
      reinterpret_cast<char*>(&function_reference_)) + sizeof(invocation_));
  _internal_metadata_.Clear();
}

bool AggregateFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.AggregateFunction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 function_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Expression args = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.SortField sorts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sorts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.AggregationPhase phase = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_phase(static_cast< ::substrait::AggregationPhase >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type output_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.AggregateFunction.AggregationInvocation invocation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_invocation(static_cast< ::substrait::AggregateFunction_AggregationInvocation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.FunctionArgument arguments = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.FunctionOption options = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.AggregateFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.AggregateFunction)
  return false;
#undef DO_
}

void AggregateFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.AggregateFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->function_reference(), output);
  }

  // repeated .substrait.Expression args = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->args(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.SortField sorts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->sorts(static_cast<int>(i)),
      output);
  }

  // .substrait.AggregationPhase phase = 4;
  if (this->phase() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->phase(), output);
  }

  // .substrait.Type output_type = 5;
  if (this->has_output_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_output_type(), output);
  }

  // .substrait.AggregateFunction.AggregationInvocation invocation = 6;
  if (this->invocation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->invocation(), output);
  }

  // repeated .substrait.FunctionArgument arguments = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->arguments(static_cast<int>(i)),
      output);
  }

  // repeated .substrait.FunctionOption options = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->options(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.AggregateFunction)
}

::google::protobuf::uint8* AggregateFunction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.AggregateFunction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->function_reference(), target);
  }

  // repeated .substrait.Expression args = 2 [deprecated = true];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->args(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.SortField sorts = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sorts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->sorts(static_cast<int>(i)), deterministic, target);
  }

  // .substrait.AggregationPhase phase = 4;
  if (this->phase() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->phase(), target);
  }

  // .substrait.Type output_type = 5;
  if (this->has_output_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_output_type(), deterministic, target);
  }

  // .substrait.AggregateFunction.AggregationInvocation invocation = 6;
  if (this->invocation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->invocation(), target);
  }

  // repeated .substrait.FunctionArgument arguments = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  // repeated .substrait.FunctionOption options = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->options(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.AggregateFunction)
  return target;
}

size_t AggregateFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.AggregateFunction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Expression args = 2 [deprecated = true];
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // repeated .substrait.SortField sorts = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->sorts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sorts(static_cast<int>(i)));
    }
  }

  // repeated .substrait.FunctionArgument arguments = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // repeated .substrait.FunctionOption options = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // .substrait.Type output_type = 5;
  if (this->has_output_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *output_type_);
  }

  // uint32 function_reference = 1;
  if (this->function_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->function_reference());
  }

  // .substrait.AggregationPhase phase = 4;
  if (this->phase() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->phase());
  }

  // .substrait.AggregateFunction.AggregationInvocation invocation = 6;
  if (this->invocation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->invocation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AggregateFunction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.AggregateFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const AggregateFunction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AggregateFunction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.AggregateFunction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.AggregateFunction)
    MergeFrom(*source);
  }
}

void AggregateFunction::MergeFrom(const AggregateFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.AggregateFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  sorts_.MergeFrom(from.sorts_);
  arguments_.MergeFrom(from.arguments_);
  options_.MergeFrom(from.options_);
  if (from.has_output_type()) {
    mutable_output_type()->::substrait::Type::MergeFrom(from.output_type());
  }
  if (from.function_reference() != 0) {
    set_function_reference(from.function_reference());
  }
  if (from.phase() != 0) {
    set_phase(from.phase());
  }
  if (from.invocation() != 0) {
    set_invocation(from.invocation());
  }
}

void AggregateFunction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.AggregateFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AggregateFunction::CopyFrom(const AggregateFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.AggregateFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AggregateFunction::IsInitialized() const {
  return true;
}

void AggregateFunction::Swap(AggregateFunction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AggregateFunction::InternalSwap(AggregateFunction* other) {
  using std::swap;
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  CastToBase(&sorts_)->InternalSwap(CastToBase(&other->sorts_));
  CastToBase(&arguments_)->InternalSwap(CastToBase(&other->arguments_));
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  swap(output_type_, other->output_type_);
  swap(function_reference_, other->function_reference_);
  swap(phase_, other->phase_);
  swap(invocation_, other->invocation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AggregateFunction::GetMetadata() const {
  protobuf_substrait_2falgebra_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2falgebra_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace substrait
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelCommon_Direct* Arena::CreateMaybeMessage< ::substrait::RelCommon_Direct >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelCommon_Direct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelCommon_Emit* Arena::CreateMaybeMessage< ::substrait::RelCommon_Emit >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelCommon_Emit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelCommon_Hint_Stats* Arena::CreateMaybeMessage< ::substrait::RelCommon_Hint_Stats >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelCommon_Hint_Stats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelCommon_Hint_RuntimeConstraint* Arena::CreateMaybeMessage< ::substrait::RelCommon_Hint_RuntimeConstraint >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelCommon_Hint_RuntimeConstraint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelCommon_Hint* Arena::CreateMaybeMessage< ::substrait::RelCommon_Hint >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelCommon_Hint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelCommon* Arena::CreateMaybeMessage< ::substrait::RelCommon >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelCommon >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_NamedTable* Arena::CreateMaybeMessage< ::substrait::ReadRel_NamedTable >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_NamedTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_VirtualTable* Arena::CreateMaybeMessage< ::substrait::ReadRel_VirtualTable >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_VirtualTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_ExtensionTable* Arena::CreateMaybeMessage< ::substrait::ReadRel_ExtensionTable >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_ExtensionTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions* Arena::CreateMaybeMessage< ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions* Arena::CreateMaybeMessage< ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions* Arena::CreateMaybeMessage< ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_LocalFiles_FileOrFiles_OrcReadOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions* Arena::CreateMaybeMessage< ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_LocalFiles_FileOrFiles* Arena::CreateMaybeMessage< ::substrait::ReadRel_LocalFiles_FileOrFiles >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_LocalFiles_FileOrFiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel_LocalFiles* Arena::CreateMaybeMessage< ::substrait::ReadRel_LocalFiles >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel_LocalFiles >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ReadRel* Arena::CreateMaybeMessage< ::substrait::ReadRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ReadRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ProjectRel* Arena::CreateMaybeMessage< ::substrait::ProjectRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ProjectRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::JoinRel* Arena::CreateMaybeMessage< ::substrait::JoinRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::JoinRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::CrossRel* Arena::CreateMaybeMessage< ::substrait::CrossRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::CrossRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::FetchRel* Arena::CreateMaybeMessage< ::substrait::FetchRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::FetchRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::AggregateRel_Grouping* Arena::CreateMaybeMessage< ::substrait::AggregateRel_Grouping >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::AggregateRel_Grouping >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::AggregateRel_Measure* Arena::CreateMaybeMessage< ::substrait::AggregateRel_Measure >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::AggregateRel_Measure >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::AggregateRel* Arena::CreateMaybeMessage< ::substrait::AggregateRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::AggregateRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::SortRel* Arena::CreateMaybeMessage< ::substrait::SortRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::SortRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::FilterRel* Arena::CreateMaybeMessage< ::substrait::FilterRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::FilterRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::SetRel* Arena::CreateMaybeMessage< ::substrait::SetRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::SetRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExtensionSingleRel* Arena::CreateMaybeMessage< ::substrait::ExtensionSingleRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExtensionSingleRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExtensionLeafRel* Arena::CreateMaybeMessage< ::substrait::ExtensionLeafRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExtensionLeafRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExtensionMultiRel* Arena::CreateMaybeMessage< ::substrait::ExtensionMultiRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExtensionMultiRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel_ScatterFields* Arena::CreateMaybeMessage< ::substrait::ExchangeRel_ScatterFields >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel_ScatterFields >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel_SingleBucketExpression* Arena::CreateMaybeMessage< ::substrait::ExchangeRel_SingleBucketExpression >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel_SingleBucketExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel_MultiBucketExpression* Arena::CreateMaybeMessage< ::substrait::ExchangeRel_MultiBucketExpression >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel_MultiBucketExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel_Broadcast* Arena::CreateMaybeMessage< ::substrait::ExchangeRel_Broadcast >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel_Broadcast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel_RoundRobin* Arena::CreateMaybeMessage< ::substrait::ExchangeRel_RoundRobin >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel_RoundRobin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel_ExchangeTarget* Arena::CreateMaybeMessage< ::substrait::ExchangeRel_ExchangeTarget >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel_ExchangeTarget >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExchangeRel* Arena::CreateMaybeMessage< ::substrait::ExchangeRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExchangeRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::RelRoot* Arena::CreateMaybeMessage< ::substrait::RelRoot >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::RelRoot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Rel* Arena::CreateMaybeMessage< ::substrait::Rel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Rel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::NamedObjectWrite* Arena::CreateMaybeMessage< ::substrait::NamedObjectWrite >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::NamedObjectWrite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::ExtensionObject* Arena::CreateMaybeMessage< ::substrait::ExtensionObject >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::ExtensionObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::DdlRel* Arena::CreateMaybeMessage< ::substrait::DdlRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::DdlRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::WriteRel* Arena::CreateMaybeMessage< ::substrait::WriteRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::WriteRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::HashJoinRel* Arena::CreateMaybeMessage< ::substrait::HashJoinRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::HashJoinRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::MergeJoinRel* Arena::CreateMaybeMessage< ::substrait::MergeJoinRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::MergeJoinRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::FunctionArgument* Arena::CreateMaybeMessage< ::substrait::FunctionArgument >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::FunctionArgument >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::FunctionOption* Arena::CreateMaybeMessage< ::substrait::FunctionOption >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::FunctionOption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Enum_Empty* Arena::CreateMaybeMessage< ::substrait::Expression_Enum_Empty >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Enum_Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Enum* Arena::CreateMaybeMessage< ::substrait::Expression_Enum >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Enum >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_VarChar* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_VarChar >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_VarChar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_Decimal* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_Decimal >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_Decimal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_Map_KeyValue* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_Map_KeyValue >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_Map_KeyValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_Map* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_Map >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_Map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_IntervalYearToMonth* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_IntervalYearToMonth >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_IntervalYearToMonth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_IntervalDayToSecond* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_IntervalDayToSecond >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_IntervalDayToSecond >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_Struct* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_Struct >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_Struct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_List* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_List >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal_UserDefined* Arena::CreateMaybeMessage< ::substrait::Expression_Literal_UserDefined >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal_UserDefined >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Literal* Arena::CreateMaybeMessage< ::substrait::Expression_Literal >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Literal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Nested_Map_KeyValue* Arena::CreateMaybeMessage< ::substrait::Expression_Nested_Map_KeyValue >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Nested_Map_KeyValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Nested_Map* Arena::CreateMaybeMessage< ::substrait::Expression_Nested_Map >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Nested_Map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Nested_Struct* Arena::CreateMaybeMessage< ::substrait::Expression_Nested_Struct >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Nested_Struct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Nested_List* Arena::CreateMaybeMessage< ::substrait::Expression_Nested_List >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Nested_List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Nested* Arena::CreateMaybeMessage< ::substrait::Expression_Nested >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Nested >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_ScalarFunction* Arena::CreateMaybeMessage< ::substrait::Expression_ScalarFunction >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_ScalarFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_WindowFunction_Bound_Preceding* Arena::CreateMaybeMessage< ::substrait::Expression_WindowFunction_Bound_Preceding >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_WindowFunction_Bound_Preceding >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_WindowFunction_Bound_Following* Arena::CreateMaybeMessage< ::substrait::Expression_WindowFunction_Bound_Following >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_WindowFunction_Bound_Following >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_WindowFunction_Bound_CurrentRow* Arena::CreateMaybeMessage< ::substrait::Expression_WindowFunction_Bound_CurrentRow >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_WindowFunction_Bound_CurrentRow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_WindowFunction_Bound_Unbounded* Arena::CreateMaybeMessage< ::substrait::Expression_WindowFunction_Bound_Unbounded >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_WindowFunction_Bound_Unbounded >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_WindowFunction_Bound* Arena::CreateMaybeMessage< ::substrait::Expression_WindowFunction_Bound >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_WindowFunction_Bound >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_WindowFunction* Arena::CreateMaybeMessage< ::substrait::Expression_WindowFunction >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_WindowFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_IfThen_IfClause* Arena::CreateMaybeMessage< ::substrait::Expression_IfThen_IfClause >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_IfThen_IfClause >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_IfThen* Arena::CreateMaybeMessage< ::substrait::Expression_IfThen >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_IfThen >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Cast* Arena::CreateMaybeMessage< ::substrait::Expression_Cast >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Cast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_SwitchExpression_IfValue* Arena::CreateMaybeMessage< ::substrait::Expression_SwitchExpression_IfValue >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_SwitchExpression_IfValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_SwitchExpression* Arena::CreateMaybeMessage< ::substrait::Expression_SwitchExpression >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_SwitchExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_SingularOrList* Arena::CreateMaybeMessage< ::substrait::Expression_SingularOrList >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_SingularOrList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MultiOrList_Record* Arena::CreateMaybeMessage< ::substrait::Expression_MultiOrList_Record >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MultiOrList_Record >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MultiOrList* Arena::CreateMaybeMessage< ::substrait::Expression_MultiOrList >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MultiOrList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_EmbeddedFunction_PythonPickleFunction* Arena::CreateMaybeMessage< ::substrait::Expression_EmbeddedFunction_PythonPickleFunction >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_EmbeddedFunction_PythonPickleFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction* Arena::CreateMaybeMessage< ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_EmbeddedFunction_WebAssemblyFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_EmbeddedFunction* Arena::CreateMaybeMessage< ::substrait::Expression_EmbeddedFunction >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_EmbeddedFunction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_ReferenceSegment_MapKey* Arena::CreateMaybeMessage< ::substrait::Expression_ReferenceSegment_MapKey >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_ReferenceSegment_MapKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_ReferenceSegment_StructField* Arena::CreateMaybeMessage< ::substrait::Expression_ReferenceSegment_StructField >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_ReferenceSegment_StructField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_ReferenceSegment_ListElement* Arena::CreateMaybeMessage< ::substrait::Expression_ReferenceSegment_ListElement >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_ReferenceSegment_ListElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_ReferenceSegment* Arena::CreateMaybeMessage< ::substrait::Expression_ReferenceSegment >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_ReferenceSegment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_Select* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_Select >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_Select >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_StructSelect* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_StructSelect >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_StructSelect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_StructItem* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_StructItem >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_StructItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListElement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_ListSelect_ListSelectItem >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_ListSelect* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_ListSelect >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_ListSelect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_MapSelect_MapKey* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_MapSelect_MapKey >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_MapSelect_MapKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_MapSelect_MapKeyExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression_MapSelect* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression_MapSelect >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression_MapSelect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_MaskExpression* Arena::CreateMaybeMessage< ::substrait::Expression_MaskExpression >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_MaskExpression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_FieldReference_RootReference* Arena::CreateMaybeMessage< ::substrait::Expression_FieldReference_RootReference >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_FieldReference_RootReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_FieldReference_OuterReference* Arena::CreateMaybeMessage< ::substrait::Expression_FieldReference_OuterReference >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_FieldReference_OuterReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_FieldReference* Arena::CreateMaybeMessage< ::substrait::Expression_FieldReference >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_FieldReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Subquery_Scalar* Arena::CreateMaybeMessage< ::substrait::Expression_Subquery_Scalar >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Subquery_Scalar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Subquery_InPredicate* Arena::CreateMaybeMessage< ::substrait::Expression_Subquery_InPredicate >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Subquery_InPredicate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Subquery_SetPredicate* Arena::CreateMaybeMessage< ::substrait::Expression_Subquery_SetPredicate >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Subquery_SetPredicate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Subquery_SetComparison* Arena::CreateMaybeMessage< ::substrait::Expression_Subquery_SetComparison >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Subquery_SetComparison >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression_Subquery* Arena::CreateMaybeMessage< ::substrait::Expression_Subquery >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression_Subquery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Expression* Arena::CreateMaybeMessage< ::substrait::Expression >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Expression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::SortField* Arena::CreateMaybeMessage< ::substrait::SortField >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::SortField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::AggregateFunction_ReferenceRel* Arena::CreateMaybeMessage< ::substrait::AggregateFunction_ReferenceRel >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::AggregateFunction_ReferenceRel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::AggregateFunction* Arena::CreateMaybeMessage< ::substrait::AggregateFunction >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::AggregateFunction >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
