// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: substrait/type.proto

#include "substrait/type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fempty_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fempty_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Empty;
}  // namespace protobuf_google_2fprotobuf_2fempty_2eproto
namespace protobuf_substrait_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Binary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Boolean;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Date;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Decimal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_FP32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_FP64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_FixedBinary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_FixedChar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_I16;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_I32;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_I64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_I8;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_IntervalDay;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_IntervalYear;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Time;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Timestamp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_TimestampTZ;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_UUID;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_VarChar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_substrait_2ftype_2eproto ::google::protobuf::internal::SCCInfo<21> scc_info_Type;
}  // namespace protobuf_substrait_2ftype_2eproto
namespace substrait {
class Type_BooleanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Boolean>
      _instance;
} _Type_Boolean_default_instance_;
class Type_I8DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_I8>
      _instance;
} _Type_I8_default_instance_;
class Type_I16DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_I16>
      _instance;
} _Type_I16_default_instance_;
class Type_I32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_I32>
      _instance;
} _Type_I32_default_instance_;
class Type_I64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_I64>
      _instance;
} _Type_I64_default_instance_;
class Type_FP32DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_FP32>
      _instance;
} _Type_FP32_default_instance_;
class Type_FP64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_FP64>
      _instance;
} _Type_FP64_default_instance_;
class Type_StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_String>
      _instance;
} _Type_String_default_instance_;
class Type_BinaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Binary>
      _instance;
} _Type_Binary_default_instance_;
class Type_TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Timestamp>
      _instance;
} _Type_Timestamp_default_instance_;
class Type_DateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Date>
      _instance;
} _Type_Date_default_instance_;
class Type_TimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Time>
      _instance;
} _Type_Time_default_instance_;
class Type_TimestampTZDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_TimestampTZ>
      _instance;
} _Type_TimestampTZ_default_instance_;
class Type_IntervalYearDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_IntervalYear>
      _instance;
} _Type_IntervalYear_default_instance_;
class Type_IntervalDayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_IntervalDay>
      _instance;
} _Type_IntervalDay_default_instance_;
class Type_UUIDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_UUID>
      _instance;
} _Type_UUID_default_instance_;
class Type_FixedCharDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_FixedChar>
      _instance;
} _Type_FixedChar_default_instance_;
class Type_VarCharDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_VarChar>
      _instance;
} _Type_VarChar_default_instance_;
class Type_FixedBinaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_FixedBinary>
      _instance;
} _Type_FixedBinary_default_instance_;
class Type_DecimalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Decimal>
      _instance;
} _Type_Decimal_default_instance_;
class Type_StructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Struct>
      _instance;
} _Type_Struct_default_instance_;
class Type_ListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_List>
      _instance;
} _Type_List_default_instance_;
class Type_MapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Map>
      _instance;
} _Type_Map_default_instance_;
class Type_UserDefinedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_UserDefined>
      _instance;
} _Type_UserDefined_default_instance_;
class Type_ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Parameter>
      _instance;
  const ::google::protobuf::Empty* null_;
  const ::substrait::Type* data_type_;
  bool boolean_;
  ::google::protobuf::int64 integer_;
  ::google::protobuf::internal::ArenaStringPtr enum__;
  ::google::protobuf::internal::ArenaStringPtr string_;
} _Type_Parameter_default_instance_;
class TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type>
      _instance;
  const ::substrait::Type_Boolean* bool__;
  const ::substrait::Type_I8* i8_;
  const ::substrait::Type_I16* i16_;
  const ::substrait::Type_I32* i32_;
  const ::substrait::Type_I64* i64_;
  const ::substrait::Type_FP32* fp32_;
  const ::substrait::Type_FP64* fp64_;
  const ::substrait::Type_String* string_;
  const ::substrait::Type_Binary* binary_;
  const ::substrait::Type_Timestamp* timestamp_;
  const ::substrait::Type_Date* date_;
  const ::substrait::Type_Time* time_;
  const ::substrait::Type_IntervalYear* interval_year_;
  const ::substrait::Type_IntervalDay* interval_day_;
  const ::substrait::Type_TimestampTZ* timestamp_tz_;
  const ::substrait::Type_UUID* uuid_;
  const ::substrait::Type_FixedChar* fixed_char_;
  const ::substrait::Type_VarChar* varchar_;
  const ::substrait::Type_FixedBinary* fixed_binary_;
  const ::substrait::Type_Decimal* decimal_;
  const ::substrait::Type_Struct* struct__;
  const ::substrait::Type_List* list_;
  const ::substrait::Type_Map* map_;
  const ::substrait::Type_UserDefined* user_defined_;
  ::google::protobuf::uint32 user_defined_type_reference_;
} _Type_default_instance_;
class NamedStructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NamedStruct>
      _instance;
} _NamedStruct_default_instance_;
}  // namespace substrait
namespace protobuf_substrait_2ftype_2eproto {
static void InitDefaultsType_Boolean() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Boolean_default_instance_;
    new (ptr) ::substrait::Type_Boolean();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Boolean::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Boolean =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Boolean}, {}};

static void InitDefaultsType_I8() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_I8_default_instance_;
    new (ptr) ::substrait::Type_I8();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_I8::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_I8 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_I8}, {}};

static void InitDefaultsType_I16() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_I16_default_instance_;
    new (ptr) ::substrait::Type_I16();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_I16::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_I16 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_I16}, {}};

static void InitDefaultsType_I32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_I32_default_instance_;
    new (ptr) ::substrait::Type_I32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_I32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_I32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_I32}, {}};

static void InitDefaultsType_I64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_I64_default_instance_;
    new (ptr) ::substrait::Type_I64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_I64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_I64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_I64}, {}};

static void InitDefaultsType_FP32() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_FP32_default_instance_;
    new (ptr) ::substrait::Type_FP32();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_FP32::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_FP32 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_FP32}, {}};

static void InitDefaultsType_FP64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_FP64_default_instance_;
    new (ptr) ::substrait::Type_FP64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_FP64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_FP64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_FP64}, {}};

static void InitDefaultsType_String() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_String_default_instance_;
    new (ptr) ::substrait::Type_String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_String}, {}};

static void InitDefaultsType_Binary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Binary_default_instance_;
    new (ptr) ::substrait::Type_Binary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Binary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Binary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Binary}, {}};

static void InitDefaultsType_Timestamp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Timestamp_default_instance_;
    new (ptr) ::substrait::Type_Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Timestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Timestamp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Timestamp}, {}};

static void InitDefaultsType_Date() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Date_default_instance_;
    new (ptr) ::substrait::Type_Date();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Date::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Date =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Date}, {}};

static void InitDefaultsType_Time() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Time_default_instance_;
    new (ptr) ::substrait::Type_Time();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Time::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Time =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Time}, {}};

static void InitDefaultsType_TimestampTZ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_TimestampTZ_default_instance_;
    new (ptr) ::substrait::Type_TimestampTZ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_TimestampTZ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_TimestampTZ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_TimestampTZ}, {}};

static void InitDefaultsType_IntervalYear() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_IntervalYear_default_instance_;
    new (ptr) ::substrait::Type_IntervalYear();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_IntervalYear::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_IntervalYear =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_IntervalYear}, {}};

static void InitDefaultsType_IntervalDay() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_IntervalDay_default_instance_;
    new (ptr) ::substrait::Type_IntervalDay();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_IntervalDay::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_IntervalDay =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_IntervalDay}, {}};

static void InitDefaultsType_UUID() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_UUID_default_instance_;
    new (ptr) ::substrait::Type_UUID();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_UUID::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_UUID =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_UUID}, {}};

static void InitDefaultsType_FixedChar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_FixedChar_default_instance_;
    new (ptr) ::substrait::Type_FixedChar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_FixedChar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_FixedChar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_FixedChar}, {}};

static void InitDefaultsType_VarChar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_VarChar_default_instance_;
    new (ptr) ::substrait::Type_VarChar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_VarChar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_VarChar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_VarChar}, {}};

static void InitDefaultsType_FixedBinary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_FixedBinary_default_instance_;
    new (ptr) ::substrait::Type_FixedBinary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_FixedBinary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_FixedBinary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_FixedBinary}, {}};

static void InitDefaultsType_Decimal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Decimal_default_instance_;
    new (ptr) ::substrait::Type_Decimal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Decimal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Decimal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Decimal}, {}};

static void InitDefaultsType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_Type_Struct_default_instance_;
    new (ptr) ::substrait::Type_Struct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Type_List_default_instance_;
    new (ptr) ::substrait::Type_List();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Type_Map_default_instance_;
    new (ptr) ::substrait::Type_Map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Type_UserDefined_default_instance_;
    new (ptr) ::substrait::Type_UserDefined();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Type_Parameter_default_instance_;
    new (ptr) ::substrait::Type_Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::substrait::_Type_default_instance_;
    new (ptr) ::substrait::Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::Type_Struct::InitAsDefaultInstance();
  ::substrait::Type_List::InitAsDefaultInstance();
  ::substrait::Type_Map::InitAsDefaultInstance();
  ::substrait::Type_UserDefined::InitAsDefaultInstance();
  ::substrait::Type_Parameter::InitAsDefaultInstance();
  ::substrait::Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<21> scc_info_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 21, InitDefaultsType}, {
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Boolean.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I8.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I16.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I32.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I64.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FP32.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FP64.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_String.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Binary.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Timestamp.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Date.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Time.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_IntervalYear.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_IntervalDay.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_TimestampTZ.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_UUID.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FixedChar.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_VarChar.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FixedBinary.base,
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Decimal.base,
      &protobuf_google_2fprotobuf_2fempty_2eproto::scc_info_Empty.base,}};

static void InitDefaultsNamedStruct() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::substrait::_NamedStruct_default_instance_;
    new (ptr) ::substrait::NamedStruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::substrait::NamedStruct::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NamedStruct =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNamedStruct}, {
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Boolean.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_I8.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_I16.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_I32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_I64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_FP32.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_FP64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Binary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Timestamp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Date.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Time.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_TimestampTZ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_IntervalYear.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_IntervalDay.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_UUID.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_FixedChar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_VarChar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_FixedBinary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Decimal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NamedStruct.base);
}

::google::protobuf::Metadata file_level_metadata[27];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Boolean, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Boolean, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Boolean, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I8, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I8, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I8, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I16, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I16, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I16, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I32, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I32, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I64, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_I64, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FP32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FP32, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FP32, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FP64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FP64, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FP64, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_String, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_String, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Binary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Binary, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Binary, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Timestamp, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Timestamp, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Date, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Date, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Date, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Time, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Time, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_TimestampTZ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_TimestampTZ, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_TimestampTZ, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_IntervalYear, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_IntervalYear, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_IntervalYear, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_IntervalDay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_IntervalDay, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_IntervalDay, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UUID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UUID, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UUID, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedChar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedChar, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedChar, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedChar, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_VarChar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_VarChar, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_VarChar, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_VarChar, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedBinary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedBinary, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedBinary, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_FixedBinary, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Decimal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Decimal, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Decimal, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Decimal, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Decimal, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Struct, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Struct, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Struct, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_List, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_List, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_List, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Map, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Map, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Map, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Map, nullability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UserDefined, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UserDefined, type_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UserDefined, type_variation_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UserDefined, nullability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_UserDefined, type_parameters_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Parameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::Type_ParameterDefaultTypeInternal, null_),
  offsetof(::substrait::Type_ParameterDefaultTypeInternal, data_type_),
  offsetof(::substrait::Type_ParameterDefaultTypeInternal, boolean_),
  offsetof(::substrait::Type_ParameterDefaultTypeInternal, integer_),
  offsetof(::substrait::Type_ParameterDefaultTypeInternal, enum__),
  offsetof(::substrait::Type_ParameterDefaultTypeInternal, string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type_Parameter, parameter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::substrait::TypeDefaultTypeInternal, bool__),
  offsetof(::substrait::TypeDefaultTypeInternal, i8_),
  offsetof(::substrait::TypeDefaultTypeInternal, i16_),
  offsetof(::substrait::TypeDefaultTypeInternal, i32_),
  offsetof(::substrait::TypeDefaultTypeInternal, i64_),
  offsetof(::substrait::TypeDefaultTypeInternal, fp32_),
  offsetof(::substrait::TypeDefaultTypeInternal, fp64_),
  offsetof(::substrait::TypeDefaultTypeInternal, string_),
  offsetof(::substrait::TypeDefaultTypeInternal, binary_),
  offsetof(::substrait::TypeDefaultTypeInternal, timestamp_),
  offsetof(::substrait::TypeDefaultTypeInternal, date_),
  offsetof(::substrait::TypeDefaultTypeInternal, time_),
  offsetof(::substrait::TypeDefaultTypeInternal, interval_year_),
  offsetof(::substrait::TypeDefaultTypeInternal, interval_day_),
  offsetof(::substrait::TypeDefaultTypeInternal, timestamp_tz_),
  offsetof(::substrait::TypeDefaultTypeInternal, uuid_),
  offsetof(::substrait::TypeDefaultTypeInternal, fixed_char_),
  offsetof(::substrait::TypeDefaultTypeInternal, varchar_),
  offsetof(::substrait::TypeDefaultTypeInternal, fixed_binary_),
  offsetof(::substrait::TypeDefaultTypeInternal, decimal_),
  offsetof(::substrait::TypeDefaultTypeInternal, struct__),
  offsetof(::substrait::TypeDefaultTypeInternal, list_),
  offsetof(::substrait::TypeDefaultTypeInternal, map_),
  offsetof(::substrait::TypeDefaultTypeInternal, user_defined_),
  offsetof(::substrait::TypeDefaultTypeInternal, user_defined_type_reference_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::Type, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::NamedStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::NamedStruct, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::substrait::NamedStruct, struct__),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::substrait::Type_Boolean)},
  { 7, -1, sizeof(::substrait::Type_I8)},
  { 14, -1, sizeof(::substrait::Type_I16)},
  { 21, -1, sizeof(::substrait::Type_I32)},
  { 28, -1, sizeof(::substrait::Type_I64)},
  { 35, -1, sizeof(::substrait::Type_FP32)},
  { 42, -1, sizeof(::substrait::Type_FP64)},
  { 49, -1, sizeof(::substrait::Type_String)},
  { 56, -1, sizeof(::substrait::Type_Binary)},
  { 63, -1, sizeof(::substrait::Type_Timestamp)},
  { 70, -1, sizeof(::substrait::Type_Date)},
  { 77, -1, sizeof(::substrait::Type_Time)},
  { 84, -1, sizeof(::substrait::Type_TimestampTZ)},
  { 91, -1, sizeof(::substrait::Type_IntervalYear)},
  { 98, -1, sizeof(::substrait::Type_IntervalDay)},
  { 105, -1, sizeof(::substrait::Type_UUID)},
  { 112, -1, sizeof(::substrait::Type_FixedChar)},
  { 120, -1, sizeof(::substrait::Type_VarChar)},
  { 128, -1, sizeof(::substrait::Type_FixedBinary)},
  { 136, -1, sizeof(::substrait::Type_Decimal)},
  { 145, -1, sizeof(::substrait::Type_Struct)},
  { 153, -1, sizeof(::substrait::Type_List)},
  { 161, -1, sizeof(::substrait::Type_Map)},
  { 170, -1, sizeof(::substrait::Type_UserDefined)},
  { 179, -1, sizeof(::substrait::Type_Parameter)},
  { 191, -1, sizeof(::substrait::Type)},
  { 222, -1, sizeof(::substrait::NamedStruct)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Boolean_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_I8_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_I16_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_I32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_I64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_FP32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_FP64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Binary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Date_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Time_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_TimestampTZ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_IntervalYear_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_IntervalDay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_UUID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_FixedChar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_VarChar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_FixedBinary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Decimal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Struct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Map_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_UserDefined_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::substrait::_NamedStruct_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "substrait/type.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 27);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024substrait/type.proto\022\tsubstrait\032\033googl"
      "e/protobuf/empty.proto\"\277\036\n\004Type\022\'\n\004bool\030"
      "\001 \001(\0132\027.substrait.Type.BooleanH\000\022 \n\002i8\030\002"
      " \001(\0132\022.substrait.Type.I8H\000\022\"\n\003i16\030\003 \001(\0132"
      "\023.substrait.Type.I16H\000\022\"\n\003i32\030\005 \001(\0132\023.su"
      "bstrait.Type.I32H\000\022\"\n\003i64\030\007 \001(\0132\023.substr"
      "ait.Type.I64H\000\022$\n\004fp32\030\n \001(\0132\024.substrait"
      ".Type.FP32H\000\022$\n\004fp64\030\013 \001(\0132\024.substrait.T"
      "ype.FP64H\000\022(\n\006string\030\014 \001(\0132\026.substrait.T"
      "ype.StringH\000\022(\n\006binary\030\r \001(\0132\026.substrait"
      ".Type.BinaryH\000\022.\n\ttimestamp\030\016 \001(\0132\031.subs"
      "trait.Type.TimestampH\000\022$\n\004date\030\020 \001(\0132\024.s"
      "ubstrait.Type.DateH\000\022$\n\004time\030\021 \001(\0132\024.sub"
      "strait.Type.TimeH\000\0225\n\rinterval_year\030\023 \001("
      "\0132\034.substrait.Type.IntervalYearH\000\0223\n\014int"
      "erval_day\030\024 \001(\0132\033.substrait.Type.Interva"
      "lDayH\000\0223\n\014timestamp_tz\030\035 \001(\0132\033.substrait"
      ".Type.TimestampTZH\000\022$\n\004uuid\030  \001(\0132\024.subs"
      "trait.Type.UUIDH\000\022/\n\nfixed_char\030\025 \001(\0132\031."
      "substrait.Type.FixedCharH\000\022*\n\007varchar\030\026 "
      "\001(\0132\027.substrait.Type.VarCharH\000\0223\n\014fixed_"
      "binary\030\027 \001(\0132\033.substrait.Type.FixedBinar"
      "yH\000\022*\n\007decimal\030\030 \001(\0132\027.substrait.Type.De"
      "cimalH\000\022(\n\006struct\030\031 \001(\0132\026.substrait.Type"
      ".StructH\000\022$\n\004list\030\033 \001(\0132\024.substrait.Type"
      ".ListH\000\022\"\n\003map\030\034 \001(\0132\023.substrait.Type.Ma"
      "pH\000\0223\n\014user_defined\030\036 \001(\0132\033.substrait.Ty"
      "pe.UserDefinedH\000\022)\n\033user_defined_type_re"
      "ference\030\037 \001(\rB\002\030\001H\000\032]\n\007Boolean\022 \n\030type_v"
      "ariation_reference\030\001 \001(\r\0220\n\013nullability\030"
      "\002 \001(\0162\033.substrait.Type.Nullability\032X\n\002I8"
      "\022 \n\030type_variation_reference\030\001 \001(\r\0220\n\013nu"
      "llability\030\002 \001(\0162\033.substrait.Type.Nullabi"
      "lity\032Y\n\003I16\022 \n\030type_variation_reference\030"
      "\001 \001(\r\0220\n\013nullability\030\002 \001(\0162\033.substrait.T"
      "ype.Nullability\032Y\n\003I32\022 \n\030type_variation"
      "_reference\030\001 \001(\r\0220\n\013nullability\030\002 \001(\0162\033."
      "substrait.Type.Nullability\032Y\n\003I64\022 \n\030typ"
      "e_variation_reference\030\001 \001(\r\0220\n\013nullabili"
      "ty\030\002 \001(\0162\033.substrait.Type.Nullability\032Z\n"
      "\004FP32\022 \n\030type_variation_reference\030\001 \001(\r\022"
      "0\n\013nullability\030\002 \001(\0162\033.substrait.Type.Nu"
      "llability\032Z\n\004FP64\022 \n\030type_variation_refe"
      "rence\030\001 \001(\r\0220\n\013nullability\030\002 \001(\0162\033.subst"
      "rait.Type.Nullability\032\\\n\006String\022 \n\030type_"
      "variation_reference\030\001 \001(\r\0220\n\013nullability"
      "\030\002 \001(\0162\033.substrait.Type.Nullability\032\\\n\006B"
      "inary\022 \n\030type_variation_reference\030\001 \001(\r\022"
      "0\n\013nullability\030\002 \001(\0162\033.substrait.Type.Nu"
      "llability\032_\n\tTimestamp\022 \n\030type_variation"
      "_reference\030\001 \001(\r\0220\n\013nullability\030\002 \001(\0162\033."
      "substrait.Type.Nullability\032Z\n\004Date\022 \n\030ty"
      "pe_variation_reference\030\001 \001(\r\0220\n\013nullabil"
      "ity\030\002 \001(\0162\033.substrait.Type.Nullability\032Z"
      "\n\004Time\022 \n\030type_variation_reference\030\001 \001(\r"
      "\0220\n\013nullability\030\002 \001(\0162\033.substrait.Type.N"
      "ullability\032a\n\013TimestampTZ\022 \n\030type_variat"
      "ion_reference\030\001 \001(\r\0220\n\013nullability\030\002 \001(\016"
      "2\033.substrait.Type.Nullability\032b\n\014Interva"
      "lYear\022 \n\030type_variation_reference\030\001 \001(\r\022"
      "0\n\013nullability\030\002 \001(\0162\033.substrait.Type.Nu"
      "llability\032a\n\013IntervalDay\022 \n\030type_variati"
      "on_reference\030\001 \001(\r\0220\n\013nullability\030\002 \001(\0162"
      "\033.substrait.Type.Nullability\032Z\n\004UUID\022 \n\030"
      "type_variation_reference\030\001 \001(\r\0220\n\013nullab"
      "ility\030\002 \001(\0162\033.substrait.Type.Nullability"
      "\032o\n\tFixedChar\022\016\n\006length\030\001 \001(\005\022 \n\030type_va"
      "riation_reference\030\002 \001(\r\0220\n\013nullability\030\003"
      " \001(\0162\033.substrait.Type.Nullability\032m\n\007Var"
      "Char\022\016\n\006length\030\001 \001(\005\022 \n\030type_variation_r"
      "eference\030\002 \001(\r\0220\n\013nullability\030\003 \001(\0162\033.su"
      "bstrait.Type.Nullability\032q\n\013FixedBinary\022"
      "\016\n\006length\030\001 \001(\005\022 \n\030type_variation_refere"
      "nce\030\002 \001(\r\0220\n\013nullability\030\003 \001(\0162\033.substra"
      "it.Type.Nullability\032\177\n\007Decimal\022\r\n\005scale\030"
      "\001 \001(\005\022\021\n\tprecision\030\002 \001(\005\022 \n\030type_variati"
      "on_reference\030\003 \001(\r\0220\n\013nullability\030\004 \001(\0162"
      "\033.substrait.Type.Nullability\032|\n\006Struct\022\036"
      "\n\005types\030\001 \003(\0132\017.substrait.Type\022 \n\030type_v"
      "ariation_reference\030\002 \001(\r\0220\n\013nullability\030"
      "\003 \001(\0162\033.substrait.Type.Nullability\032y\n\004Li"
      "st\022\035\n\004type\030\001 \001(\0132\017.substrait.Type\022 \n\030typ"
      "e_variation_reference\030\002 \001(\r\0220\n\013nullabili"
      "ty\030\003 \001(\0162\033.substrait.Type.Nullability\032\227\001"
      "\n\003Map\022\034\n\003key\030\001 \001(\0132\017.substrait.Type\022\036\n\005v"
      "alue\030\002 \001(\0132\017.substrait.Type\022 \n\030type_vari"
      "ation_reference\030\003 \001(\r\0220\n\013nullability\030\004 \001"
      "(\0162\033.substrait.Type.Nullability\032\255\001\n\013User"
      "Defined\022\026\n\016type_reference\030\001 \001(\r\022 \n\030type_"
      "variation_reference\030\002 \001(\r\0220\n\013nullability"
      "\030\003 \001(\0162\033.substrait.Type.Nullability\0222\n\017t"
      "ype_parameters\030\004 \003(\0132\031.substrait.Type.Pa"
      "rameter\032\256\001\n\tParameter\022&\n\004null\030\001 \001(\0132\026.go"
      "ogle.protobuf.EmptyH\000\022$\n\tdata_type\030\002 \001(\013"
      "2\017.substrait.TypeH\000\022\021\n\007boolean\030\003 \001(\010H\000\022\021"
      "\n\007integer\030\004 \001(\003H\000\022\016\n\004enum\030\005 \001(\tH\000\022\020\n\006str"
      "ing\030\006 \001(\tH\000B\013\n\tparameter\"^\n\013Nullability\022"
      "\033\n\027NULLABILITY_UNSPECIFIED\020\000\022\030\n\024NULLABIL"
      "ITY_NULLABLE\020\001\022\030\n\024NULLABILITY_REQUIRED\020\002"
      "B\006\n\004kind\"D\n\013NamedStruct\022\r\n\005names\030\001 \003(\t\022&"
      "\n\006struct\030\002 \001(\0132\026.substrait.Type.StructBW"
      "\n\022io.substrait.protoP\001Z*github.com/subst"
      "rait-io/substrait-go/proto\252\002\022Substrait.P"
      "rotobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4135);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "substrait/type.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_substrait_2ftype_2eproto
namespace substrait {
const ::google::protobuf::EnumDescriptor* Type_Nullability_descriptor() {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_substrait_2ftype_2eproto::file_level_enum_descriptors[0];
}
bool Type_Nullability_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_Nullability Type::NULLABILITY_UNSPECIFIED;
const Type_Nullability Type::NULLABILITY_NULLABLE;
const Type_Nullability Type::NULLABILITY_REQUIRED;
const Type_Nullability Type::Nullability_MIN;
const Type_Nullability Type::Nullability_MAX;
const int Type::Nullability_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Type_Boolean::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Boolean::kTypeVariationReferenceFieldNumber;
const int Type_Boolean::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Boolean::Type_Boolean()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Boolean.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Boolean)
}
Type_Boolean::Type_Boolean(const Type_Boolean& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Boolean)
}

void Type_Boolean::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_Boolean::~Type_Boolean() {
  // @@protoc_insertion_point(destructor:substrait.Type.Boolean)
  SharedDtor();
}

void Type_Boolean::SharedDtor() {
}

void Type_Boolean::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Boolean::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Boolean& Type_Boolean::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_Boolean.base);
  return *internal_default_instance();
}


void Type_Boolean::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Boolean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Boolean)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Boolean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Boolean)
  return false;
#undef DO_
}

void Type_Boolean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Boolean)
}

::google::protobuf::uint8* Type_Boolean::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Boolean)
  return target;
}

size_t Type_Boolean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Boolean)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Boolean::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Boolean* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Boolean>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Boolean)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Boolean)
    MergeFrom(*source);
  }
}

void Type_Boolean::MergeFrom(const Type_Boolean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Boolean::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Boolean::CopyFrom(const Type_Boolean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Boolean::IsInitialized() const {
  return true;
}

void Type_Boolean::Swap(Type_Boolean* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Boolean::InternalSwap(Type_Boolean* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Boolean::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_I8::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_I8::kTypeVariationReferenceFieldNumber;
const int Type_I8::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_I8::Type_I8()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I8.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.I8)
}
Type_I8::Type_I8(const Type_I8& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.I8)
}

void Type_I8::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_I8::~Type_I8() {
  // @@protoc_insertion_point(destructor:substrait.Type.I8)
  SharedDtor();
}

void Type_I8::SharedDtor() {
}

void Type_I8::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_I8::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_I8& Type_I8::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_I8.base);
  return *internal_default_instance();
}


void Type_I8::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.I8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_I8::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.I8)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.I8)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.I8)
  return false;
#undef DO_
}

void Type_I8::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.I8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.I8)
}

::google::protobuf::uint8* Type_I8::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.I8)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.I8)
  return target;
}

size_t Type_I8::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.I8)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_I8::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.I8)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_I8* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_I8>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.I8)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.I8)
    MergeFrom(*source);
  }
}

void Type_I8::MergeFrom(const Type_I8& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.I8)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_I8::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.I8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_I8::CopyFrom(const Type_I8& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.I8)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_I8::IsInitialized() const {
  return true;
}

void Type_I8::Swap(Type_I8* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_I8::InternalSwap(Type_I8* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_I8::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_I16::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_I16::kTypeVariationReferenceFieldNumber;
const int Type_I16::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_I16::Type_I16()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I16.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.I16)
}
Type_I16::Type_I16(const Type_I16& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.I16)
}

void Type_I16::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_I16::~Type_I16() {
  // @@protoc_insertion_point(destructor:substrait.Type.I16)
  SharedDtor();
}

void Type_I16::SharedDtor() {
}

void Type_I16::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_I16::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_I16& Type_I16::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_I16.base);
  return *internal_default_instance();
}


void Type_I16::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.I16)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_I16::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.I16)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.I16)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.I16)
  return false;
#undef DO_
}

void Type_I16::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.I16)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.I16)
}

::google::protobuf::uint8* Type_I16::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.I16)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.I16)
  return target;
}

size_t Type_I16::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.I16)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_I16::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.I16)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_I16* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_I16>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.I16)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.I16)
    MergeFrom(*source);
  }
}

void Type_I16::MergeFrom(const Type_I16& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.I16)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_I16::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.I16)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_I16::CopyFrom(const Type_I16& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.I16)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_I16::IsInitialized() const {
  return true;
}

void Type_I16::Swap(Type_I16* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_I16::InternalSwap(Type_I16* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_I16::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_I32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_I32::kTypeVariationReferenceFieldNumber;
const int Type_I32::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_I32::Type_I32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.I32)
}
Type_I32::Type_I32(const Type_I32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.I32)
}

void Type_I32::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_I32::~Type_I32() {
  // @@protoc_insertion_point(destructor:substrait.Type.I32)
  SharedDtor();
}

void Type_I32::SharedDtor() {
}

void Type_I32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_I32::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_I32& Type_I32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_I32.base);
  return *internal_default_instance();
}


void Type_I32::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.I32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_I32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.I32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.I32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.I32)
  return false;
#undef DO_
}

void Type_I32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.I32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.I32)
}

::google::protobuf::uint8* Type_I32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.I32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.I32)
  return target;
}

size_t Type_I32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.I32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_I32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.I32)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_I32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_I32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.I32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.I32)
    MergeFrom(*source);
  }
}

void Type_I32::MergeFrom(const Type_I32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.I32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_I32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.I32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_I32::CopyFrom(const Type_I32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.I32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_I32::IsInitialized() const {
  return true;
}

void Type_I32::Swap(Type_I32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_I32::InternalSwap(Type_I32* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_I32::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_I64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_I64::kTypeVariationReferenceFieldNumber;
const int Type_I64::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_I64::Type_I64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_I64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.I64)
}
Type_I64::Type_I64(const Type_I64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.I64)
}

void Type_I64::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_I64::~Type_I64() {
  // @@protoc_insertion_point(destructor:substrait.Type.I64)
  SharedDtor();
}

void Type_I64::SharedDtor() {
}

void Type_I64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_I64::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_I64& Type_I64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_I64.base);
  return *internal_default_instance();
}


void Type_I64::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.I64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_I64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.I64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.I64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.I64)
  return false;
#undef DO_
}

void Type_I64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.I64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.I64)
}

::google::protobuf::uint8* Type_I64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.I64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.I64)
  return target;
}

size_t Type_I64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.I64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_I64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.I64)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_I64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_I64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.I64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.I64)
    MergeFrom(*source);
  }
}

void Type_I64::MergeFrom(const Type_I64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.I64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_I64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.I64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_I64::CopyFrom(const Type_I64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.I64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_I64::IsInitialized() const {
  return true;
}

void Type_I64::Swap(Type_I64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_I64::InternalSwap(Type_I64* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_I64::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_FP32::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_FP32::kTypeVariationReferenceFieldNumber;
const int Type_FP32::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_FP32::Type_FP32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FP32.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.FP32)
}
Type_FP32::Type_FP32(const Type_FP32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.FP32)
}

void Type_FP32::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_FP32::~Type_FP32() {
  // @@protoc_insertion_point(destructor:substrait.Type.FP32)
  SharedDtor();
}

void Type_FP32::SharedDtor() {
}

void Type_FP32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_FP32::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_FP32& Type_FP32::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_FP32.base);
  return *internal_default_instance();
}


void Type_FP32::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.FP32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_FP32::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.FP32)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.FP32)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.FP32)
  return false;
#undef DO_
}

void Type_FP32::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.FP32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.FP32)
}

::google::protobuf::uint8* Type_FP32::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.FP32)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.FP32)
  return target;
}

size_t Type_FP32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.FP32)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_FP32::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.FP32)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_FP32* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_FP32>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.FP32)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.FP32)
    MergeFrom(*source);
  }
}

void Type_FP32::MergeFrom(const Type_FP32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.FP32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_FP32::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.FP32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_FP32::CopyFrom(const Type_FP32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.FP32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_FP32::IsInitialized() const {
  return true;
}

void Type_FP32::Swap(Type_FP32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_FP32::InternalSwap(Type_FP32* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_FP32::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_FP64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_FP64::kTypeVariationReferenceFieldNumber;
const int Type_FP64::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_FP64::Type_FP64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FP64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.FP64)
}
Type_FP64::Type_FP64(const Type_FP64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.FP64)
}

void Type_FP64::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_FP64::~Type_FP64() {
  // @@protoc_insertion_point(destructor:substrait.Type.FP64)
  SharedDtor();
}

void Type_FP64::SharedDtor() {
}

void Type_FP64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_FP64::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_FP64& Type_FP64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_FP64.base);
  return *internal_default_instance();
}


void Type_FP64::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.FP64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_FP64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.FP64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.FP64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.FP64)
  return false;
#undef DO_
}

void Type_FP64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.FP64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.FP64)
}

::google::protobuf::uint8* Type_FP64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.FP64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.FP64)
  return target;
}

size_t Type_FP64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.FP64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_FP64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.FP64)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_FP64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_FP64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.FP64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.FP64)
    MergeFrom(*source);
  }
}

void Type_FP64::MergeFrom(const Type_FP64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.FP64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_FP64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.FP64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_FP64::CopyFrom(const Type_FP64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.FP64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_FP64::IsInitialized() const {
  return true;
}

void Type_FP64::Swap(Type_FP64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_FP64::InternalSwap(Type_FP64* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_FP64::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_String::kTypeVariationReferenceFieldNumber;
const int Type_String::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_String::Type_String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.String)
}
Type_String::Type_String(const Type_String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.String)
}

void Type_String::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_String::~Type_String() {
  // @@protoc_insertion_point(destructor:substrait.Type.String)
  SharedDtor();
}

void Type_String::SharedDtor() {
}

void Type_String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_String::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_String& Type_String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_String.base);
  return *internal_default_instance();
}


void Type_String::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.String)
  return false;
#undef DO_
}

void Type_String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.String)
}

::google::protobuf::uint8* Type_String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.String)
  return target;
}

size_t Type_String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.String)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.String)
    MergeFrom(*source);
  }
}

void Type_String::MergeFrom(const Type_String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_String::CopyFrom(const Type_String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_String::IsInitialized() const {
  return true;
}

void Type_String::Swap(Type_String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_String::InternalSwap(Type_String* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_String::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Binary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Binary::kTypeVariationReferenceFieldNumber;
const int Type_Binary::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Binary::Type_Binary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Binary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Binary)
}
Type_Binary::Type_Binary(const Type_Binary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Binary)
}

void Type_Binary::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_Binary::~Type_Binary() {
  // @@protoc_insertion_point(destructor:substrait.Type.Binary)
  SharedDtor();
}

void Type_Binary::SharedDtor() {
}

void Type_Binary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Binary::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Binary& Type_Binary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_Binary.base);
  return *internal_default_instance();
}


void Type_Binary::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Binary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Binary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Binary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Binary)
  return false;
#undef DO_
}

void Type_Binary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Binary)
}

::google::protobuf::uint8* Type_Binary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Binary)
  return target;
}

size_t Type_Binary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Binary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Binary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Binary)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Binary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Binary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Binary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Binary)
    MergeFrom(*source);
  }
}

void Type_Binary::MergeFrom(const Type_Binary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Binary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Binary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Binary::CopyFrom(const Type_Binary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Binary::IsInitialized() const {
  return true;
}

void Type_Binary::Swap(Type_Binary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Binary::InternalSwap(Type_Binary* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Binary::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Timestamp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Timestamp::kTypeVariationReferenceFieldNumber;
const int Type_Timestamp::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Timestamp::Type_Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Timestamp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Timestamp)
}
Type_Timestamp::Type_Timestamp(const Type_Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Timestamp)
}

void Type_Timestamp::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_Timestamp::~Type_Timestamp() {
  // @@protoc_insertion_point(destructor:substrait.Type.Timestamp)
  SharedDtor();
}

void Type_Timestamp::SharedDtor() {
}

void Type_Timestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Timestamp::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Timestamp& Type_Timestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_Timestamp.base);
  return *internal_default_instance();
}


void Type_Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Timestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Timestamp)
  return false;
#undef DO_
}

void Type_Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Timestamp)
}

::google::protobuf::uint8* Type_Timestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Timestamp)
  return target;
}

size_t Type_Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Timestamp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Timestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Timestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Timestamp)
    MergeFrom(*source);
  }
}

void Type_Timestamp::MergeFrom(const Type_Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Timestamp::CopyFrom(const Type_Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Timestamp::IsInitialized() const {
  return true;
}

void Type_Timestamp::Swap(Type_Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Timestamp::InternalSwap(Type_Timestamp* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Timestamp::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Date::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Date::kTypeVariationReferenceFieldNumber;
const int Type_Date::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Date::Type_Date()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Date.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Date)
}
Type_Date::Type_Date(const Type_Date& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Date)
}

void Type_Date::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_Date::~Type_Date() {
  // @@protoc_insertion_point(destructor:substrait.Type.Date)
  SharedDtor();
}

void Type_Date::SharedDtor() {
}

void Type_Date::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Date::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Date& Type_Date::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_Date.base);
  return *internal_default_instance();
}


void Type_Date::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Date::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Date)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Date)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Date)
  return false;
#undef DO_
}

void Type_Date::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Date)
}

::google::protobuf::uint8* Type_Date::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Date)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Date)
  return target;
}

size_t Type_Date::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Date)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Date::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Date)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Date* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Date>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Date)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Date)
    MergeFrom(*source);
  }
}

void Type_Date::MergeFrom(const Type_Date& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Date)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Date::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Date::CopyFrom(const Type_Date& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Date)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Date::IsInitialized() const {
  return true;
}

void Type_Date::Swap(Type_Date* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Date::InternalSwap(Type_Date* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Date::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Time::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Time::kTypeVariationReferenceFieldNumber;
const int Type_Time::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Time::Type_Time()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Time.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Time)
}
Type_Time::Type_Time(const Type_Time& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Time)
}

void Type_Time::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_Time::~Type_Time() {
  // @@protoc_insertion_point(destructor:substrait.Type.Time)
  SharedDtor();
}

void Type_Time::SharedDtor() {
}

void Type_Time::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Time::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Time& Type_Time::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_Time.base);
  return *internal_default_instance();
}


void Type_Time::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Time::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Time)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Time)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Time)
  return false;
#undef DO_
}

void Type_Time::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Time)
}

::google::protobuf::uint8* Type_Time::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Time)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Time)
  return target;
}

size_t Type_Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Time)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Time::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Time)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Time* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Time>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Time)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Time)
    MergeFrom(*source);
  }
}

void Type_Time::MergeFrom(const Type_Time& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Time)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Time::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Time::CopyFrom(const Type_Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Time::IsInitialized() const {
  return true;
}

void Type_Time::Swap(Type_Time* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Time::InternalSwap(Type_Time* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Time::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_TimestampTZ::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_TimestampTZ::kTypeVariationReferenceFieldNumber;
const int Type_TimestampTZ::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_TimestampTZ::Type_TimestampTZ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_TimestampTZ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.TimestampTZ)
}
Type_TimestampTZ::Type_TimestampTZ(const Type_TimestampTZ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.TimestampTZ)
}

void Type_TimestampTZ::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_TimestampTZ::~Type_TimestampTZ() {
  // @@protoc_insertion_point(destructor:substrait.Type.TimestampTZ)
  SharedDtor();
}

void Type_TimestampTZ::SharedDtor() {
}

void Type_TimestampTZ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_TimestampTZ::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_TimestampTZ& Type_TimestampTZ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_TimestampTZ.base);
  return *internal_default_instance();
}


void Type_TimestampTZ::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.TimestampTZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_TimestampTZ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.TimestampTZ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.TimestampTZ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.TimestampTZ)
  return false;
#undef DO_
}

void Type_TimestampTZ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.TimestampTZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.TimestampTZ)
}

::google::protobuf::uint8* Type_TimestampTZ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.TimestampTZ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.TimestampTZ)
  return target;
}

size_t Type_TimestampTZ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.TimestampTZ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_TimestampTZ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.TimestampTZ)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_TimestampTZ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_TimestampTZ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.TimestampTZ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.TimestampTZ)
    MergeFrom(*source);
  }
}

void Type_TimestampTZ::MergeFrom(const Type_TimestampTZ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.TimestampTZ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_TimestampTZ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.TimestampTZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_TimestampTZ::CopyFrom(const Type_TimestampTZ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.TimestampTZ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_TimestampTZ::IsInitialized() const {
  return true;
}

void Type_TimestampTZ::Swap(Type_TimestampTZ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_TimestampTZ::InternalSwap(Type_TimestampTZ* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_TimestampTZ::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_IntervalYear::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_IntervalYear::kTypeVariationReferenceFieldNumber;
const int Type_IntervalYear::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_IntervalYear::Type_IntervalYear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_IntervalYear.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.IntervalYear)
}
Type_IntervalYear::Type_IntervalYear(const Type_IntervalYear& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.IntervalYear)
}

void Type_IntervalYear::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_IntervalYear::~Type_IntervalYear() {
  // @@protoc_insertion_point(destructor:substrait.Type.IntervalYear)
  SharedDtor();
}

void Type_IntervalYear::SharedDtor() {
}

void Type_IntervalYear::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_IntervalYear::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_IntervalYear& Type_IntervalYear::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_IntervalYear.base);
  return *internal_default_instance();
}


void Type_IntervalYear::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.IntervalYear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_IntervalYear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.IntervalYear)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.IntervalYear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.IntervalYear)
  return false;
#undef DO_
}

void Type_IntervalYear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.IntervalYear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.IntervalYear)
}

::google::protobuf::uint8* Type_IntervalYear::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.IntervalYear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.IntervalYear)
  return target;
}

size_t Type_IntervalYear::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.IntervalYear)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_IntervalYear::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.IntervalYear)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_IntervalYear* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_IntervalYear>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.IntervalYear)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.IntervalYear)
    MergeFrom(*source);
  }
}

void Type_IntervalYear::MergeFrom(const Type_IntervalYear& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.IntervalYear)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_IntervalYear::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.IntervalYear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_IntervalYear::CopyFrom(const Type_IntervalYear& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.IntervalYear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_IntervalYear::IsInitialized() const {
  return true;
}

void Type_IntervalYear::Swap(Type_IntervalYear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_IntervalYear::InternalSwap(Type_IntervalYear* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_IntervalYear::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_IntervalDay::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_IntervalDay::kTypeVariationReferenceFieldNumber;
const int Type_IntervalDay::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_IntervalDay::Type_IntervalDay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_IntervalDay.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.IntervalDay)
}
Type_IntervalDay::Type_IntervalDay(const Type_IntervalDay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.IntervalDay)
}

void Type_IntervalDay::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_IntervalDay::~Type_IntervalDay() {
  // @@protoc_insertion_point(destructor:substrait.Type.IntervalDay)
  SharedDtor();
}

void Type_IntervalDay::SharedDtor() {
}

void Type_IntervalDay::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_IntervalDay::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_IntervalDay& Type_IntervalDay::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_IntervalDay.base);
  return *internal_default_instance();
}


void Type_IntervalDay::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.IntervalDay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_IntervalDay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.IntervalDay)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.IntervalDay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.IntervalDay)
  return false;
#undef DO_
}

void Type_IntervalDay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.IntervalDay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.IntervalDay)
}

::google::protobuf::uint8* Type_IntervalDay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.IntervalDay)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.IntervalDay)
  return target;
}

size_t Type_IntervalDay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.IntervalDay)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_IntervalDay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.IntervalDay)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_IntervalDay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_IntervalDay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.IntervalDay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.IntervalDay)
    MergeFrom(*source);
  }
}

void Type_IntervalDay::MergeFrom(const Type_IntervalDay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.IntervalDay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_IntervalDay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.IntervalDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_IntervalDay::CopyFrom(const Type_IntervalDay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.IntervalDay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_IntervalDay::IsInitialized() const {
  return true;
}

void Type_IntervalDay::Swap(Type_IntervalDay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_IntervalDay::InternalSwap(Type_IntervalDay* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_IntervalDay::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_UUID::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_UUID::kTypeVariationReferenceFieldNumber;
const int Type_UUID::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_UUID::Type_UUID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_UUID.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.UUID)
}
Type_UUID::Type_UUID(const Type_UUID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.UUID)
}

void Type_UUID::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_UUID::~Type_UUID() {
  // @@protoc_insertion_point(destructor:substrait.Type.UUID)
  SharedDtor();
}

void Type_UUID::SharedDtor() {
}

void Type_UUID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_UUID::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_UUID& Type_UUID::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_UUID.base);
  return *internal_default_instance();
}


void Type_UUID::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_UUID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.UUID)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_variation_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.UUID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.UUID)
  return false;
#undef DO_
}

void Type_UUID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.UUID)
}

::google::protobuf::uint8* Type_UUID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.UUID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.UUID)
  return target;
}

size_t Type_UUID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.UUID)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type_variation_reference = 1;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 2;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_UUID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_UUID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_UUID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.UUID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.UUID)
    MergeFrom(*source);
  }
}

void Type_UUID::MergeFrom(const Type_UUID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.UUID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_UUID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_UUID::CopyFrom(const Type_UUID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.UUID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_UUID::IsInitialized() const {
  return true;
}

void Type_UUID::Swap(Type_UUID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_UUID::InternalSwap(Type_UUID* other) {
  using std::swap;
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_UUID::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_FixedChar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_FixedChar::kLengthFieldNumber;
const int Type_FixedChar::kTypeVariationReferenceFieldNumber;
const int Type_FixedChar::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_FixedChar::Type_FixedChar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FixedChar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.FixedChar)
}
Type_FixedChar::Type_FixedChar(const Type_FixedChar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.FixedChar)
}

void Type_FixedChar::SharedCtor() {
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
}

Type_FixedChar::~Type_FixedChar() {
  // @@protoc_insertion_point(destructor:substrait.Type.FixedChar)
  SharedDtor();
}

void Type_FixedChar::SharedDtor() {
}

void Type_FixedChar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_FixedChar::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_FixedChar& Type_FixedChar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_FixedChar.base);
  return *internal_default_instance();
}


void Type_FixedChar::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.FixedChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_FixedChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.FixedChar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.FixedChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.FixedChar)
  return false;
#undef DO_
}

void Type_FixedChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.FixedChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.FixedChar)
}

::google::protobuf::uint8* Type_FixedChar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.FixedChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.FixedChar)
  return target;
}

size_t Type_FixedChar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.FixedChar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_FixedChar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.FixedChar)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_FixedChar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_FixedChar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.FixedChar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.FixedChar)
    MergeFrom(*source);
  }
}

void Type_FixedChar::MergeFrom(const Type_FixedChar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.FixedChar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_FixedChar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.FixedChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_FixedChar::CopyFrom(const Type_FixedChar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.FixedChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_FixedChar::IsInitialized() const {
  return true;
}

void Type_FixedChar::Swap(Type_FixedChar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_FixedChar::InternalSwap(Type_FixedChar* other) {
  using std::swap;
  swap(length_, other->length_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_FixedChar::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_VarChar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_VarChar::kLengthFieldNumber;
const int Type_VarChar::kTypeVariationReferenceFieldNumber;
const int Type_VarChar::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_VarChar::Type_VarChar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_VarChar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.VarChar)
}
Type_VarChar::Type_VarChar(const Type_VarChar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.VarChar)
}

void Type_VarChar::SharedCtor() {
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
}

Type_VarChar::~Type_VarChar() {
  // @@protoc_insertion_point(destructor:substrait.Type.VarChar)
  SharedDtor();
}

void Type_VarChar::SharedDtor() {
}

void Type_VarChar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_VarChar::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_VarChar& Type_VarChar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_VarChar.base);
  return *internal_default_instance();
}


void Type_VarChar::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.VarChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_VarChar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.VarChar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.VarChar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.VarChar)
  return false;
#undef DO_
}

void Type_VarChar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.VarChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.VarChar)
}

::google::protobuf::uint8* Type_VarChar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.VarChar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.VarChar)
  return target;
}

size_t Type_VarChar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.VarChar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_VarChar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.VarChar)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_VarChar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_VarChar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.VarChar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.VarChar)
    MergeFrom(*source);
  }
}

void Type_VarChar::MergeFrom(const Type_VarChar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.VarChar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_VarChar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.VarChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_VarChar::CopyFrom(const Type_VarChar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.VarChar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_VarChar::IsInitialized() const {
  return true;
}

void Type_VarChar::Swap(Type_VarChar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_VarChar::InternalSwap(Type_VarChar* other) {
  using std::swap;
  swap(length_, other->length_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_VarChar::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_FixedBinary::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_FixedBinary::kLengthFieldNumber;
const int Type_FixedBinary::kTypeVariationReferenceFieldNumber;
const int Type_FixedBinary::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_FixedBinary::Type_FixedBinary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_FixedBinary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.FixedBinary)
}
Type_FixedBinary::Type_FixedBinary(const Type_FixedBinary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.FixedBinary)
}

void Type_FixedBinary::SharedCtor() {
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
}

Type_FixedBinary::~Type_FixedBinary() {
  // @@protoc_insertion_point(destructor:substrait.Type.FixedBinary)
  SharedDtor();
}

void Type_FixedBinary::SharedDtor() {
}

void Type_FixedBinary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_FixedBinary::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_FixedBinary& Type_FixedBinary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_FixedBinary.base);
  return *internal_default_instance();
}


void Type_FixedBinary::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.FixedBinary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&length_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_FixedBinary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.FixedBinary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 length = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.FixedBinary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.FixedBinary)
  return false;
#undef DO_
}

void Type_FixedBinary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.FixedBinary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.FixedBinary)
}

::google::protobuf::uint8* Type_FixedBinary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.FixedBinary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.FixedBinary)
  return target;
}

size_t Type_FixedBinary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.FixedBinary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_FixedBinary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.FixedBinary)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_FixedBinary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_FixedBinary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.FixedBinary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.FixedBinary)
    MergeFrom(*source);
  }
}

void Type_FixedBinary::MergeFrom(const Type_FixedBinary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.FixedBinary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_FixedBinary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.FixedBinary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_FixedBinary::CopyFrom(const Type_FixedBinary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.FixedBinary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_FixedBinary::IsInitialized() const {
  return true;
}

void Type_FixedBinary::Swap(Type_FixedBinary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_FixedBinary::InternalSwap(Type_FixedBinary* other) {
  using std::swap;
  swap(length_, other->length_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_FixedBinary::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Decimal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Decimal::kScaleFieldNumber;
const int Type_Decimal::kPrecisionFieldNumber;
const int Type_Decimal::kTypeVariationReferenceFieldNumber;
const int Type_Decimal::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Decimal::Type_Decimal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type_Decimal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Decimal)
}
Type_Decimal::Type_Decimal(const Type_Decimal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scale_, &from.scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&scale_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Decimal)
}

void Type_Decimal::SharedCtor() {
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(nullability_));
}

Type_Decimal::~Type_Decimal() {
  // @@protoc_insertion_point(destructor:substrait.Type.Decimal)
  SharedDtor();
}

void Type_Decimal::SharedDtor() {
}

void Type_Decimal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Decimal::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Decimal& Type_Decimal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type_Decimal.base);
  return *internal_default_instance();
}


void Type_Decimal::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Decimal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Decimal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 scale = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Decimal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Decimal)
  return false;
#undef DO_
}

void Type_Decimal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 scale = 1;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scale(), output);
  }

  // int32 precision = 2;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->precision(), output);
  }

  // uint32 type_variation_reference = 3;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 4;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Decimal)
}

::google::protobuf::uint8* Type_Decimal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Decimal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 scale = 1;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scale(), target);
  }

  // int32 precision = 2;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->precision(), target);
  }

  // uint32 type_variation_reference = 3;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 4;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Decimal)
  return target;
}

size_t Type_Decimal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Decimal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 scale = 1;
  if (this->scale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scale());
  }

  // int32 precision = 2;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  // uint32 type_variation_reference = 3;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 4;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Decimal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Decimal)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Decimal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Decimal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Decimal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Decimal)
    MergeFrom(*source);
  }
}

void Type_Decimal::MergeFrom(const Type_Decimal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Decimal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Decimal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Decimal::CopyFrom(const Type_Decimal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Decimal::IsInitialized() const {
  return true;
}

void Type_Decimal::Swap(Type_Decimal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Decimal::InternalSwap(Type_Decimal* other) {
  using std::swap;
  swap(scale_, other->scale_);
  swap(precision_, other->precision_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Decimal::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Struct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Struct::kTypesFieldNumber;
const int Type_Struct::kTypeVariationReferenceFieldNumber;
const int Type_Struct::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Struct::Type_Struct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Struct)
}
Type_Struct::Type_Struct(const Type_Struct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Struct)
}

void Type_Struct::SharedCtor() {
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
}

Type_Struct::~Type_Struct() {
  // @@protoc_insertion_point(destructor:substrait.Type.Struct)
  SharedDtor();
}

void Type_Struct::SharedDtor() {
}

void Type_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Struct::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Struct& Type_Struct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  types_.Clear();
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Struct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Struct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .substrait.Type types = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Struct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Struct)
  return false;
#undef DO_
}

void Type_Struct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Type types = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->types(static_cast<int>(i)),
      output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Struct)
}

::google::protobuf::uint8* Type_Struct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Struct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .substrait.Type types = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->types(static_cast<int>(i)), deterministic, target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Struct)
  return target;
}

size_t Type_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Struct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Type types = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->types(static_cast<int>(i)));
    }
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Struct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Struct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Struct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Struct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Struct)
    MergeFrom(*source);
  }
}

void Type_Struct::MergeFrom(const Type_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Struct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  types_.MergeFrom(from.types_);
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Struct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Struct::CopyFrom(const Type_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Struct::IsInitialized() const {
  return true;
}

void Type_Struct::Swap(Type_Struct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Struct::InternalSwap(Type_Struct* other) {
  using std::swap;
  CastToBase(&types_)->InternalSwap(CastToBase(&other->types_));
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Struct::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_List::InitAsDefaultInstance() {
  ::substrait::_Type_List_default_instance_._instance.get_mutable()->type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_List::kTypeFieldNumber;
const int Type_List::kTypeVariationReferenceFieldNumber;
const int Type_List::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_List::Type_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.List)
}
Type_List::Type_List(const Type_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::substrait::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.List)
}

void Type_List::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_)) + sizeof(nullability_));
}

Type_List::~Type_List() {
  // @@protoc_insertion_point(destructor:substrait.Type.List)
  SharedDtor();
}

void Type_List::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
}

void Type_List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_List::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_List& Type_List::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_List::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.List)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.List)
  return false;
#undef DO_
}

void Type_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_type(), output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.List)
}

::google::protobuf::uint8* Type_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_type(), deterministic, target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.List)
  return target;
}

size_t Type_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.List)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Type type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.List)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.List)
    MergeFrom(*source);
  }
}

void Type_List::MergeFrom(const Type_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    mutable_type()->::substrait::Type::MergeFrom(from.type());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_List::CopyFrom(const Type_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_List::IsInitialized() const {
  return true;
}

void Type_List::Swap(Type_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_List::InternalSwap(Type_List* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_List::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Map::InitAsDefaultInstance() {
  ::substrait::_Type_Map_default_instance_._instance.get_mutable()->key_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_Type_Map_default_instance_._instance.get_mutable()->value_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Map::kKeyFieldNumber;
const int Type_Map::kValueFieldNumber;
const int Type_Map::kTypeVariationReferenceFieldNumber;
const int Type_Map::kNullabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Map::Type_Map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Map)
}
Type_Map::Type_Map(const Type_Map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::substrait::Type(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::substrait::Type(*from.value_);
  } else {
    value_ = NULL;
  }
  ::memcpy(&type_variation_reference_, &from.type_variation_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Map)
}

void Type_Map::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&key_)) + sizeof(nullability_));
}

Type_Map::~Type_Map() {
  // @@protoc_insertion_point(destructor:substrait.Type.Map)
  SharedDtor();
}

void Type_Map::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void Type_Map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Map::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Map& Type_Map::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_Map::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  ::memset(&type_variation_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_variation_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Type key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Map)
  return false;
#undef DO_
}

void Type_Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key(), output);
  }

  // .substrait.Type value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  // uint32 type_variation_reference = 3;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 4;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->nullability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Map)
}

::google::protobuf::uint8* Type_Map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key(), deterministic, target);
  }

  // .substrait.Type value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  // uint32 type_variation_reference = 3;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 4;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->nullability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Map)
  return target;
}

size_t Type_Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .substrait.Type key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .substrait.Type value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // uint32 type_variation_reference = 3;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 4;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Map)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Map)
    MergeFrom(*source);
  }
}

void Type_Map::MergeFrom(const Type_Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::substrait::Type::MergeFrom(from.key());
  }
  if (from.has_value()) {
    mutable_value()->::substrait::Type::MergeFrom(from.value());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Map::CopyFrom(const Type_Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Map::IsInitialized() const {
  return true;
}

void Type_Map::Swap(Type_Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Map::InternalSwap(Type_Map* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_, other->value_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Map::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_UserDefined::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_UserDefined::kTypeReferenceFieldNumber;
const int Type_UserDefined::kTypeVariationReferenceFieldNumber;
const int Type_UserDefined::kNullabilityFieldNumber;
const int Type_UserDefined::kTypeParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_UserDefined::Type_UserDefined()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.UserDefined)
}
Type_UserDefined::Type_UserDefined(const Type_UserDefined& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_parameters_(from.type_parameters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_reference_, &from.type_reference_,
    static_cast<size_t>(reinterpret_cast<char*>(&nullability_) -
    reinterpret_cast<char*>(&type_reference_)) + sizeof(nullability_));
  // @@protoc_insertion_point(copy_constructor:substrait.Type.UserDefined)
}

void Type_UserDefined::SharedCtor() {
  ::memset(&type_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_reference_)) + sizeof(nullability_));
}

Type_UserDefined::~Type_UserDefined() {
  // @@protoc_insertion_point(destructor:substrait.Type.UserDefined)
  SharedDtor();
}

void Type_UserDefined::SharedDtor() {
}

void Type_UserDefined::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_UserDefined::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_UserDefined& Type_UserDefined::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_UserDefined::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_parameters_.Clear();
  ::memset(&type_reference_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nullability_) -
      reinterpret_cast<char*>(&type_reference_)) + sizeof(nullability_));
  _internal_metadata_.Clear();
}

bool Type_UserDefined::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.UserDefined)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type_reference = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type_variation_reference = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_variation_reference_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Nullability nullability = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nullability(static_cast< ::substrait::Type_Nullability >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .substrait.Type.Parameter type_parameters = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.UserDefined)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.UserDefined)
  return false;
#undef DO_
}

void Type_UserDefined::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_reference = 1;
  if (this->type_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type_reference(), output);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type_variation_reference(), output);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->nullability(), output);
  }

  // repeated .substrait.Type.Parameter type_parameters = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->type_parameters(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.UserDefined)
}

::google::protobuf::uint8* Type_UserDefined::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.UserDefined)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type_reference = 1;
  if (this->type_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type_reference(), target);
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type_variation_reference(), target);
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->nullability(), target);
  }

  // repeated .substrait.Type.Parameter type_parameters = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->type_parameters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.UserDefined)
  return target;
}

size_t Type_UserDefined::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.UserDefined)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .substrait.Type.Parameter type_parameters = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->type_parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_parameters(static_cast<int>(i)));
    }
  }

  // uint32 type_reference = 1;
  if (this->type_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_reference());
  }

  // uint32 type_variation_reference = 2;
  if (this->type_variation_reference() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type_variation_reference());
  }

  // .substrait.Type.Nullability nullability = 3;
  if (this->nullability() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nullability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_UserDefined::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.UserDefined)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_UserDefined* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_UserDefined>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.UserDefined)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.UserDefined)
    MergeFrom(*source);
  }
}

void Type_UserDefined::MergeFrom(const Type_UserDefined& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.UserDefined)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_parameters_.MergeFrom(from.type_parameters_);
  if (from.type_reference() != 0) {
    set_type_reference(from.type_reference());
  }
  if (from.type_variation_reference() != 0) {
    set_type_variation_reference(from.type_variation_reference());
  }
  if (from.nullability() != 0) {
    set_nullability(from.nullability());
  }
}

void Type_UserDefined::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.UserDefined)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_UserDefined::CopyFrom(const Type_UserDefined& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.UserDefined)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_UserDefined::IsInitialized() const {
  return true;
}

void Type_UserDefined::Swap(Type_UserDefined* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_UserDefined::InternalSwap(Type_UserDefined* other) {
  using std::swap;
  CastToBase(&type_parameters_)->InternalSwap(CastToBase(&other->type_parameters_));
  swap(type_reference_, other->type_reference_);
  swap(type_variation_reference_, other->type_variation_reference_);
  swap(nullability_, other->nullability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_UserDefined::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Parameter::InitAsDefaultInstance() {
  ::substrait::_Type_Parameter_default_instance_.null_ = const_cast< ::google::protobuf::Empty*>(
      ::google::protobuf::Empty::internal_default_instance());
  ::substrait::_Type_Parameter_default_instance_.data_type_ = const_cast< ::substrait::Type*>(
      ::substrait::Type::internal_default_instance());
  ::substrait::_Type_Parameter_default_instance_.boolean_ = false;
  ::substrait::_Type_Parameter_default_instance_.integer_ = GOOGLE_LONGLONG(0);
  ::substrait::_Type_Parameter_default_instance_.enum__.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::substrait::_Type_Parameter_default_instance_.string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Type_Parameter::set_allocated_null(::google::protobuf::Empty* null) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameter();
  if (null) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(null)->GetArena();
    if (message_arena != submessage_arena) {
      null = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, null, submessage_arena);
    }
    set_has_null();
    parameter_.null_ = null;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.Parameter.null)
}
void Type_Parameter::clear_null() {
  if (has_null()) {
    delete parameter_.null_;
    clear_has_parameter();
  }
}
void Type_Parameter::set_allocated_data_type(::substrait::Type* data_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_parameter();
  if (data_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_type, submessage_arena);
    }
    set_has_data_type();
    parameter_.data_type_ = data_type;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.Parameter.data_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Parameter::kNullFieldNumber;
const int Type_Parameter::kDataTypeFieldNumber;
const int Type_Parameter::kBooleanFieldNumber;
const int Type_Parameter::kIntegerFieldNumber;
const int Type_Parameter::kEnumFieldNumber;
const int Type_Parameter::kStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Parameter::Type_Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type.Parameter)
}
Type_Parameter::Type_Parameter(const Type_Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_parameter();
  switch (from.parameter_case()) {
    case kNull: {
      mutable_null()->::google::protobuf::Empty::MergeFrom(from.null());
      break;
    }
    case kDataType: {
      mutable_data_type()->::substrait::Type::MergeFrom(from.data_type());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kInteger: {
      set_integer(from.integer());
      break;
    }
    case kEnum: {
      set_enum_(from.enum_());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case PARAMETER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Type.Parameter)
}

void Type_Parameter::SharedCtor() {
  clear_has_parameter();
}

Type_Parameter::~Type_Parameter() {
  // @@protoc_insertion_point(destructor:substrait.Type.Parameter)
  SharedDtor();
}

void Type_Parameter::SharedDtor() {
  if (has_parameter()) {
    clear_parameter();
  }
}

void Type_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Parameter::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Parameter& Type_Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_Parameter::clear_parameter() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Type.Parameter)
  switch (parameter_case()) {
    case kNull: {
      delete parameter_.null_;
      break;
    }
    case kDataType: {
      delete parameter_.data_type_;
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kInteger: {
      // No need to clear
      break;
    }
    case kEnum: {
      parameter_.enum__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kString: {
      parameter_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PARAMETER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMETER_NOT_SET;
}


void Type_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_parameter();
  _internal_metadata_.Clear();
}

bool Type_Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Empty null = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_null()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolean = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_parameter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &parameter_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 integer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_parameter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parameter_.integer_)));
          set_has_integer();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string enum = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enum_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->enum_().data(), static_cast<int>(this->enum_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Type.Parameter.enum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.Type.Parameter.string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type.Parameter)
  return false;
#undef DO_
}

void Type_Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Empty null = 1;
  if (has_null()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_null(), output);
  }

  // .substrait.Type data_type = 2;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_data_type(), output);
  }

  // bool boolean = 3;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->boolean(), output);
  }

  // int64 integer = 4;
  if (has_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->integer(), output);
  }

  // string enum = 5;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enum_().data(), static_cast<int>(this->enum_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Type.Parameter.enum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->enum_(), output);
  }

  // string string = 6;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Type.Parameter.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type.Parameter)
}

::google::protobuf::uint8* Type_Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Empty null = 1;
  if (has_null()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_null(), deterministic, target);
  }

  // .substrait.Type data_type = 2;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_data_type(), deterministic, target);
  }

  // bool boolean = 3;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->boolean(), target);
  }

  // int64 integer = 4;
  if (has_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->integer(), target);
  }

  // string enum = 5;
  if (has_enum_()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->enum_().data(), static_cast<int>(this->enum_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Type.Parameter.enum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->enum_(), target);
  }

  // string string = 6;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.Type.Parameter.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->string(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type.Parameter)
  return target;
}

size_t Type_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (parameter_case()) {
    // .google.protobuf.Empty null = 1;
    case kNull: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameter_.null_);
      break;
    }
    // .substrait.Type data_type = 2;
    case kDataType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *parameter_.data_type_);
      break;
    }
    // bool boolean = 3;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // int64 integer = 4;
    case kInteger: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->integer());
      break;
    }
    // string enum = 5;
    case kEnum: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enum_());
      break;
    }
    // string string = 6;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
      break;
    }
    case PARAMETER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type.Parameter)
    MergeFrom(*source);
  }
}

void Type_Parameter::MergeFrom(const Type_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.parameter_case()) {
    case kNull: {
      mutable_null()->::google::protobuf::Empty::MergeFrom(from.null());
      break;
    }
    case kDataType: {
      mutable_data_type()->::substrait::Type::MergeFrom(from.data_type());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kInteger: {
      set_integer(from.integer());
      break;
    }
    case kEnum: {
      set_enum_(from.enum_());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case PARAMETER_NOT_SET: {
      break;
    }
  }
}

void Type_Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Parameter::CopyFrom(const Type_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Parameter::IsInitialized() const {
  return true;
}

void Type_Parameter::Swap(Type_Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Parameter::InternalSwap(Type_Parameter* other) {
  using std::swap;
  swap(parameter_, other->parameter_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Parameter::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type::InitAsDefaultInstance() {
  ::substrait::_Type_default_instance_.bool__ = const_cast< ::substrait::Type_Boolean*>(
      ::substrait::Type_Boolean::internal_default_instance());
  ::substrait::_Type_default_instance_.i8_ = const_cast< ::substrait::Type_I8*>(
      ::substrait::Type_I8::internal_default_instance());
  ::substrait::_Type_default_instance_.i16_ = const_cast< ::substrait::Type_I16*>(
      ::substrait::Type_I16::internal_default_instance());
  ::substrait::_Type_default_instance_.i32_ = const_cast< ::substrait::Type_I32*>(
      ::substrait::Type_I32::internal_default_instance());
  ::substrait::_Type_default_instance_.i64_ = const_cast< ::substrait::Type_I64*>(
      ::substrait::Type_I64::internal_default_instance());
  ::substrait::_Type_default_instance_.fp32_ = const_cast< ::substrait::Type_FP32*>(
      ::substrait::Type_FP32::internal_default_instance());
  ::substrait::_Type_default_instance_.fp64_ = const_cast< ::substrait::Type_FP64*>(
      ::substrait::Type_FP64::internal_default_instance());
  ::substrait::_Type_default_instance_.string_ = const_cast< ::substrait::Type_String*>(
      ::substrait::Type_String::internal_default_instance());
  ::substrait::_Type_default_instance_.binary_ = const_cast< ::substrait::Type_Binary*>(
      ::substrait::Type_Binary::internal_default_instance());
  ::substrait::_Type_default_instance_.timestamp_ = const_cast< ::substrait::Type_Timestamp*>(
      ::substrait::Type_Timestamp::internal_default_instance());
  ::substrait::_Type_default_instance_.date_ = const_cast< ::substrait::Type_Date*>(
      ::substrait::Type_Date::internal_default_instance());
  ::substrait::_Type_default_instance_.time_ = const_cast< ::substrait::Type_Time*>(
      ::substrait::Type_Time::internal_default_instance());
  ::substrait::_Type_default_instance_.interval_year_ = const_cast< ::substrait::Type_IntervalYear*>(
      ::substrait::Type_IntervalYear::internal_default_instance());
  ::substrait::_Type_default_instance_.interval_day_ = const_cast< ::substrait::Type_IntervalDay*>(
      ::substrait::Type_IntervalDay::internal_default_instance());
  ::substrait::_Type_default_instance_.timestamp_tz_ = const_cast< ::substrait::Type_TimestampTZ*>(
      ::substrait::Type_TimestampTZ::internal_default_instance());
  ::substrait::_Type_default_instance_.uuid_ = const_cast< ::substrait::Type_UUID*>(
      ::substrait::Type_UUID::internal_default_instance());
  ::substrait::_Type_default_instance_.fixed_char_ = const_cast< ::substrait::Type_FixedChar*>(
      ::substrait::Type_FixedChar::internal_default_instance());
  ::substrait::_Type_default_instance_.varchar_ = const_cast< ::substrait::Type_VarChar*>(
      ::substrait::Type_VarChar::internal_default_instance());
  ::substrait::_Type_default_instance_.fixed_binary_ = const_cast< ::substrait::Type_FixedBinary*>(
      ::substrait::Type_FixedBinary::internal_default_instance());
  ::substrait::_Type_default_instance_.decimal_ = const_cast< ::substrait::Type_Decimal*>(
      ::substrait::Type_Decimal::internal_default_instance());
  ::substrait::_Type_default_instance_.struct__ = const_cast< ::substrait::Type_Struct*>(
      ::substrait::Type_Struct::internal_default_instance());
  ::substrait::_Type_default_instance_.list_ = const_cast< ::substrait::Type_List*>(
      ::substrait::Type_List::internal_default_instance());
  ::substrait::_Type_default_instance_.map_ = const_cast< ::substrait::Type_Map*>(
      ::substrait::Type_Map::internal_default_instance());
  ::substrait::_Type_default_instance_.user_defined_ = const_cast< ::substrait::Type_UserDefined*>(
      ::substrait::Type_UserDefined::internal_default_instance());
  ::substrait::_Type_default_instance_.user_defined_type_reference_ = 0u;
}
void Type::set_allocated_bool_(::substrait::Type_Boolean* bool_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (bool_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bool_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bool_, submessage_arena);
    }
    set_has_bool_();
    kind_.bool__ = bool_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.bool)
}
void Type::set_allocated_i8(::substrait::Type_I8* i8) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (i8) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      i8 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, i8, submessage_arena);
    }
    set_has_i8();
    kind_.i8_ = i8;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.i8)
}
void Type::set_allocated_i16(::substrait::Type_I16* i16) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (i16) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      i16 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, i16, submessage_arena);
    }
    set_has_i16();
    kind_.i16_ = i16;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.i16)
}
void Type::set_allocated_i32(::substrait::Type_I32* i32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (i32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      i32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, i32, submessage_arena);
    }
    set_has_i32();
    kind_.i32_ = i32;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.i32)
}
void Type::set_allocated_i64(::substrait::Type_I64* i64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (i64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      i64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, i64, submessage_arena);
    }
    set_has_i64();
    kind_.i64_ = i64;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.i64)
}
void Type::set_allocated_fp32(::substrait::Type_FP32* fp32) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (fp32) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fp32 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fp32, submessage_arena);
    }
    set_has_fp32();
    kind_.fp32_ = fp32;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.fp32)
}
void Type::set_allocated_fp64(::substrait::Type_FP64* fp64) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (fp64) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fp64 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fp64, submessage_arena);
    }
    set_has_fp64();
    kind_.fp64_ = fp64;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.fp64)
}
void Type::set_allocated_string(::substrait::Type_String* string) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (string) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string, submessage_arena);
    }
    set_has_string();
    kind_.string_ = string;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.string)
}
void Type::set_allocated_binary(::substrait::Type_Binary* binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, binary, submessage_arena);
    }
    set_has_binary();
    kind_.binary_ = binary;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.binary)
}
void Type::set_allocated_timestamp(::substrait::Type_Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    set_has_timestamp();
    kind_.timestamp_ = timestamp;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.timestamp)
}
void Type::set_allocated_date(::substrait::Type_Date* date) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (date) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    kind_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.date)
}
void Type::set_allocated_time(::substrait::Type_Time* time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    kind_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.time)
}
void Type::set_allocated_interval_year(::substrait::Type_IntervalYear* interval_year) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (interval_year) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval_year = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval_year, submessage_arena);
    }
    set_has_interval_year();
    kind_.interval_year_ = interval_year;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.interval_year)
}
void Type::set_allocated_interval_day(::substrait::Type_IntervalDay* interval_day) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (interval_day) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval_day = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval_day, submessage_arena);
    }
    set_has_interval_day();
    kind_.interval_day_ = interval_day;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.interval_day)
}
void Type::set_allocated_timestamp_tz(::substrait::Type_TimestampTZ* timestamp_tz) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (timestamp_tz) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp_tz = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_tz, submessage_arena);
    }
    set_has_timestamp_tz();
    kind_.timestamp_tz_ = timestamp_tz;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.timestamp_tz)
}
void Type::set_allocated_uuid(::substrait::Type_UUID* uuid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (uuid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uuid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uuid, submessage_arena);
    }
    set_has_uuid();
    kind_.uuid_ = uuid;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.uuid)
}
void Type::set_allocated_fixed_char(::substrait::Type_FixedChar* fixed_char) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (fixed_char) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fixed_char = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fixed_char, submessage_arena);
    }
    set_has_fixed_char();
    kind_.fixed_char_ = fixed_char;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.fixed_char)
}
void Type::set_allocated_varchar(::substrait::Type_VarChar* varchar) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (varchar) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      varchar = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, varchar, submessage_arena);
    }
    set_has_varchar();
    kind_.varchar_ = varchar;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.varchar)
}
void Type::set_allocated_fixed_binary(::substrait::Type_FixedBinary* fixed_binary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (fixed_binary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fixed_binary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fixed_binary, submessage_arena);
    }
    set_has_fixed_binary();
    kind_.fixed_binary_ = fixed_binary;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.fixed_binary)
}
void Type::set_allocated_decimal(::substrait::Type_Decimal* decimal) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (decimal) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      decimal = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, decimal, submessage_arena);
    }
    set_has_decimal();
    kind_.decimal_ = decimal;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.decimal)
}
void Type::set_allocated_struct_(::substrait::Type_Struct* struct_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (struct_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      struct_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    set_has_struct_();
    kind_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.struct)
}
void Type::set_allocated_list(::substrait::Type_List* list) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (list) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      list = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    kind_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.list)
}
void Type::set_allocated_map(::substrait::Type_Map* map) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (map) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    kind_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.map)
}
void Type::set_allocated_user_defined(::substrait::Type_UserDefined* user_defined) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (user_defined) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user_defined = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user_defined, submessage_arena);
    }
    set_has_user_defined();
    kind_.user_defined_ = user_defined;
  }
  // @@protoc_insertion_point(field_set_allocated:substrait.Type.user_defined)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kBoolFieldNumber;
const int Type::kI8FieldNumber;
const int Type::kI16FieldNumber;
const int Type::kI32FieldNumber;
const int Type::kI64FieldNumber;
const int Type::kFp32FieldNumber;
const int Type::kFp64FieldNumber;
const int Type::kStringFieldNumber;
const int Type::kBinaryFieldNumber;
const int Type::kTimestampFieldNumber;
const int Type::kDateFieldNumber;
const int Type::kTimeFieldNumber;
const int Type::kIntervalYearFieldNumber;
const int Type::kIntervalDayFieldNumber;
const int Type::kTimestampTzFieldNumber;
const int Type::kUuidFieldNumber;
const int Type::kFixedCharFieldNumber;
const int Type::kVarcharFieldNumber;
const int Type::kFixedBinaryFieldNumber;
const int Type::kDecimalFieldNumber;
const int Type::kStructFieldNumber;
const int Type::kListFieldNumber;
const int Type::kMapFieldNumber;
const int Type::kUserDefinedFieldNumber;
const int Type::kUserDefinedTypeReferenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kBool: {
      mutable_bool_()->::substrait::Type_Boolean::MergeFrom(from.bool_());
      break;
    }
    case kI8: {
      mutable_i8()->::substrait::Type_I8::MergeFrom(from.i8());
      break;
    }
    case kI16: {
      mutable_i16()->::substrait::Type_I16::MergeFrom(from.i16());
      break;
    }
    case kI32: {
      mutable_i32()->::substrait::Type_I32::MergeFrom(from.i32());
      break;
    }
    case kI64: {
      mutable_i64()->::substrait::Type_I64::MergeFrom(from.i64());
      break;
    }
    case kFp32: {
      mutable_fp32()->::substrait::Type_FP32::MergeFrom(from.fp32());
      break;
    }
    case kFp64: {
      mutable_fp64()->::substrait::Type_FP64::MergeFrom(from.fp64());
      break;
    }
    case kString: {
      mutable_string()->::substrait::Type_String::MergeFrom(from.string());
      break;
    }
    case kBinary: {
      mutable_binary()->::substrait::Type_Binary::MergeFrom(from.binary());
      break;
    }
    case kTimestamp: {
      mutable_timestamp()->::substrait::Type_Timestamp::MergeFrom(from.timestamp());
      break;
    }
    case kDate: {
      mutable_date()->::substrait::Type_Date::MergeFrom(from.date());
      break;
    }
    case kTime: {
      mutable_time()->::substrait::Type_Time::MergeFrom(from.time());
      break;
    }
    case kIntervalYear: {
      mutable_interval_year()->::substrait::Type_IntervalYear::MergeFrom(from.interval_year());
      break;
    }
    case kIntervalDay: {
      mutable_interval_day()->::substrait::Type_IntervalDay::MergeFrom(from.interval_day());
      break;
    }
    case kTimestampTz: {
      mutable_timestamp_tz()->::substrait::Type_TimestampTZ::MergeFrom(from.timestamp_tz());
      break;
    }
    case kUuid: {
      mutable_uuid()->::substrait::Type_UUID::MergeFrom(from.uuid());
      break;
    }
    case kFixedChar: {
      mutable_fixed_char()->::substrait::Type_FixedChar::MergeFrom(from.fixed_char());
      break;
    }
    case kVarchar: {
      mutable_varchar()->::substrait::Type_VarChar::MergeFrom(from.varchar());
      break;
    }
    case kFixedBinary: {
      mutable_fixed_binary()->::substrait::Type_FixedBinary::MergeFrom(from.fixed_binary());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::substrait::Type_Decimal::MergeFrom(from.decimal());
      break;
    }
    case kStruct: {
      mutable_struct_()->::substrait::Type_Struct::MergeFrom(from.struct_());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Type_List::MergeFrom(from.list());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Type_Map::MergeFrom(from.map());
      break;
    }
    case kUserDefined: {
      mutable_user_defined()->::substrait::Type_UserDefined::MergeFrom(from.user_defined());
      break;
    }
    case kUserDefinedTypeReference: {
      set_user_defined_type_reference(from.user_defined_type_reference());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:substrait.Type)
}

void Type::SharedCtor() {
  clear_has_kind();
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:substrait.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  if (has_kind()) {
    clear_kind();
  }
}

void Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:substrait.Type)
  switch (kind_case()) {
    case kBool: {
      delete kind_.bool__;
      break;
    }
    case kI8: {
      delete kind_.i8_;
      break;
    }
    case kI16: {
      delete kind_.i16_;
      break;
    }
    case kI32: {
      delete kind_.i32_;
      break;
    }
    case kI64: {
      delete kind_.i64_;
      break;
    }
    case kFp32: {
      delete kind_.fp32_;
      break;
    }
    case kFp64: {
      delete kind_.fp64_;
      break;
    }
    case kString: {
      delete kind_.string_;
      break;
    }
    case kBinary: {
      delete kind_.binary_;
      break;
    }
    case kTimestamp: {
      delete kind_.timestamp_;
      break;
    }
    case kDate: {
      delete kind_.date_;
      break;
    }
    case kTime: {
      delete kind_.time_;
      break;
    }
    case kIntervalYear: {
      delete kind_.interval_year_;
      break;
    }
    case kIntervalDay: {
      delete kind_.interval_day_;
      break;
    }
    case kTimestampTz: {
      delete kind_.timestamp_tz_;
      break;
    }
    case kUuid: {
      delete kind_.uuid_;
      break;
    }
    case kFixedChar: {
      delete kind_.fixed_char_;
      break;
    }
    case kVarchar: {
      delete kind_.varchar_;
      break;
    }
    case kFixedBinary: {
      delete kind_.fixed_binary_;
      break;
    }
    case kDecimal: {
      delete kind_.decimal_;
      break;
    }
    case kStruct: {
      delete kind_.struct__;
      break;
    }
    case kList: {
      delete kind_.list_;
      break;
    }
    case kMap: {
      delete kind_.map_;
      break;
    }
    case kUserDefined: {
      delete kind_.user_defined_;
      break;
    }
    case kUserDefinedTypeReference: {
      // No need to clear
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .substrait.Type.Boolean bool = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.I8 i8 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i8()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.I16 i16 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i16()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.I32 i32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.I64 i64 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_i64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.FP32 fp32 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fp32()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.FP64 fp64 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fp64()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.String string = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Binary binary = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Timestamp timestamp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Date date = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Time time = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.IntervalYear interval_year = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval_year()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.IntervalDay interval_day = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval_day()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.FixedChar fixed_char = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed_char()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.VarChar varchar = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_varchar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.FixedBinary fixed_binary = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fixed_binary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Decimal decimal = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decimal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Struct struct = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.List list = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Map map = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.TimestampTZ timestamp_tz = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_tz()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.UserDefined user_defined = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_defined()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_defined_type_reference = 31 [deprecated = true];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          clear_kind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_.user_defined_type_reference_)));
          set_has_user_defined_type_reference();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.UUID uuid = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type.Boolean bool = 1;
  if (has_bool_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bool_(), output);
  }

  // .substrait.Type.I8 i8 = 2;
  if (has_i8()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_i8(), output);
  }

  // .substrait.Type.I16 i16 = 3;
  if (has_i16()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_i16(), output);
  }

  // .substrait.Type.I32 i32 = 5;
  if (has_i32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_i32(), output);
  }

  // .substrait.Type.I64 i64 = 7;
  if (has_i64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_i64(), output);
  }

  // .substrait.Type.FP32 fp32 = 10;
  if (has_fp32()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_fp32(), output);
  }

  // .substrait.Type.FP64 fp64 = 11;
  if (has_fp64()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_fp64(), output);
  }

  // .substrait.Type.String string = 12;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_string(), output);
  }

  // .substrait.Type.Binary binary = 13;
  if (has_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_binary(), output);
  }

  // .substrait.Type.Timestamp timestamp = 14;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_timestamp(), output);
  }

  // .substrait.Type.Date date = 16;
  if (has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_date(), output);
  }

  // .substrait.Type.Time time = 17;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_time(), output);
  }

  // .substrait.Type.IntervalYear interval_year = 19;
  if (has_interval_year()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_interval_year(), output);
  }

  // .substrait.Type.IntervalDay interval_day = 20;
  if (has_interval_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_interval_day(), output);
  }

  // .substrait.Type.FixedChar fixed_char = 21;
  if (has_fixed_char()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_fixed_char(), output);
  }

  // .substrait.Type.VarChar varchar = 22;
  if (has_varchar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->_internal_varchar(), output);
  }

  // .substrait.Type.FixedBinary fixed_binary = 23;
  if (has_fixed_binary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->_internal_fixed_binary(), output);
  }

  // .substrait.Type.Decimal decimal = 24;
  if (has_decimal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->_internal_decimal(), output);
  }

  // .substrait.Type.Struct struct = 25;
  if (has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_struct_(), output);
  }

  // .substrait.Type.List list = 27;
  if (has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_list(), output);
  }

  // .substrait.Type.Map map = 28;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_map(), output);
  }

  // .substrait.Type.TimestampTZ timestamp_tz = 29;
  if (has_timestamp_tz()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_timestamp_tz(), output);
  }

  // .substrait.Type.UserDefined user_defined = 30;
  if (has_user_defined()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->_internal_user_defined(), output);
  }

  // uint32 user_defined_type_reference = 31 [deprecated = true];
  if (has_user_defined_type_reference()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->user_defined_type_reference(), output);
  }

  // .substrait.Type.UUID uuid = 32;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->_internal_uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .substrait.Type.Boolean bool = 1;
  if (has_bool_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bool_(), deterministic, target);
  }

  // .substrait.Type.I8 i8 = 2;
  if (has_i8()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_i8(), deterministic, target);
  }

  // .substrait.Type.I16 i16 = 3;
  if (has_i16()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_i16(), deterministic, target);
  }

  // .substrait.Type.I32 i32 = 5;
  if (has_i32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_i32(), deterministic, target);
  }

  // .substrait.Type.I64 i64 = 7;
  if (has_i64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_i64(), deterministic, target);
  }

  // .substrait.Type.FP32 fp32 = 10;
  if (has_fp32()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_fp32(), deterministic, target);
  }

  // .substrait.Type.FP64 fp64 = 11;
  if (has_fp64()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_fp64(), deterministic, target);
  }

  // .substrait.Type.String string = 12;
  if (has_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_string(), deterministic, target);
  }

  // .substrait.Type.Binary binary = 13;
  if (has_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_binary(), deterministic, target);
  }

  // .substrait.Type.Timestamp timestamp = 14;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_timestamp(), deterministic, target);
  }

  // .substrait.Type.Date date = 16;
  if (has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_date(), deterministic, target);
  }

  // .substrait.Type.Time time = 17;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_time(), deterministic, target);
  }

  // .substrait.Type.IntervalYear interval_year = 19;
  if (has_interval_year()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_interval_year(), deterministic, target);
  }

  // .substrait.Type.IntervalDay interval_day = 20;
  if (has_interval_day()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_interval_day(), deterministic, target);
  }

  // .substrait.Type.FixedChar fixed_char = 21;
  if (has_fixed_char()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_fixed_char(), deterministic, target);
  }

  // .substrait.Type.VarChar varchar = 22;
  if (has_varchar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->_internal_varchar(), deterministic, target);
  }

  // .substrait.Type.FixedBinary fixed_binary = 23;
  if (has_fixed_binary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->_internal_fixed_binary(), deterministic, target);
  }

  // .substrait.Type.Decimal decimal = 24;
  if (has_decimal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->_internal_decimal(), deterministic, target);
  }

  // .substrait.Type.Struct struct = 25;
  if (has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_struct_(), deterministic, target);
  }

  // .substrait.Type.List list = 27;
  if (has_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_list(), deterministic, target);
  }

  // .substrait.Type.Map map = 28;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_map(), deterministic, target);
  }

  // .substrait.Type.TimestampTZ timestamp_tz = 29;
  if (has_timestamp_tz()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_timestamp_tz(), deterministic, target);
  }

  // .substrait.Type.UserDefined user_defined = 30;
  if (has_user_defined()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->_internal_user_defined(), deterministic, target);
  }

  // uint32 user_defined_type_reference = 31 [deprecated = true];
  if (has_user_defined_type_reference()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->user_defined_type_reference(), target);
  }

  // .substrait.Type.UUID uuid = 32;
  if (has_uuid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32, this->_internal_uuid(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (kind_case()) {
    // .substrait.Type.Boolean bool = 1;
    case kBool: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.bool__);
      break;
    }
    // .substrait.Type.I8 i8 = 2;
    case kI8: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.i8_);
      break;
    }
    // .substrait.Type.I16 i16 = 3;
    case kI16: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.i16_);
      break;
    }
    // .substrait.Type.I32 i32 = 5;
    case kI32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.i32_);
      break;
    }
    // .substrait.Type.I64 i64 = 7;
    case kI64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.i64_);
      break;
    }
    // .substrait.Type.FP32 fp32 = 10;
    case kFp32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.fp32_);
      break;
    }
    // .substrait.Type.FP64 fp64 = 11;
    case kFp64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.fp64_);
      break;
    }
    // .substrait.Type.String string = 12;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.string_);
      break;
    }
    // .substrait.Type.Binary binary = 13;
    case kBinary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.binary_);
      break;
    }
    // .substrait.Type.Timestamp timestamp = 14;
    case kTimestamp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.timestamp_);
      break;
    }
    // .substrait.Type.Date date = 16;
    case kDate: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.date_);
      break;
    }
    // .substrait.Type.Time time = 17;
    case kTime: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.time_);
      break;
    }
    // .substrait.Type.IntervalYear interval_year = 19;
    case kIntervalYear: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.interval_year_);
      break;
    }
    // .substrait.Type.IntervalDay interval_day = 20;
    case kIntervalDay: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.interval_day_);
      break;
    }
    // .substrait.Type.TimestampTZ timestamp_tz = 29;
    case kTimestampTz: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.timestamp_tz_);
      break;
    }
    // .substrait.Type.UUID uuid = 32;
    case kUuid: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.uuid_);
      break;
    }
    // .substrait.Type.FixedChar fixed_char = 21;
    case kFixedChar: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.fixed_char_);
      break;
    }
    // .substrait.Type.VarChar varchar = 22;
    case kVarchar: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.varchar_);
      break;
    }
    // .substrait.Type.FixedBinary fixed_binary = 23;
    case kFixedBinary: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.fixed_binary_);
      break;
    }
    // .substrait.Type.Decimal decimal = 24;
    case kDecimal: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.decimal_);
      break;
    }
    // .substrait.Type.Struct struct = 25;
    case kStruct: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.struct__);
      break;
    }
    // .substrait.Type.List list = 27;
    case kList: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.list_);
      break;
    }
    // .substrait.Type.Map map = 28;
    case kMap: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.map_);
      break;
    }
    // .substrait.Type.UserDefined user_defined = 30;
    case kUserDefined: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.user_defined_);
      break;
    }
    // uint32 user_defined_type_reference = 31 [deprecated = true];
    case kUserDefinedTypeReference: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_defined_type_reference());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kBool: {
      mutable_bool_()->::substrait::Type_Boolean::MergeFrom(from.bool_());
      break;
    }
    case kI8: {
      mutable_i8()->::substrait::Type_I8::MergeFrom(from.i8());
      break;
    }
    case kI16: {
      mutable_i16()->::substrait::Type_I16::MergeFrom(from.i16());
      break;
    }
    case kI32: {
      mutable_i32()->::substrait::Type_I32::MergeFrom(from.i32());
      break;
    }
    case kI64: {
      mutable_i64()->::substrait::Type_I64::MergeFrom(from.i64());
      break;
    }
    case kFp32: {
      mutable_fp32()->::substrait::Type_FP32::MergeFrom(from.fp32());
      break;
    }
    case kFp64: {
      mutable_fp64()->::substrait::Type_FP64::MergeFrom(from.fp64());
      break;
    }
    case kString: {
      mutable_string()->::substrait::Type_String::MergeFrom(from.string());
      break;
    }
    case kBinary: {
      mutable_binary()->::substrait::Type_Binary::MergeFrom(from.binary());
      break;
    }
    case kTimestamp: {
      mutable_timestamp()->::substrait::Type_Timestamp::MergeFrom(from.timestamp());
      break;
    }
    case kDate: {
      mutable_date()->::substrait::Type_Date::MergeFrom(from.date());
      break;
    }
    case kTime: {
      mutable_time()->::substrait::Type_Time::MergeFrom(from.time());
      break;
    }
    case kIntervalYear: {
      mutable_interval_year()->::substrait::Type_IntervalYear::MergeFrom(from.interval_year());
      break;
    }
    case kIntervalDay: {
      mutable_interval_day()->::substrait::Type_IntervalDay::MergeFrom(from.interval_day());
      break;
    }
    case kTimestampTz: {
      mutable_timestamp_tz()->::substrait::Type_TimestampTZ::MergeFrom(from.timestamp_tz());
      break;
    }
    case kUuid: {
      mutable_uuid()->::substrait::Type_UUID::MergeFrom(from.uuid());
      break;
    }
    case kFixedChar: {
      mutable_fixed_char()->::substrait::Type_FixedChar::MergeFrom(from.fixed_char());
      break;
    }
    case kVarchar: {
      mutable_varchar()->::substrait::Type_VarChar::MergeFrom(from.varchar());
      break;
    }
    case kFixedBinary: {
      mutable_fixed_binary()->::substrait::Type_FixedBinary::MergeFrom(from.fixed_binary());
      break;
    }
    case kDecimal: {
      mutable_decimal()->::substrait::Type_Decimal::MergeFrom(from.decimal());
      break;
    }
    case kStruct: {
      mutable_struct_()->::substrait::Type_Struct::MergeFrom(from.struct_());
      break;
    }
    case kList: {
      mutable_list()->::substrait::Type_List::MergeFrom(from.list());
      break;
    }
    case kMap: {
      mutable_map()->::substrait::Type_Map::MergeFrom(from.map());
      break;
    }
    case kUserDefined: {
      mutable_user_defined()->::substrait::Type_UserDefined::MergeFrom(from.user_defined());
      break;
    }
    case kUserDefinedTypeReference: {
      set_user_defined_type_reference(from.user_defined_type_reference());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NamedStruct::InitAsDefaultInstance() {
  ::substrait::_NamedStruct_default_instance_._instance.get_mutable()->struct__ = const_cast< ::substrait::Type_Struct*>(
      ::substrait::Type_Struct::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NamedStruct::kNamesFieldNumber;
const int NamedStruct::kStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NamedStruct::NamedStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_substrait_2ftype_2eproto::scc_info_NamedStruct.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:substrait.NamedStruct)
}
NamedStruct::NamedStruct(const NamedStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_struct_()) {
    struct__ = new ::substrait::Type_Struct(*from.struct__);
  } else {
    struct__ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:substrait.NamedStruct)
}

void NamedStruct::SharedCtor() {
  struct__ = NULL;
}

NamedStruct::~NamedStruct() {
  // @@protoc_insertion_point(destructor:substrait.NamedStruct)
  SharedDtor();
}

void NamedStruct::SharedDtor() {
  if (this != internal_default_instance()) delete struct__;
}

void NamedStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NamedStruct::descriptor() {
  ::protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NamedStruct& NamedStruct::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_substrait_2ftype_2eproto::scc_info_NamedStruct.base);
  return *internal_default_instance();
}


void NamedStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:substrait.NamedStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  if (GetArenaNoVirtual() == NULL && struct__ != NULL) {
    delete struct__;
  }
  struct__ = NULL;
  _internal_metadata_.Clear();
}

bool NamedStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:substrait.NamedStruct)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "substrait.NamedStruct.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .substrait.Type.Struct struct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:substrait.NamedStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:substrait.NamedStruct)
  return false;
#undef DO_
}

void NamedStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:substrait.NamedStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.NamedStruct.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  // .substrait.Type.Struct struct = 2;
  if (this->has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_struct_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:substrait.NamedStruct)
}

::google::protobuf::uint8* NamedStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:substrait.NamedStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "substrait.NamedStruct.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  // .substrait.Type.Struct struct = 2;
  if (this->has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_struct_(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:substrait.NamedStruct)
  return target;
}

size_t NamedStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:substrait.NamedStruct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // .substrait.Type.Struct struct = 2;
  if (this->has_struct_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *struct__);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NamedStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:substrait.NamedStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const NamedStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NamedStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:substrait.NamedStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:substrait.NamedStruct)
    MergeFrom(*source);
  }
}

void NamedStruct::MergeFrom(const NamedStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:substrait.NamedStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.has_struct_()) {
    mutable_struct_()->::substrait::Type_Struct::MergeFrom(from.struct_());
  }
}

void NamedStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:substrait.NamedStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamedStruct::CopyFrom(const NamedStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:substrait.NamedStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamedStruct::IsInitialized() const {
  return true;
}

void NamedStruct::Swap(NamedStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NamedStruct::InternalSwap(NamedStruct* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  swap(struct__, other->struct__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NamedStruct::GetMetadata() const {
  protobuf_substrait_2ftype_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_substrait_2ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace substrait
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Boolean* Arena::CreateMaybeMessage< ::substrait::Type_Boolean >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Boolean >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_I8* Arena::CreateMaybeMessage< ::substrait::Type_I8 >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_I8 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_I16* Arena::CreateMaybeMessage< ::substrait::Type_I16 >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_I16 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_I32* Arena::CreateMaybeMessage< ::substrait::Type_I32 >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_I32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_I64* Arena::CreateMaybeMessage< ::substrait::Type_I64 >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_I64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_FP32* Arena::CreateMaybeMessage< ::substrait::Type_FP32 >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_FP32 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_FP64* Arena::CreateMaybeMessage< ::substrait::Type_FP64 >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_FP64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_String* Arena::CreateMaybeMessage< ::substrait::Type_String >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Binary* Arena::CreateMaybeMessage< ::substrait::Type_Binary >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Binary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Timestamp* Arena::CreateMaybeMessage< ::substrait::Type_Timestamp >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Timestamp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Date* Arena::CreateMaybeMessage< ::substrait::Type_Date >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Date >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Time* Arena::CreateMaybeMessage< ::substrait::Type_Time >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Time >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_TimestampTZ* Arena::CreateMaybeMessage< ::substrait::Type_TimestampTZ >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_TimestampTZ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_IntervalYear* Arena::CreateMaybeMessage< ::substrait::Type_IntervalYear >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_IntervalYear >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_IntervalDay* Arena::CreateMaybeMessage< ::substrait::Type_IntervalDay >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_IntervalDay >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_UUID* Arena::CreateMaybeMessage< ::substrait::Type_UUID >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_UUID >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_FixedChar* Arena::CreateMaybeMessage< ::substrait::Type_FixedChar >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_FixedChar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_VarChar* Arena::CreateMaybeMessage< ::substrait::Type_VarChar >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_VarChar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_FixedBinary* Arena::CreateMaybeMessage< ::substrait::Type_FixedBinary >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_FixedBinary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Decimal* Arena::CreateMaybeMessage< ::substrait::Type_Decimal >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Decimal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Struct* Arena::CreateMaybeMessage< ::substrait::Type_Struct >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Struct >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_List* Arena::CreateMaybeMessage< ::substrait::Type_List >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_List >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Map* Arena::CreateMaybeMessage< ::substrait::Type_Map >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Map >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_UserDefined* Arena::CreateMaybeMessage< ::substrait::Type_UserDefined >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_UserDefined >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type_Parameter* Arena::CreateMaybeMessage< ::substrait::Type_Parameter >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type_Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::Type* Arena::CreateMaybeMessage< ::substrait::Type >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::substrait::NamedStruct* Arena::CreateMaybeMessage< ::substrait::NamedStruct >(Arena* arena) {
  return Arena::CreateInternal< ::substrait::NamedStruct >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
